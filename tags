!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/95975bd/
#content	plugged/emmet-vim/docs/static/css/style-sites.css	/^#content {$/;"	i
#tty	plugged/emmet-vim/docs/static/css/style-sites.css	/^#tty {$/;"	i
$M	config/03.remaps.vim	/^cnoremap $M <CR>:M''<CR>$/;"	m
$NODE_ENV	plugged/coc.nvim/src/__tests__/vimrc	/^let $NODE_ENV='test'$/;"	v
$PERL6_EXCEPTIONS_HANDLER	plugged/ale/ale_linters/perl6/perl6.vim	/^let $PERL6_EXCEPTIONS_HANDLER = 'JSON'$/;"	v
$RAKUDO_ERROR_COLOR	plugged/ale/ale_linters/perl6/perl6.vim	/^let $RAKUDO_ERROR_COLOR = 0$/;"	v
$T	config/03.remaps.vim	/^cnoremap $T <CR>:T''<CR>$/;"	m
$d	config/03.remaps.vim	/^cnoremap $d <CR>:d<CR>``$/;"	m
$m	config/03.remaps.vim	/^cnoremap $m <CR>:m''<CR>$/;"	m
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerCommand"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.1
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerModule"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.0
$ref	plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerSocket"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.2
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerCommand.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerModule.allOf.0
$ref	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerSocket.allOf.0
$schema	plugged/coc.nvim/data/schema.json	/^  "$schema": "http:\/\/json-schema.org\/draft-06\/schema",$/;"	s
$t	config/03.remaps.vim	/^cnoremap $t <CR>:t''<CR>$/;"	m
-	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> -    :<C-U>exe <SID>BlameJump('')<CR>$/;"	m
.	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> .           :call b:buffergator_catalog_viewer.visit_targe/;"	m
.	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          .     :<C-U> <C-R>=<SID>fnameescape(fugitive#Real(@%))<CR><Home>$/;"	m
.	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          . :<C-U> <C-R>=<SID>StageArgs(0)<CR><Home>$/;"	m
.	plugged/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer>          .     :<C-U> <C-R>=<SID>fnameescape(fugitive#Real(@%))<CR><Home>$/;"	m
.	plugged/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer>          . :<C-U> <C-R>=<SID>StageArgs(1)<CR><Home>$/;"	m
.	plugged/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
.blocked-content	plugged/emmet-vim/docs/static/css/style-sites.css	/^.blocked-content {$/;"	c
.maintitle	plugged/emmet-vim/docs/static/css/style-sites.css	/^.maintitle {$/;"	c
.subtitle	plugged/emmet-vim/docs/static/css/style-sites.css	/^.subtitle {$/;"	c
0	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["javascript", "vue", "json"],$/;"	s	array:coc.preferences.formatOnSaveFiletypes
0	coc-settings.json	/^  "eslint.filetypes": [ "javascript", "vue" ],$/;"	s	array:eslint.filetypes
0	coc-settings.json	/^  "html.filetypes": [ "html", "vue"],$/;"	s	array:html.filetypes
0	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
0	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerCommand.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerModule.allOf
0	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerSocket.allOf
0	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
0	plugged/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
0	plugged/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
0	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
0	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
0	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
0	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
0	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
0	plugged/coc.nvim/package.json	/^      "lib\/extensions\/**\/*.js"$/;"	s	array:pkg.scripts
0	plugged/coc.nvim/package.json	/^      "node8-linux-x64",$/;"	s	array:pkg.targets
0	plugged/coc.nvim/package.json	/^      "ts",$/;"	s	array:jest.moduleFileExtensions
0	plugged/coc.nvim/package.json	/^    "complete",$/;"	s	array:keywords
0	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^      {$/;"	o	array:contributes.snippets
0	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^      "for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {",$/;"	s	array:For Loop.body
0	plugged/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	s	array:compilerOptions.lib
0	plugged/coc.nvim/tsconfig.json	/^  "include": ["src"],$/;"	s	array:include
0.1.0	plugged/nord-vim/CHANGELOG.md	/^# 0.1.0$/;"	c
0.1.1	plugged/nord-vim/CHANGELOG.md	/^# 0.1.1$/;"	c
0.1.2	plugged/nord-vim/CHANGELOG.md	/^# 0.1.2$/;"	c
0.1.2 (2013-06-25)	plugged/vim-wakatime/HISTORY.rst	/^0.1.2 (2013-06-25)$/;"	s	chapter:History
0.1.3 (2013-07-02)	plugged/vim-wakatime/HISTORY.rst	/^0.1.3 (2013-07-02)$/;"	s	chapter:History
0.10.0	plugged/nord-vim/CHANGELOG.md	/^# 0.10.0$/;"	c
0.2.0	plugged/nord-vim/CHANGELOG.md	/^# 0.2.0$/;"	c
0.2.1 (2013-07-07)	plugged/vim-wakatime/HISTORY.rst	/^0.2.1 (2013-07-07)$/;"	s	chapter:History
0.2.2 (2013-07-10)	plugged/vim-wakatime/HISTORY.rst	/^0.2.2 (2013-07-10)$/;"	s	chapter:History
0.2.3 (2013-07-16)	plugged/vim-wakatime/HISTORY.rst	/^0.2.3 (2013-07-16)$/;"	s	chapter:History
0.2.4 (2013-07-20)	plugged/vim-wakatime/HISTORY.rst	/^0.2.4 (2013-07-20)$/;"	s	chapter:History
0.2.5 (2013-07-22)	plugged/vim-wakatime/HISTORY.rst	/^0.2.5 (2013-07-22)$/;"	s	chapter:History
0.2.6 (2013-07-29)	plugged/vim-wakatime/HISTORY.rst	/^0.2.6 (2013-07-29)$/;"	s	chapter:History
0.3.0	plugged/nord-vim/CHANGELOG.md	/^# 0.3.0$/;"	c
0.4.0	plugged/nord-vim/CHANGELOG.md	/^# 0.4.0$/;"	c
0.5.0	plugged/nord-vim/CHANGELOG.md	/^# 0.5.0$/;"	c
0.6.0	plugged/nord-vim/CHANGELOG.md	/^# 0.6.0$/;"	c
0.7.0	plugged/nord-vim/CHANGELOG.md	/^# 0.7.0$/;"	c
0.8.0	plugged/nord-vim/CHANGELOG.md	/^# 0.8.0$/;"	c
0.9.0	plugged/nord-vim/CHANGELOG.md	/^# 0.9.0$/;"	c
1	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["javascript", "vue", "json"],$/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	coc-settings.json	/^  "eslint.filetypes": [ "javascript", "vue" ],$/;"	s	array:eslint.filetypes
1	coc-settings.json	/^  "html.filetypes": [ "html", "vue"],$/;"	s	array:html.filetypes
1	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
1	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
1	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
1	plugged/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
1	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
1	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
1	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
1	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
1	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
1	plugged/coc.nvim/package.json	/^      "node8-macos-x64",$/;"	s	array:pkg.targets
1	plugged/coc.nvim/package.json	/^      "tsx",$/;"	s	array:jest.moduleFileExtensions
1	plugged/coc.nvim/package.json	/^    "neovim"$/;"	s	array:keywords
1	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^      {$/;"	o	array:contributes.snippets
1	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^        "\\tconst ${3:element} = ${2:array}[${1:index}];",$/;"	s	array:For Loop.body
1	plugged/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	s	array:compilerOptions.lib
1. Supported Languages and Tools	plugged/ale/README.md	/^## 1. Supported Languages and Tools$/;"	s
1.0 Release Candidate	plugged/papercolor-theme/ROADMAP.md	/^# 1.0 Release Candidate$/;"	c
1.0.0 (2013-08-12)	plugged/vim-wakatime/HISTORY.rst	/^1.0.0 (2013-08-12)$/;"	s	chapter:History
1.1.0 (2013-08-15)	plugged/vim-wakatime/HISTORY.rst	/^1.1.0 (2013-08-15)$/;"	s	chapter:History
1.1.1 (2013-08-25)	plugged/vim-wakatime/HISTORY.rst	/^1.1.1 (2013-08-25)$/;"	s	chapter:History
1.1.2 (2013-09-04)	plugged/vim-wakatime/HISTORY.rst	/^1.1.2 (2013-09-04)$/;"	s	chapter:History
1.1.3 (2013-09-04)	plugged/vim-wakatime/HISTORY.rst	/^1.1.3 (2013-09-04)$/;"	s	chapter:History
1.1.4 (2013-09-06)	plugged/vim-wakatime/HISTORY.rst	/^1.1.4 (2013-09-06)$/;"	s	chapter:History
1.1.5 (2013-09-07)	plugged/vim-wakatime/HISTORY.rst	/^1.1.5 (2013-09-07)$/;"	s	chapter:History
1.2.0 (2013-09-22)	plugged/vim-wakatime/HISTORY.rst	/^1.2.0 (2013-09-22)$/;"	s	chapter:History
1.2.1 (2013-09-30)	plugged/vim-wakatime/HISTORY.rst	/^1.2.1 (2013-09-30)$/;"	s	chapter:History
1.2.2 (2013-10-13)	plugged/vim-wakatime/HISTORY.rst	/^1.2.2 (2013-10-13)$/;"	s	chapter:History
1.2.3 (2013-10-27)	plugged/vim-wakatime/HISTORY.rst	/^1.2.3 (2013-10-27)$/;"	s	chapter:History
1.3.0 (2013-11-28)	plugged/vim-wakatime/HISTORY.rst	/^1.3.0 (2013-11-28)$/;"	s	chapter:History
1.3.1 (2013-12-02)	plugged/vim-wakatime/HISTORY.rst	/^1.3.1 (2013-12-02)$/;"	s	chapter:History
1.4.0 (2013-12-13)	plugged/vim-wakatime/HISTORY.rst	/^1.4.0 (2013-12-13)$/;"	s	chapter:History
1.5.0 (2013-12-16)	plugged/vim-wakatime/HISTORY.rst	/^1.5.0 (2013-12-16)$/;"	s	chapter:History
1.5.1 (2014-01-15)	plugged/vim-wakatime/HISTORY.rst	/^1.5.1 (2014-01-15)$/;"	s	chapter:History
1.5.2 (2014-02-05)	plugged/vim-wakatime/HISTORY.rst	/^1.5.2 (2014-02-05)$/;"	s	chapter:History
1.5.3 (2014-02-28)	plugged/vim-wakatime/HISTORY.rst	/^1.5.3 (2014-02-28)$/;"	s	chapter:History
1.5.4 (2014-03-05)	plugged/vim-wakatime/HISTORY.rst	/^1.5.4 (2014-03-05)$/;"	s	chapter:History
10 items? That is not close to be enough!	plugged/nvim-miniyank/README.md	/^## 10 items? That is not close to be enough!$/;"	s
2	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["javascript", "vue", "json"],$/;"	s	array:coc.preferences.formatOnSaveFiletypes
2	plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
2	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
2	plugged/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
2	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
2	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
2	plugged/coc.nvim/package.json	/^      "json",$/;"	s	array:jest.moduleFileExtensions
2	plugged/coc.nvim/package.json	/^      "node8-win-x64"$/;"	s	array:pkg.targets
2	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^        "\\t$0",$/;"	s	array:For Loop.body
2. Usage	plugged/ale/README.md	/^## 2. Usage$/;"	s
2.0.0 (2014-05-25)	plugged/vim-wakatime/HISTORY.rst	/^2.0.0 (2014-05-25)$/;"	s	chapter:History
2.0.1 (2014-05-26)	plugged/vim-wakatime/HISTORY.rst	/^2.0.1 (2014-05-26)$/;"	s	chapter:History
2.0.10 (2014-11-10)	plugged/vim-wakatime/HISTORY.rst	/^2.0.10 (2014-11-10)$/;"	s	chapter:History
2.0.11 (2014-11-12)	plugged/vim-wakatime/HISTORY.rst	/^2.0.11 (2014-11-12)$/;"	s	chapter:History
2.0.12 (2014-11-18)	plugged/vim-wakatime/HISTORY.rst	/^2.0.12 (2014-11-18)$/;"	s	chapter:History
2.0.13 (2014-11-30)	plugged/vim-wakatime/HISTORY.rst	/^2.0.13 (2014-11-30)$/;"	s	chapter:History
2.0.14 (2014-12-04)	plugged/vim-wakatime/HISTORY.rst	/^2.0.14 (2014-12-04)$/;"	s	chapter:History
2.0.15 (2014-12-05)	plugged/vim-wakatime/HISTORY.rst	/^2.0.15 (2014-12-05)$/;"	s	chapter:History
2.0.16 (2014-12-22)	plugged/vim-wakatime/HISTORY.rst	/^2.0.16 (2014-12-22)$/;"	s	chapter:History
2.0.2 (2014-05-26)	plugged/vim-wakatime/HISTORY.rst	/^2.0.2 (2014-05-26)$/;"	s	chapter:History
2.0.3 (2014-06-09)	plugged/vim-wakatime/HISTORY.rst	/^2.0.3 (2014-06-09)$/;"	s	chapter:History
2.0.4 (2014-07-25)	plugged/vim-wakatime/HISTORY.rst	/^2.0.4 (2014-07-25)$/;"	s	chapter:History
2.0.5 (2014-08-07)	plugged/vim-wakatime/HISTORY.rst	/^2.0.5 (2014-08-07)$/;"	s	chapter:History
2.0.6 (2014-08-29)	plugged/vim-wakatime/HISTORY.rst	/^2.0.6 (2014-08-29)$/;"	s	chapter:History
2.0.7 (2014-09-30)	plugged/vim-wakatime/HISTORY.rst	/^2.0.7 (2014-09-30)$/;"	s	chapter:History
2.0.8 (2014-09-30)	plugged/vim-wakatime/HISTORY.rst	/^2.0.8 (2014-09-30)$/;"	s	chapter:History
2.0.9 (2014-11-03)	plugged/vim-wakatime/HISTORY.rst	/^2.0.9 (2014-11-03)$/;"	s	chapter:History
2.i Linting	plugged/ale/README.md	/^### 2.i Linting$/;"	S
2.ii Fixing	plugged/ale/README.md	/^### 2.ii Fixing$/;"	S
2.iii Completion	plugged/ale/README.md	/^### 2.iii Completion$/;"	S
2.iv Go To Definition	plugged/ale/README.md	/^### 2.iv Go To Definition$/;"	S
2.v Find References	plugged/ale/README.md	/^### 2.v Find References$/;"	S
2.vi Hovering	plugged/ale/README.md	/^### 2.vi Hovering$/;"	S
2.vii Symbol Search	plugged/ale/README.md	/^### 2.vii Symbol Search$/;"	S
2018-07-12	plugged/coc.nvim/history.md	/^# 2018-07-12$/;"	c
2018-07-13	plugged/coc.nvim/history.md	/^# 2018-07-13$/;"	c
2018-07-14	plugged/coc.nvim/history.md	/^# 2018-07-14$/;"	c
2018-07-15	plugged/coc.nvim/history.md	/^# 2018-07-15$/;"	c
2018-07-16	plugged/coc.nvim/history.md	/^# 2018-07-16$/;"	c
2018-07-17	plugged/coc.nvim/history.md	/^# 2018-07-17$/;"	c
2018-07-19	plugged/coc.nvim/history.md	/^# 2018-07-19$/;"	c
2018-07-20	plugged/coc.nvim/history.md	/^# 2018-07-20$/;"	c
2018-07-21	plugged/coc.nvim/history.md	/^# 2018-07-21$/;"	c
2018-07-23	plugged/coc.nvim/history.md	/^# 2018-07-23$/;"	c
2018-07-24	plugged/coc.nvim/history.md	/^# 2018-07-24$/;"	c
2018-07-27	plugged/coc.nvim/history.md	/^# 2018-07-27$/;"	c
2018-07-28	plugged/coc.nvim/history.md	/^# 2018-07-28$/;"	c
2018-07-29	plugged/coc.nvim/history.md	/^# 2018-07-29$/;"	c
2018-07-30	plugged/coc.nvim/history.md	/^# 2018-07-30$/;"	c
2018-07-31	plugged/coc.nvim/history.md	/^# 2018-07-31$/;"	c
2018-08-02	plugged/coc.nvim/history.md	/^# 2018-08-02$/;"	c
2018-08-03	plugged/coc.nvim/history.md	/^# 2018-08-03$/;"	c
2018-08-04	plugged/coc.nvim/history.md	/^# 2018-08-04$/;"	c
2018-08-05	plugged/coc.nvim/history.md	/^# 2018-08-05$/;"	c
2018-08-07	plugged/coc.nvim/history.md	/^# 2018-08-07$/;"	c
2018-08-08	plugged/coc.nvim/history.md	/^# 2018-08-08$/;"	c
2018-08-09	plugged/coc.nvim/history.md	/^# 2018-08-09$/;"	c
2018-08-10	plugged/coc.nvim/history.md	/^# 2018-08-10$/;"	c
2018-08-11	plugged/coc.nvim/history.md	/^# 2018-08-11$/;"	c
2018-08-12	plugged/coc.nvim/history.md	/^# 2018-08-12$/;"	c
2018-08-14	plugged/coc.nvim/history.md	/^# 2018-08-14$/;"	c
2018-08-15	plugged/coc.nvim/history.md	/^# 2018-08-15$/;"	c
2018-08-16	plugged/coc.nvim/history.md	/^# 2018-08-16$/;"	c
2018-08-17	plugged/coc.nvim/history.md	/^# 2018-08-17$/;"	c
2018-08-21	plugged/coc.nvim/history.md	/^# 2018-08-21$/;"	c
2018-08-23	plugged/coc.nvim/history.md	/^# 2018-08-23$/;"	c
2018-08-30	plugged/coc.nvim/history.md	/^# 2018-08-30$/;"	c
2018-09-07	plugged/coc.nvim/history.md	/^# 2018-09-07$/;"	c
2018-09-10	plugged/coc.nvim/history.md	/^# 2018-09-10$/;"	c
2018-09-15	plugged/coc.nvim/history.md	/^# 2018-09-15$/;"	c
2018-09-20	plugged/coc.nvim/history.md	/^# 2018-09-20$/;"	c
2018-09-24	plugged/coc.nvim/history.md	/^# 2018-09-24$/;"	c
2018-09-27	plugged/coc.nvim/history.md	/^# 2018-09-27$/;"	c
2018-09-28	plugged/coc.nvim/history.md	/^# 2018-09-28$/;"	c
2018-09-30	plugged/coc.nvim/history.md	/^# 2018-09-30$/;"	c
2018-10-01	plugged/coc.nvim/history.md	/^# 2018-10-01$/;"	c
2018-10-05	plugged/coc.nvim/history.md	/^# 2018-10-05$/;"	c
2018-10-14	plugged/coc.nvim/history.md	/^# 2018-10-14$/;"	c
2018-10-18	plugged/coc.nvim/history.md	/^# 2018-10-18$/;"	c
2018-10-21	plugged/coc.nvim/history.md	/^# 2018-10-21$/;"	c
2018-10-25	plugged/coc.nvim/history.md	/^# 2018-10-25$/;"	c
2018-10-29	plugged/coc.nvim/history.md	/^# 2018-10-29$/;"	c
2018-11-02	plugged/coc.nvim/history.md	/^# 2018-11-02$/;"	c
2018-11-07	plugged/coc.nvim/history.md	/^# 2018-11-07$/;"	c
2018-11-13	plugged/coc.nvim/history.md	/^# 2018-11-13$/;"	c
2018-11-19	plugged/coc.nvim/history.md	/^# 2018-11-19$/;"	c
2018-11-24	plugged/coc.nvim/history.md	/^# 2018-11-24$/;"	c
2018-11-28	plugged/coc.nvim/history.md	/^# 2018-11-28$/;"	c
2018-12-05	plugged/coc.nvim/history.md	/^# 2018-12-05$/;"	c
2018-12-06	plugged/coc.nvim/history.md	/^# 2018-12-06$/;"	c
2018-12-08	plugged/coc.nvim/history.md	/^# 2018-12-08$/;"	c
2018-12-12	plugged/coc.nvim/history.md	/^# 2018-12-12$/;"	c
2018-12-17	plugged/coc.nvim/history.md	/^# 2018-12-17$/;"	c
2018-12-20	plugged/coc.nvim/history.md	/^# 2018-12-20$/;"	c
2018-12-27	plugged/coc.nvim/history.md	/^# 2018-12-27$/;"	c
2018-12-31	plugged/coc.nvim/history.md	/^# 2018-12-31$/;"	c
2019-01-01	plugged/coc.nvim/history.md	/^# 2019-01-01$/;"	c
2019-01-03	plugged/coc.nvim/history.md	/^# 2019-01-03$/;"	c
2019-01-09	plugged/coc.nvim/history.md	/^# 2019-01-09$/;"	c
2019-01-24	plugged/coc.nvim/history.md	/^# 2019-01-24$/;"	c
2019-01-28	plugged/coc.nvim/history.md	/^# 2019-01-28$/;"	c
2019-02-02	plugged/coc.nvim/history.md	/^# 2019-02-02$/;"	c
2019-02-04	plugged/coc.nvim/history.md	/^# 2019-02-04$/;"	c
2019-02-11	plugged/coc.nvim/history.md	/^# 2019-02-11$/;"	c
2019-02-12	plugged/coc.nvim/history.md	/^# 2019-02-12$/;"	c
2019-02-17	plugged/coc.nvim/history.md	/^# 2019-02-17$/;"	c
2019-02-22	plugged/coc.nvim/history.md	/^# 2019-02-22$/;"	c
2019-02-25	plugged/coc.nvim/history.md	/^# 2019-02-25$/;"	c
2019-03-03	plugged/coc.nvim/history.md	/^# 2019-03-03$/;"	c
2019-03-11	plugged/coc.nvim/history.md	/^# 2019-03-11$/;"	c
2019-03-16	plugged/coc.nvim/history.md	/^# 2019-03-16$/;"	c
2019-03-19	plugged/coc.nvim/history.md	/^# 2019-03-19$/;"	c
2019-03-24	plugged/coc.nvim/history.md	/^# 2019-03-24$/;"	c
2019-03-28	plugged/coc.nvim/history.md	/^# 2019-03-28$/;"	c
2019-03-31	plugged/coc.nvim/history.md	/^# 2019-03-31$/;"	c
2019-04-09	plugged/coc.nvim/history.md	/^# 2019-04-09$/;"	c
3	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
3	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
3	plugged/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
3	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
3	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
3	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
3	plugged/coc.nvim/package.json	/^      "js"$/;"	s	array:jest.moduleFileExtensions
3	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^      "}"$/;"	s	array:For Loop.body
3. Installation	plugged/ale/README.md	/^## 3. Installation$/;"	s
3.0.0 (2014-12-23)	plugged/vim-wakatime/HISTORY.rst	/^3.0.0 (2014-12-23)$/;"	s	chapter:History
3.0.1 (2014-12-23)	plugged/vim-wakatime/HISTORY.rst	/^3.0.1 (2014-12-23)$/;"	s	chapter:History
3.0.2 (2014-12-25)	plugged/vim-wakatime/HISTORY.rst	/^3.0.2 (2014-12-25)$/;"	s	chapter:History
3.0.3 (2014-12-25)	plugged/vim-wakatime/HISTORY.rst	/^3.0.3 (2014-12-25)$/;"	s	chapter:History
3.0.4 (2015-01-06)	plugged/vim-wakatime/HISTORY.rst	/^3.0.4 (2015-01-06)$/;"	s	chapter:History
3.0.5 (2015-01-13)	plugged/vim-wakatime/HISTORY.rst	/^3.0.5 (2015-01-13)$/;"	s	chapter:History
3.0.6 (2015-01-19)	plugged/vim-wakatime/HISTORY.rst	/^3.0.6 (2015-01-19)$/;"	s	chapter:History
3.0.7 (2015-02-12)	plugged/vim-wakatime/HISTORY.rst	/^3.0.7 (2015-02-12)$/;"	s	chapter:History
3.0.8 (2015-03-09)	plugged/vim-wakatime/HISTORY.rst	/^3.0.8 (2015-03-09)$/;"	s	chapter:History
3.0.9 (2015-04-02)	plugged/vim-wakatime/HISTORY.rst	/^3.0.9 (2015-04-02)$/;"	s	chapter:History
3.i. Installation with Vim package management	plugged/ale/README.md	/^### 3.i. Installation with Vim package management$/;"	S
3.ii. Installation with Pathogen	plugged/ale/README.md	/^### 3.ii. Installation with Pathogen$/;"	S
3.iii. Installation with Vundle	plugged/ale/README.md	/^### 3.iii. Installation with Vundle$/;"	S
3.iiii. Installation with Vim-Plug	plugged/ale/README.md	/^### 3.iiii. Installation with Vim-Plug$/;"	S
4	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
4. Contributing	plugged/ale/README.md	/^## 4. Contributing$/;"	s
4.0.0 (2015-05-01)	plugged/vim-wakatime/HISTORY.rst	/^4.0.0 (2015-05-01)$/;"	s	chapter:History
4.0.1 (2015-05-31)	plugged/vim-wakatime/HISTORY.rst	/^4.0.1 (2015-05-31)$/;"	s	chapter:History
4.0.2 (2015-06-11)	plugged/vim-wakatime/HISTORY.rst	/^4.0.2 (2015-06-11)$/;"	s	chapter:History
4.0.3 (2015-06-23)	plugged/vim-wakatime/HISTORY.rst	/^4.0.3 (2015-06-23)$/;"	s	chapter:History
4.0.4 (2015-08-25)	plugged/vim-wakatime/HISTORY.rst	/^4.0.4 (2015-08-25)$/;"	s	chapter:History
4.0.5 (2015-09-07)	plugged/vim-wakatime/HISTORY.rst	/^4.0.5 (2015-09-07)$/;"	s	chapter:History
4.0.6 (2015-12-01)	plugged/vim-wakatime/HISTORY.rst	/^4.0.6 (2015-12-01)$/;"	s	chapter:History
4.0.7 (2016-01-11)	plugged/vim-wakatime/HISTORY.rst	/^4.0.7 (2016-01-11)$/;"	s	chapter:History
4.0.8 (2016-03-06)	plugged/vim-wakatime/HISTORY.rst	/^4.0.8 (2016-03-06)$/;"	s	chapter:History
4.0.9 (2016-04-18)	plugged/vim-wakatime/HISTORY.rst	/^4.0.9 (2016-04-18)$/;"	s	chapter:History
5	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
5. FAQ	plugged/ale/README.md	/^## 5. FAQ$/;"	s
5.0.0 (2017-04-23)	plugged/vim-wakatime/HISTORY.rst	/^5.0.0 (2017-04-23)$/;"	s	chapter:History
5.0.1 (2017-04-24)	plugged/vim-wakatime/HISTORY.rst	/^5.0.1 (2017-04-24)$/;"	s	chapter:History
5.0.2 (2017-05-25)	plugged/vim-wakatime/HISTORY.rst	/^5.0.2 (2017-05-25)$/;"	s	chapter:History
5.i. How do I disable particular linters?	plugged/ale/README.md	/^### 5.i. How do I disable particular linters?$/;"	S
5.ii. How can I keep the sign gutter open?	plugged/ale/README.md	/^### 5.ii. How can I keep the sign gutter open?$/;"	S
5.iii. How can I change the signs ALE uses?	plugged/ale/README.md	/^### 5.iii. How can I change the signs ALE uses?$/;"	S
5.iv. How can I change or disable the highlights ALE uses?	plugged/ale/README.md	/^### 5.iv. How can I change or disable the highlights ALE uses?$/;"	S
5.ix. How can I navigate between errors quickly?	plugged/ale/README.md	/^### 5.ix. How can I navigate between errors quickly?$/;"	S
5.v. How can I show errors or warnings in my statusline?	plugged/ale/README.md	/^### 5.v. How can I show errors or warnings in my statusline?$/;"	S
5.vi. How can I show errors or warnings in my lightline?	plugged/ale/README.md	/^### 5.vi. How can I show errors or warnings in my lightline?$/;"	S
5.vii. How can I change the format for echo messages?	plugged/ale/README.md	/^### 5.vii. How can I change the format for echo messages?$/;"	S
5.viii. How can I execute some code when ALE starts or stops linting?	plugged/ale/README.md	/^### 5.viii. How can I execute some code when ALE starts or stops linting?$/;"	S
5.x. How can I run linters only when I save files?	plugged/ale/README.md	/^### 5.x. How can I run linters only when I save files?$/;"	S
5.xi. How can I use the quickfix list instead of the loclist?	plugged/ale/README.md	/^### 5.xi. How can I use the quickfix list instead of the loclist?$/;"	S
5.xii. How can I check JSX files with both stylelint and eslint?	plugged/ale/README.md	/^### 5.xii. How can I check JSX files with both stylelint and eslint?$/;"	S
5.xiii. How can I check Vue files with ESLint?	plugged/ale/README.md	/^### 5.xiii. How can I check Vue files with ESLint?$/;"	S
5.xiv. Will this plugin eat all of my laptop battery power?	plugged/ale/README.md	/^### 5.xiv. Will this plugin eat all of my laptop battery power?$/;"	S
5.xv. How can I configure my C or C++ project?	plugged/ale/README.md	/^### 5.xv. How can I configure my C or C++ project?$/;"	S
5.xvi. How can I configure ALE differently for different buffers?	plugged/ale/README.md	/^### 5.xvi. How can I configure ALE differently for different buffers?$/;"	S
5.xvii. How can I configure the height of the list in which ALE displays errors?	plugged/ale/README.md	/^### 5.xvii. How can I configure the height of the list in which ALE displays errors?$/;"	S
5.xviii. How can I see what ALE has configured for the current file?	plugged/ale/README.md	/^### 5.xviii. How can I see what ALE has configured for the current file?$/;"	S
6.0.0 (2017-10-04)	plugged/vim-wakatime/HISTORY.rst	/^6.0.0 (2017-10-04)$/;"	s	chapter:History
6.0.1 (2017-10-04)	plugged/vim-wakatime/HISTORY.rst	/^6.0.1 (2017-10-04)$/;"	s	chapter:History
6.0.2 (2017-10-19)	plugged/vim-wakatime/HISTORY.rst	/^6.0.2 (2017-10-19)$/;"	s	chapter:History
6.0.3 (2017-10-29)	plugged/vim-wakatime/HISTORY.rst	/^6.0.3 (2017-10-29)$/;"	s	chapter:History
7.0.0 (2017-11-08)	plugged/vim-wakatime/HISTORY.rst	/^7.0.0 (2017-11-08)$/;"	s	chapter:History
7.0.1 (2017-11-09)	plugged/vim-wakatime/HISTORY.rst	/^7.0.1 (2017-11-09)$/;"	s	chapter:History
7.0.2 (2017-11-22)	plugged/vim-wakatime/HISTORY.rst	/^7.0.2 (2017-11-22)$/;"	s	chapter:History
7.0.3 (2017-11-23)	plugged/vim-wakatime/HISTORY.rst	/^7.0.3 (2017-11-23)$/;"	s	chapter:History
7.0.4 (2018-01-04)	plugged/vim-wakatime/HISTORY.rst	/^7.0.4 (2018-01-04)$/;"	s	chapter:History
7.0.5 (2018-01-28)	plugged/vim-wakatime/HISTORY.rst	/^7.0.5 (2018-01-28)$/;"	s	chapter:History
7.0.6 (2018-03-15)	plugged/vim-wakatime/HISTORY.rst	/^7.0.6 (2018-03-15)$/;"	s	chapter:History
7.0.7 (2018-03-15)	plugged/vim-wakatime/HISTORY.rst	/^7.0.7 (2018-03-15)$/;"	s	chapter:History
7.1.0 (2018-04-03)	plugged/vim-wakatime/HISTORY.rst	/^7.1.0 (2018-04-03)$/;"	s	chapter:History
7.1.1 (2018-04-04)	plugged/vim-wakatime/HISTORY.rst	/^7.1.1 (2018-04-04)$/;"	s	chapter:History
7.1.2 (2018-09-20)	plugged/vim-wakatime/HISTORY.rst	/^7.1.2 (2018-09-20)$/;"	s	chapter:History
7.1.3 (2018-12-19)	plugged/vim-wakatime/HISTORY.rst	/^7.1.3 (2018-12-19)$/;"	s	chapter:History
7.1.4 (2019-03-30)	plugged/vim-wakatime/HISTORY.rst	/^7.1.4 (2019-03-30)$/;"	s	chapter:History
:ALEInfo	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^### :ALEInfo$/;"	S
:F {pattern} {file-mask} [params]	plugged/far.vim/README.md	/^#### :F {pattern} {file-mask} [params]$/;"	t
:Far {pattern} {replace-with} {file-mask} [params]	plugged/far.vim/README.md	/^#### :Far {pattern} {replace-with} {file-mask} [params]$/;"	t
:Fardo [params]	plugged/far.vim/README.md	/^#### :Fardo [params]$/;"	t
:Farp [params]	plugged/far.vim/README.md	/^#### :Farp [params]$/;"	t
:Refar [params]	plugged/far.vim/README.md	/^#### :Refar [params]$/;"	t
<BS>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <BS> <c-g>c$/;"	m
<BS>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <BS> <c-g>c$/;"	m
<C-@>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-@>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-@>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-@>       :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-J>	config/03.remaps.vim	/^nmap <silent> <C-J> <Plug>(ale_next_wrap)$/;"	m
<C-K>	config/03.remaps.vim	/^nmap <silent> <C-K> <Plug>(ale_previous_wrap)$/;"	m
<C-N>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-N>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-N>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-N>       :<C-U>call b:buffergator_catalog_viewer.goto_win_e/;"	m
<C-N>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-N> :<C-U>execute <SID>StageNext(v:count1)<CR>$/;"	m
<C-P>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-P>       :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-P>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-P>       :<C-U>call b:buffergator_catalog_viewer.goto_win_e/;"	m
<C-P>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-P> :<C-U>execute <SID>StagePrevious(v:count1)<CR>$/;"	m
<C-R>	plugged/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-SPACE>   :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<C-SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <C-SPACE>   :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<C-W>C	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-W>C :<C-U>exe 'Gsplit ' . <SID>fnameescape(<SID>ContainingComm/;"	m
<C-j>	config/02.general.vim	/^noremap <silent><expr> <C-j> coc#refresh()$/;"	m
<C-j>	config/03.remaps.vim	/^nmap <silent> <C-j> <Plug>(coc-diagnostic-next)$/;"	m
<C-k>	config/03.remaps.vim	/^nmap <silent> <C-k> <Plug>(coc-diagnostic-prev)$/;"	m
<C-q>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-q> <NOP>$/;"	m
<C-s>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-s>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<C-t>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-t>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<C-v>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-v> <NOP>$/;"	m
<C-v>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <C-v>       :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<CR>	config/07.completion.vim	/^  imap <silent><expr> <CR> pumvisible() ? "\\<C-y>" : "\\<Plug>delimitMateCR"$/;"	m
<CR>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <CR> :call ale#preview#OpenSelectionInBuffer()<CR>$/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <CR>        :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <CR>  :call b:buffergator_catalog_viewer.visit_target(!g:b/;"	m
<CR>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <CR>        :call b:buffergator_catalog_viewer.visit_target()</;"	m
<CR>	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <CR> :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
<CR>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <CR>    :<C-U>.Gblame<CR>$/;"	m
<CR>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <CR>    :<C-U>exe <SID>GF("edit")<CR>$/;"	m
<DEL>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <DEL> <c-g>c$/;"	m
<DEL>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <DEL> <c-g>c$/;"	m
<DOWN>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <DOWN>   <DOWN>$/;"	m
<Down>	config/03.remaps.vim	/^nnoremap <Down>  :resize -2<CR>$/;"	m
<Down>	plugged/ack.vim/autoload/ack.vim	/^    nmap <buffer> <silent> <Down> j$/;"	m
<Esc>	config/07.completion.vim	/^  imap <silent><expr> <Esc> pumvisible() ? "\\<C-e>" : "\\<Esc>"$/;"	m
<F10>	config/03.remaps.vim	/^noremap <F10> :so $MYVIMRC <CR>$/;"	m
<F10>	plugged/vim-blade/vimrc	/^map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'$/;"	m
<F12>	config/03.remaps.vim	/^noremap <F12> :tabe $MYVIMRC <CR>$/;"	m
<F1>	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <F1> :help fugitive-:Gblame<CR>$/;"	m
<F1>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <F1> :help fugitive-mappings<CR>$/;"	m
<F3>	config/03.remaps.vim	/^noremap <F3> :set ft=$/;"	m
<F4>	config/03.remaps.vim	/^noremap <F4> :call TabSize()<Left><Left>$/;"	m
<F8>	config/03.remaps.vim	/^nmap <F8> :TagbarToggle<CR>$/;"	m
<Leader><DOWN>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><DOWN> :BuffergatorMruCyclePrev rightbelow sbuffer<CR>$/;"	m
<Leader><LEFT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><LEFT> :BuffergatorMruCyclePrev leftabove vert sbuffer<CR>$/;"	m
<Leader><RIGHT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><RIGHT> :BuffergatorMruCyclePrev rightbelow vert sbuffer<CR>$/;"	m
<Leader><S-DOWN>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-DOWN> :BuffergatorMruCycleNext rightbelow sbuffer<CR>$/;"	m
<Leader><S-LEFT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-LEFT> :BuffergatorMruCycleNext leftabove vert sbuffer<CR>$/;"	m
<Leader><S-RIGHT>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-RIGHT> :BuffergatorMruCycleNext rightbelow vert sbuffer<CR>$/;"	m
<Leader><S-UP>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><S-UP> :BuffergatorMruCycleNext leftabove sbuffer<CR>$/;"	m
<Leader><UP>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <Leader><UP> :BuffergatorMruCyclePrev leftabove sbuffer<CR>$/;"	m
<Leader>B	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>B :BuffergatorClose<CR>$/;"	m
<Leader>T	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>T :BuffergatorTabsClose<CR>$/;"	m
<Leader>a	config/03.remaps.vim	/^nnoremap <Leader>a :Ack! -w $/;"	m
<Leader>b	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>b :BuffergatorOpen<CR>$/;"	m
<Leader>cs	config/03.remaps.vim	/^noremap <Leader>cs 80i=<esc>$/;"	m
<Leader>f	config/03.remaps.vim	/^noremap <Leader>f ye:Far " $/;"	m
<Leader>hp	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hs	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<Leader>n	config/03.remaps.vim	/^nnoremap <Leader>n :NERDTree<CR>$/;"	m
<Leader>r	config/03.remaps.vim	/^noremap <Leader>r ye:%s,",$/;"	m
<Leader>s	config/03.remaps.vim	/^noremap <Leader>s :update<CR>$/;"	m
<Leader>t	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>t :BuffergatorTabsOpen<CR>$/;"	m
<Leader>tc	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>tc :BuffergatorTabsClose<CR>$/;"	m
<Leader>to	plugged/vim-buffergator/plugin/buffergator.vim	/^    nnoremap <silent> <Leader>to :BuffergatorTabsOpen<CR>$/;"	m
<Left>	config/03.remaps.vim	/^nnoremap <Left>  :vertical resize +2<CR>$/;"	m
<LeftMouse>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <LeftMouse> :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
<M-S-b>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <M-S-b> :BuffergatorMruCycleNext<CR>$/;"	m
<M-b>	plugged/vim-buffergator/plugin/buffergator.vim	/^        nnoremap <silent> <M-b> :BuffergatorMruCyclePrev<CR>$/;"	m
<Plug>(RepeatDot)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(ale_complete)	plugged/ale/plugin/ale.vim	/^inoremap <silent> <Plug>(ale_complete) <C-\\><C-O>:ALEComplete<Return>$/;"	m
<Plug>(ale_detail)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_documentation)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation<Return>$/;"	m
<Plug>(ale_enable)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_find_references)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences<Return>$/;"	m
<Plug>(ale_first)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_split)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinitionInSplit<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinitionInTab<Return>$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinitionInVSplit<Return>$/;"	m
<Plug>(ale_go_to_type_definition)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinitionInSplit<Retur/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinitionInTab<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinitionInVSplit<Ret/;"	m
<Plug>(ale_hover)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover<Return>$/;"	m
<Plug>(ale_last)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error<Return>$/;"	m
<Plug>(ale_next_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning<Return>$/;"	m
<Plug>(ale_next_wrap)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_next_wrap_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error<Return>$/;"	m
<Plug>(ale_next_wrap_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning<Return>$/;"	m
<Plug>(ale_previous)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error<Return>$/;"	m
<Plug>(ale_previous_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning<Return>$/;"	m
<Plug>(ale_previous_wrap)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_previous_wrap_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error<Return>$/;"	m
<Plug>(ale_previous_wrap_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning<Return>$/;"	m
<Plug>(ale_reset)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^cnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^inoremap <silent> <Plug>(ale_show_completion_menu) <C-x><C-o>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^nnoremap <silent> <Plug>(ale_show_completion_menu) :call ale#completion#RestoreCompletionOptions/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^onoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^vnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_toggle)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(coc-codeaction)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)          :<C-u>call CocActionAsync('codeAction',     '')<CR>$/;"	m
<Plug>(coc-codeaction-selected)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected) :<C-u>set  operatorfunc=<SID>CodeActionFromSelected<CR>/;"	m
<Plug>(coc-codeaction-selected)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <Plug>(coc-codeaction-selected) :<C-u>call CocActionAsync('codeAction',     visualmode(/;"	m
<Plug>(coc-codelens-action)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)     :<C-u>call CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-declaration)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-declaration)         :<C-u>call CocActionAsync('jumpDeclaration')<CR>$/;"	m
<Plug>(coc-definition)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-definition)          :<C-u>call CocActionAsync('jumpDefinition')<CR>$/;"	m
<Plug>(coc-diagnostic-info)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-info)     :<C-u>call CocActionAsync('diagnosticInfo')<CR>$/;"	m
<Plug>(coc-diagnostic-next)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-next)     :<C-u>call CocActionAsync('diagnosticNext')<CR>$/;"	m
<Plug>(coc-diagnostic-prev)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-prev)     :<C-u>call CocActionAsync('diagnosticPrevious')<CR>$/;"	m
<Plug>(coc-fix-current)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-fix-current)         :<C-u>call CocActionAsync('doQuickfix')<CR>$/;"	m
<Plug>(coc-float-hide)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-float-hide)          :<C-u>call coc#util#float_hide()<CR>$/;"	m
<Plug>(coc-float-jump)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-float-jump)          :<c-u>call coc#util#float_jump()<cr>$/;"	m
<Plug>(coc-format)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-format)              :<C-u>call CocActionAsync('format')<CR>$/;"	m
<Plug>(coc-format-selected)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-format-selected)     :<C-u>set  operatorfunc=<SID>FormatFromSelected<CR>g@$/;"	m
<Plug>(coc-format-selected)	plugged/coc.nvim/plugin/coc.vim	/^vnoremap <Plug>(coc-format-selected)     :<C-u>call CocActionAsync('formatSelected', visualmode(/;"	m
<Plug>(coc-implementation)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-implementation)      :<C-u>call CocActionAsync('jumpImplementation')<CR>$/;"	m
<Plug>(coc-openlink)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-openlink)            :<C-u>call CocActionAsync('openLink')<CR>$/;"	m
<Plug>(coc-references)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-references)          :<C-u>call CocActionAsync('jumpReferences')<CR>$/;"	m
<Plug>(coc-rename)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-rename)              :<C-u>call CocActionAsync('rename')<CR>$/;"	m
<Plug>(coc-type-definition)	plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-type-definition)     :<C-u>call CocActionAsync('jumpTypeDefinition')<CR>$/;"	m
<Plug>(miniyank-autoPut)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <expr> <Plug>(miniyank-autoPut) miniyank#startput("P",1)$/;"	m
<Plug>(miniyank-autoput)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <expr> <Plug>(miniyank-autoput) miniyank#startput("p",1)$/;"	m
<Plug>(miniyank-cycle)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <Plug>(miniyank-cycle) :<c-u>call miniyank#cycle(1)<cr>$/;"	m
<Plug>(miniyank-cycleback)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <Plug>(miniyank-cycleback) :<c-u>call miniyank#cycle(-1)<cr>$/;"	m
<Plug>(miniyank-startPut)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <expr> <Plug>(miniyank-startPut) miniyank#startput("P",0)$/;"	m
<Plug>(miniyank-startput)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <expr> <Plug>(miniyank-startput) miniyank#startput("p",0)$/;"	m
<Plug>(miniyank-toblock)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <Plug>(miniyank-toblock) :<c-u>call miniyank#force_motion('b')<cr>$/;"	m
<Plug>(miniyank-tochar)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <Plug>(miniyank-tochar) :<c-u>call miniyank#force_motion('v')<cr>$/;"	m
<Plug>(miniyank-toline)	plugged/nvim-miniyank/plugin/miniyank.vim	/^noremap <silent> <Plug>(miniyank-toline) :<c-u>call miniyank#force_motion('V')<cr>$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>CocRefresh	plugged/coc.nvim/plugin/coc.vim	/^inoremap <silent> <Plug>CocRefresh       <C-r>=coc#_complete()<CR>$/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectInnerVisual	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectInnerVisual  :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectOuterPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterTextObjectOuterVisual	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectOuterVisual  :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>TComment_<Leader>_<space>	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_<space> :TComment $/;"	m
<Plug>TComment_<Leader>__	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>__ :TComment<cr>$/;"	m
<Plug>TComment_<Leader>__	plugged/tcomment_vim/plugin/tcomment.vim	/^xnoremap <Plug>TComment_<Leader>__ :TCommentMaybeInline<cr>$/;"	m
<Plug>TComment_<Leader>_a	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_a :TCommentAs $/;"	m
<Plug>TComment_<Leader>_b	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<Leader>_i	plugged/tcomment_vim/plugin/tcomment.vim	/^xnoremap <Plug>TComment_<Leader>_i :TCommentInline<cr>$/;"	m
<Plug>TComment_<Leader>_n	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<Leader>_p	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_p vip:TComment<cr>$/;"	m
<Plug>TComment_<Leader>_r	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_r :TCommentRight<cr>$/;"	m
<Plug>TComment_<Leader>_s	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_><c-_>	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><c-_> <c-o>:TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><c-_> :TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	plugged/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_><c-_> :TCommentMaybeInline<cr>$/;"	m
<Plug>TComment_<c-_><space>	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><space> <c-o>:TComment $/;"	m
<Plug>TComment_<c-_><space>	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><space> :TComment $/;"	m
<Plug>TComment_<c-_>a	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>a <c-o>:TCommentAs $/;"	m
<Plug>TComment_<c-_>a	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>a :TCommentAs $/;"	m
<Plug>TComment_<c-_>b	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>b <c-\\><c-o>:TCommentBlock mode=#<cr>$/;"	m
<Plug>TComment_<c-_>b	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<c-_>ca	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>ca :<c-u>call tcomment#SetOption("as", input("Comment as: ", &filety/;"	m
<Plug>TComment_<c-_>cc	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>cc :<c-u>call tcomment#SetOption("count", v:count1)<cr>$/;"	m
<Plug>TComment_<c-_>i	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>i <c-\\><c-o>v:TCommentInline mode=#<cr>$/;"	m
<Plug>TComment_<c-_>i	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>i v:TCommentInline mode=I#<cr>$/;"	m
<Plug>TComment_<c-_>i	plugged/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_>i :TCommentInline<cr>$/;"	m
<Plug>TComment_<c-_>n	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>n <c-o>:TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>n	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>p	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>p <c-o>:norm! m`vip<cr>:TComment<cr><c-o>``$/;"	m
<Plug>TComment_<c-_>p	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>p m`vip:TComment<cr>``$/;"	m
<Plug>TComment_<c-_>r	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>r <c-o>:TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>r	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>r :TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>s	plugged/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>s <c-o>:TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_>s	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_Comment	plugged/tcomment_vim/plugin/tcomment.vim	/^xnoremap <silent> <Plug>TComment_Comment :<c-u>if v:count > 0 \\| call tcomment#SetOption("count/;"	m
<Plug>TComment_Uncomment	plugged/tcomment_vim/plugin/tcomment.vim	/^xnoremap <silent> <Plug>TComment_Uncomment :<c-u>if v:count > 0 \\| call tcomment#SetOption("cou/;"	m
<Plug>TComment_gc	plugged/tcomment_vim/plugin/tcomment.vim	/^xnoremap <Plug>TComment_gc :TCommentMaybeInline<cr>$/;"	m
<Plug>TComment_ic	plugged/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_ic :<c-U>call tcomment#textobject#InlineComment()<cr>$/;"	m
<Plug>TComment_ic	plugged/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_ic :<c-U>call tcomment#textobject#InlineComment()<cr>$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 /;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 /;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<Right>	config/03.remaps.vim	/^nnoremap <Right> :vertical resize -2<CR>$/;"	m
<S-TAB>	config/02.general.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-TAB>	config/07.completion.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-Tab>	config/07.completion.vim	/^  imap <silent><expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<S-v>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <S-v> <NOP>$/;"	m
<SID>:	plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> <SPACE>     :<C-U>call b:buffergator_catalog_viewer.goto_i/;"	m
<SPACE>	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> <SPACE>     :<C-U>call b:buffergator_catalog_viewer.goto_index/;"	m
<TAB>	config/02.general.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	config/07.completion.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	config/07.completion.vim	/^  imap <silent><expr> <Tab> pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<UP>	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <UP>     <UP>$/;"	m
<Up>	config/03.remaps.vim	/^nnoremap <Up>    :resize +2<CR>$/;"	m
<Up>	plugged/ack.vim/autoload/ack.vim	/^    nmap <buffer> <silent> <Up> k$/;"	m
<c-b>	config/03.remaps.vim	/^noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 10, 4)<CR>$/;"	m
<c-d>	config/03.remaps.vim	/^noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 10, 2)<CR>$/;"	m
<c-f>	config/03.remaps.vim	/^noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 10, 4)<CR>$/;"	m
<c-h>	config/03.remaps.vim	/^map <c-h> <C-W>h<C-W>\\|$/;"	m
<c-h>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <c-h> <c-g>c$/;"	m
<c-h>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <c-h> <c-g>c$/;"	m
<c-j>	config/03.remaps.vim	/^map <c-j> <C-W>j<C-W>_$/;"	m
<c-j>	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> <c-j> :call far#scroll_preview_window(g:far#preview_window_scroll_/;"	m
<c-k>	config/03.remaps.vim	/^map <c-k> <C-W>k<C-W>_$/;"	m
<c-k>	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> <c-k> :call far#scroll_preview_window(-g:far#preview_window_scroll/;"	m
<c-l>	config/03.remaps.vim	/^map <c-l> <C-W>l<C-W>\\|$/;"	m
<c-r>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-r>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-u>	config/03.remaps.vim	/^noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 10, 2)<CR>$/;"	m
<cr>	autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<cr>	config/02.general.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	config/07.completion.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> <cr> :call far#jump_buffer_under_cursor()<cr>$/;"	m
<cr>	plugged/nerdtree/lib/nerdtree/creator.vim	/^    nnoremap <silent> <buffer> <cr> :call nerdtree#ui_glue#invokeKeyMap(g:NERDTreeMapActivateNod/;"	m
<esc>	plugged/coc.nvim/autoload/coc/snippet.vim	/^  nnoremap <buffer> <silent> <esc> :call coc#rpc#request('snippetCancel', [])<cr>$/;"	m
<leader>P	config/03.remaps.vim	/^map <leader>P <Plug>(miniyank-startPut)$/;"	m
<leader>g	config/03.remaps.vim	/^nnoremap <leader>g :Git<space>$/;"	m
<leader>gb	config/03.remaps.vim	/^nnoremap <leader>gb :Gblame<CR>$/;"	m
<leader>gc	config/03.remaps.vim	/^nnoremap <leader>gc :Gcommit %$/;"	m
<leader>gd	config/03.remaps.vim	/^nnoremap <leader>gd :Gdiff$/;"	m
<leader>gg	config/03.remaps.vim	/^nnoremap <leader>gg :G$/;"	m
<leader>gl	config/03.remaps.vim	/^nnoremap <leader>gl :Glog<CR>$/;"	m
<leader>gp	config/03.remaps.vim	/^nnoremap <leader>gp :Gpush$/;"	m
<leader>gs	config/03.remaps.vim	/^nnoremap <leader>gs :Gstatus<CR>$/;"	m
<leader>gw	config/03.remaps.vim	/^nnoremap <leader>gw :Gbrowse<CR>$/;"	m
<leader>p	config/03.remaps.vim	/^map <leader>p <Plug>(miniyank-startput)$/;"	m
<plug>(plug-preview)	autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
?	plugged/ack.vim/autoload/ack.vim	/^  nnoremap <buffer> <silent> ? :call <SID>QuickHelp()<CR>$/;"	m
?	plugged/ack.vim/autoload/ack.vim	/^  nnoremap <buffer> <silent> ? :q!<CR>:call ack#ShowResults()<CR>$/;"	m
@chemzqm/neovim	plugged/coc.nvim/package.json	/^    "@chemzqm\/neovim": "4.4.1",$/;"	s	object:dependencies
@chemzqm/tslint-config	plugged/coc.nvim/package.json	/^    "@chemzqm\/tslint-config": "^1.0.18",$/;"	s	object:devDependencies
@types/debounce	plugged/coc.nvim/package.json	/^    "@types\/debounce": "^3.0.0",$/;"	s	object:devDependencies
@types/fb-watchman	plugged/coc.nvim/package.json	/^    "@types\/fb-watchman": "^2.0.0",$/;"	s	object:devDependencies
@types/find-up	plugged/coc.nvim/package.json	/^    "@types\/find-up": "^2.1.1",$/;"	s	object:devDependencies
@types/glob	plugged/coc.nvim/package.json	/^    "@types\/glob": "^7.1.1",$/;"	s	object:devDependencies
@types/jest	plugged/coc.nvim/package.json	/^    "@types\/jest": "^24.0.11",$/;"	s	object:devDependencies
@types/minimatch	plugged/coc.nvim/package.json	/^    "@types\/minimatch": "^3.0.3",$/;"	s	object:devDependencies
@types/node	plugged/coc.nvim/package.json	/^    "@types\/node": "^11.13.0",$/;"	s	object:devDependencies
@types/semver	plugged/coc.nvim/package.json	/^    "@types\/semver": "^6.0.0",$/;"	s	object:devDependencies
@types/uuid	plugged/coc.nvim/package.json	/^    "@types\/uuid": "^3.4.4",$/;"	s	object:devDependencies
@types/which	plugged/coc.nvim/package.json	/^    "@types\/which": "^1.3.1",$/;"	s	object:devDependencies
A	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> A <NOP>$/;"	m
A	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> A           :call b:buffergator_catalog_viewer.toggle_zoom()<C/;"	m
A	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> A    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
ABAPLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class ABAPLexer(RegexLexer):$/;"	c
ACCEPTOR_ADDRESS	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    ACCEPTOR_ADDRESS = 'acceptor_address'$/;"	v	class:GssChannelBindingsStruct
ACCEPTOR_ADDRESS_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    ACCEPTOR_ADDRESS_LENGTH = 'acceptor_address_length'$/;"	v	class:GssChannelBindingsStruct
ACCEPTOR_ADDRTYPE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    ACCEPTOR_ADDRTYPE = 'acceptor_addrtype'$/;"	v	class:GssChannelBindingsStruct
ACCEPT_ENCODING	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/request.py	/^ACCEPT_ENCODING = 'gzip,deflate'$/;"	v
ACO	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ACO = 5  # accent capital other$/;"	v
ACV	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ACV = 4  # accent capital vowel$/;"	v
ALE Supported Languages and Tools	plugged/ale/supported-tools.md	/^# ALE Supported Languages and Tools$/;"	c
ALEBufferFixGroup	plugged/ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	plugged/ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALEComplete	plugged/ale/plugin/ale.vim	/^command! -bar ALEComplete :call ale#completion#GetCompletions(1)$/;"	c
ALECompletionGroup	plugged/ale/autoload/ale/completion.vim	/^    augroup ALECompletionGroup$/;"	a
ALEDetail	plugged/ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	plugged/ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEDocumentation	plugged/ale/plugin/ale.vim	/^command! -bar ALEDocumentation :call ale#hover#ShowDocumentationAtCursor()$/;"	c
ALEEnable	plugged/ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEEvents	plugged/ale/autoload/ale/events.vim	/^    augroup ALEEvents$/;"	a
ALEFindReferences	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEFindReferences :call ale#references#Find(<f-args>)$/;"	c
ALEFirst	plugged/ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* -complete=customlist,ale#fix#registry#CompleteFixers ALEFix :call ale#fix/;"	c
ALEFixSuggest	plugged/ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGoToDefinition	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToDefinition :call ale#definition#GoTo({})$/;"	c
ALEGoToDefinitionInSplit	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToDefinitionInSplit :call ale#definition#GoTo({'open_in': 'horizontal-split'}/;"	c
ALEGoToDefinitionInTab	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToDefinitionInTab :call ale#definition#GoTo({'open_in': 'tab'})$/;"	c
ALEGoToDefinitionInVSplit	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToDefinitionInVSplit :call ale#definition#GoTo({'open_in': 'vertical-split'})$/;"	c
ALEGoToTypeDefinition	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToTypeDefinition :call ale#definition#GoToType({})$/;"	c
ALEGoToTypeDefinitionInSplit	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToTypeDefinitionInSplit :call ale#definition#GoToType({'open_in': 'horizontal/;"	c
ALEGoToTypeDefinitionInTab	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToTypeDefinitionInTab :call ale#definition#GoToType({'open_in': 'tab'})$/;"	c
ALEGoToTypeDefinitionInVSplit	plugged/ale/plugin/ale.vim	/^command! -bar ALEGoToTypeDefinitionInVSplit :call ale#definition#GoToType({'open_in': 'vertical-/;"	c
ALEHighlightBufferGroup	plugged/ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEHover	plugged/ale/plugin/ale.vim	/^command! -bar ALEHover :call ale#hover#ShowAtCursor()$/;"	c
ALEInfo	plugged/ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	plugged/ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALEInfoToFile	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=1 ALEInfoToFile :call ale#debugging#InfoToFile(<f-args>)$/;"	c
ALELast	plugged/ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	plugged/ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALENext	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALENext$/;"	c
ALENextWrap	plugged/ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEPrevious	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEPrevious$/;"	c
ALEPreviousWrap	plugged/ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALEReset	plugged/ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEStopAllLSPs	plugged/ale/plugin/ale.vim	/^command! -bar ALEStopAllLSPs :call ale#lsp#reset#StopAllLSPs()$/;"	c
ALESymbolSearch	plugged/ale/plugin/ale.vim	/^command! -nargs=1 ALESymbolSearch :call ale#symbol#Search(<q-args>)$/;"	c
ALEToggle	plugged/ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
ALL	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    ALL = 0x1F$/;"	v	class:LanguageFilter
ALLOWED_CHARS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    ALLOWED_CHARS = r'@!$&*+\\-.\/:;<>?\\[\\\\\\]^`|~'$/;"	v	class:BibTeXLexer
ALWAYS	plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
API	plugged/vim-devicons/DEVELOPER.md	/^### API$/;"	S
API Examples	plugged/vim-devicons/DEVELOPER.md	/^#### API Examples$/;"	t
API_ERROR	plugged/vim-wakatime/packages/wakatime/constants.py	/^API_ERROR = 102$/;"	v
APLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^class APLLexer(RegexLexer):$/;"	c
APPEND_OLD_CHUNK	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define APPEND_OLD_CHUNK /;"	d	file:
APPLICATION_DATA	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    APPLICATION_DATA = 'application_data'$/;"	v	class:GssChannelBindingsStruct
APPLICATION_DATA_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    APPLICATION_DATA_LENGTH = 'application_data_length'$/;"	v	class:GssChannelBindingsStruct
AQUA	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^AQUA = "#5bc4bf"$/;"	v
AQUA	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^AQUA = "#5bc4bf"$/;"	v
ARC4	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^class ARC4(object):$/;"	c
ARGUMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^ARGUMENT = Token.String$/;"	v
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = '\\x1bOB'$/;"	v
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = '\\x1bOD'$/;"	v
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = '\\x1bOC'$/;"	v
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = '\\x1bOA'$/;"	v
ASC	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ASC = 2  # ascii capital letter$/;"	v
ASM_INSTRUCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    ASM_INSTRUCTIONS = set(($/;"	v	class:DelphiLexer
ASM_REGISTERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    ASM_REGISTERS = set(($/;"	v	class:DelphiLexer
ASO	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ASO = 7  # accent small other$/;"	v
ASS	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ASS = 3  # ascii small letter$/;"	v
ASV	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^ASV = 6  # accent small vowel$/;"	v
ASYFUNCNAME	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_asy_builtins.py	/^ASYFUNCNAME = set(($/;"	v
ASYVARNAME	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_asy_builtins.py	/^ASYVARNAME = set(($/;"	v
AUTHENTICATION_CONSTRAINED	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    AUTHENTICATION_CONSTRAINED  = 0x1$/;"	v	class:AvFlags
AUTH_ERROR	plugged/vim-wakatime/packages/wakatime/constants.py	/^AUTH_ERROR = 104$/;"	v
AbapStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/abap.py	/^class AbapStyle(Style):$/;"	c
AbnfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^class AbnfLexer(RegexLexer):$/;"	c
About	plugged/vim-smooth-scroll/README.md	/^## About$/;"	s
Ack	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack           call ack#Ack('grep<bang>', <q-args>)$/;"	c
AckAdd	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd        call ack#Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile       call ack#Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call ack#AckFromSearch('grep<bang>', <q-arg/;"	c
AckHelp	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckHelp       call ack#AckHelp('grep<bang>', <q-args>)$/;"	c
AckWindow	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=*                AckWindow     call ack#AckWindow('grep<bang>', <q-args>)$/;"	c
Acknowledgments	plugged/vim-devicons/README.md	/^Acknowledgments$/;"	s
Action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class Action(_AttributeHolder):$/;"	c
ActionScript3Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^class ActionScript3Lexer(RegexLexer):$/;"	c
ActionScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^class ActionScriptLexer(RegexLexer):$/;"	c
Activation	plugged/nord-vim/README.md	/^### Activation$/;"	S
AdaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^class AdaLexer(RegexLexer):$/;"	c
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
AdlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^class AdlLexer(AtomsLexer):$/;"	c
Advanced configuration	plugged/lightline.vim/README.md	/^## Advanced configuration$/;"	s
AgdaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class AgdaLexer(RegexLexer):$/;"	c
AheuiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class AheuiLexer(RegexLexer):$/;"	c
AirlineWebDevIcons	plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
AlgolStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol.py	/^class AlgolStyle(Style):$/;"	c
Algol_NuStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol_nu.py	/^class Algol_NuStyle(Style):$/;"	c
Aliases for snippets	plugged/ultisnips/doc/examples/snippets-aliasing/README.md	/^# Aliases for snippets$/;"	c
Align	plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
AlloyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class AlloyLexer(RegexLexer):$/;"	c
AmbientTalkLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^class AmbientTalkLexer(RegexLexer):$/;"	c
AmbiguousTimeError	plugged/vim-wakatime/packages/wakatime/packages/pytz/exceptions.py	/^class AmbiguousTimeError(InvalidTimeError):$/;"	c
AmplLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^class AmplLexer(RegexLexer):$/;"	c
Angular2HtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class Angular2HtmlLexer(DelegatingLexer):$/;"	c
Angular2Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class Angular2Lexer(RegexLexer):$/;"	c
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AnonymousFunction117650390100	plugged/coc.nvim/bin/tsserverForkStart.js	/^        return function () { }; \/\/ tslint:disable-line$/;"	f	function:log
AnonymousFunction117650390200	plugged/coc.nvim/bin/tsserverForkStart.js	/^    process.__defineGetter__('stdout', function () {$/;"	f
AnonymousFunction117650390300	plugged/coc.nvim/bin/tsserverForkStart.js	/^    process.__defineGetter__('stderr', function () {$/;"	f
AnonymousFunction117650390400	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let server = net.createServer(function (stream) {$/;"	f
AnonymousFunction117650390500	plugged/coc.nvim/bin/tsserverForkStart.js	/^        process.__defineGetter__('stdin', function () {$/;"	f
AnonymousFunction117650390600	plugged/coc.nvim/bin/tsserverForkStart.js	/^        let timer = setInterval(function () {$/;"	f	function:AnonymousFunction117650390400
AnonymousFunction117650390700	plugged/coc.nvim/bin/tsserverForkStart.js	/^    server.listen(stdInPipeName, function () {$/;"	f
AnonymousFunctionaf1e5c4a0100	plugged/coc.nvim/build/index.js	/^\/******\/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__./;"	f	function:__webpack_require__.t
AnonymousFunctionafe446920100	plugged/coc.nvim/bin/server.js	/^process.on('uncaughtException', function (err) {$/;"	f
AnonymousFunctionafe446920200	plugged/coc.nvim/bin/server.js	/^process.on('unhandledRejection', function (reason, p) {$/;"	f
AnonymousFunctionc5b93c5c0100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(i){$/;"	f
AnonymousFunctionc5b93c5c0200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each( text || this, function(){$/;"	f
AnonymousFunctionc5b93c5c0300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( this.childNodes, function(){$/;"	f
AnonymousFunctionc5b93c5c0400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				.map(function(){$/;"	f
AnonymousFunctionc5b93c5c0500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c0600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c0700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, true, false, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, true, true, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, false, false, function(elem){$/;"	c
AnonymousFunctionc5b93c5c0a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.domManip(arguments, false, true, function(elem){$/;"	c
AnonymousFunctionc5b93c5c0b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var elems = jQuery.map(this, function(elem){$/;"	f
AnonymousFunctionc5b93c5c0c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = this.map(function(){$/;"	f
AnonymousFunctionc5b93c5c0d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = ret.find("*").andSelf().each(function(){$/;"	f
AnonymousFunctionc5b93c5c0e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.find("*").andSelf().each(function(i){$/;"	f
AnonymousFunctionc5b93c5c0f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.grep(this, function(elem, i){$/;"	f
AnonymousFunctionc5b93c5c1000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.filter(function() {$/;"	f
AnonymousFunctionc5b93c5c1100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery( "option", this ).each(function(){$/;"	c
AnonymousFunctionc5b93c5c1300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.pushStack( jQuery.map(this, function(elem, i){$/;"	f
AnonymousFunctionc5b93c5c1400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			return this.trigger("setData" + parts[1] + "!", [parts[0], value]).each(function(){$/;"	f
AnonymousFunctionc5b93c5c1500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f
AnonymousFunctionc5b93c5c1700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each(elems, function(){$/;"	f
AnonymousFunctionc5b93c5c1800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	noConflict: function( deep ) {$/;"	f
AnonymousFunctionc5b93c5c1900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isFunction: function( fn ) {$/;"	f
AnonymousFunctionc5b93c5c1a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isXMLDoc: function( elem ) {$/;"	f
AnonymousFunctionc5b93c5c1b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	globalEval: function( data ) {$/;"	f
AnonymousFunctionc5b93c5c1c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nodeName: function( elem, name ) {$/;"	f
AnonymousFunctionc5b93c5c1d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	data: function( elem, name, data ) {$/;"	f
AnonymousFunctionc5b93c5c1e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeData: function( elem, name ) {$/;"	f
AnonymousFunctionc5b93c5c1f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	each: function( object, callback, args ) {$/;"	f
AnonymousFunctionc5b93c5c2000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prop: function( elem, value, type, i, name ) {$/;"	f
AnonymousFunctionc5b93c5c2100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		add: function( elem, classNames ) {$/;"	f
AnonymousFunctionc5b93c5c2200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each((classNames || "").split(\/\\s+\/), function(i, className){$/;"	f
AnonymousFunctionc5b93c5c2300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		remove: function( elem, classNames ) {$/;"	f
AnonymousFunctionc5b93c5c2400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.grep(elem.className.split(\/\\s+\/), function(className){$/;"	f	function:AnonymousFunctionc5b93c5c2300
AnonymousFunctionc5b93c5c2500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		has: function( elem, className ) {$/;"	f
AnonymousFunctionc5b93c5c2600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	swap: function( elem, options, callback ) {$/;"	f
AnonymousFunctionc5b93c5c2700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	css: function( elem, name, force ) {$/;"	f
AnonymousFunctionc5b93c5c2800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each( which, function() {$/;"	f
AnonymousFunctionc5b93c5c2900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	curCSS: function( elem, name, force ) {$/;"	f
AnonymousFunctionc5b93c5c2a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var camelCase = name.replace(\/\\-(\\w)\/g, function(all, letter){$/;"	f	function:AnonymousFunctionc5b93c5c2900
AnonymousFunctionc5b93c5c2b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	clean: function( elems, context ) {$/;"	f
AnonymousFunctionc5b93c5c2c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each(elems, function(i, elem){$/;"	f
AnonymousFunctionc5b93c5c2d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				elem = elem.replace(\/(<(\\w+)[^>]*?)\\\/>\/g, function(all, front, tag){$/;"	f	function:AnonymousFunctionc5b93c5c2c00
AnonymousFunctionc5b93c5c2e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	attr: function( elem, name, value ) {$/;"	f
AnonymousFunctionc5b93c5c2f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		name = name.replace(\/-([a-z])\/ig, function(all, letter){$/;"	f	function:AnonymousFunctionc5b93c5c2e00
AnonymousFunctionc5b93c5c3000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trim: function( text ) {$/;"	f
AnonymousFunctionc5b93c5c3100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	makeArray: function( array ) {$/;"	f
AnonymousFunctionc5b93c5c3200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	inArray: function( elem, array ) {$/;"	f
AnonymousFunctionc5b93c5c3300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	merge: function( first, second ) {$/;"	f
AnonymousFunctionc5b93c5c3400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unique: function( array ) {$/;"	f
AnonymousFunctionc5b93c5c3500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	grep: function( elems, callback, inv ) {$/;"	f
AnonymousFunctionc5b93c5c3600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	map: function( elems, callback ) {$/;"	f
AnonymousFunctionc5b93c5c3700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parent: function(elem){return elem.parentNode;},$/;"	f
AnonymousFunctionc5b93c5c3800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parents: function(elem){return jQuery.dir(elem,"parentNode");},$/;"	f
AnonymousFunctionc5b93c5c3900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	next: function(elem){return jQuery.nth(elem,2,"nextSibling");},$/;"	f
AnonymousFunctionc5b93c5c3a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prev: function(elem){return jQuery.nth(elem,2,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c3b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nextAll: function(elem){return jQuery.dir(elem,"nextSibling");},$/;"	f
AnonymousFunctionc5b93c5c3c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prevAll: function(elem){return jQuery.dir(elem,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c3d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	siblings: function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},$/;"	f
AnonymousFunctionc5b93c5c3e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	children: function(elem){return jQuery.sibling(elem.firstChild);},$/;"	f
AnonymousFunctionc5b93c5c3f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	contents: function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.conte/;"	f
AnonymousFunctionc5b93c5c4000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, fn){$/;"	f
AnonymousFunctionc5b93c5c4100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, original){$/;"	f
AnonymousFunctionc5b93c5c4200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:jQuery.fn
AnonymousFunctionc5b93c5c4300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeAttr: function( name ) {$/;"	f
AnonymousFunctionc5b93c5c4400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	addClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggleClass: function( classNames ) {$/;"	f
AnonymousFunctionc5b93c5c4700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function( selector ) {$/;"	f
AnonymousFunctionc5b93c5c4800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery( "*", this ).add(this).each(function(){$/;"	f
AnonymousFunctionc5b93c5c4900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	empty: function() {$/;"	f
AnonymousFunctionc5b93c5c4a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}, function(name, fn){$/;"	f
AnonymousFunctionc5b93c5c4b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each([ "Height", "Width" ], function(i, name){$/;"	f
AnonymousFunctionc5b93c5c4c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		"": function(a,i,m){return m[2]=="*"||jQuery.nodeName(a,m[2]);},$/;"	f
AnonymousFunctionc5b93c5c4d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		"#": function(a,i,m){return a.getAttribute("id")==m[2];},$/;"	f
AnonymousFunctionc5b93c5c4e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			lt: function(a,i,m){return i<m[3]-0;},$/;"	f
AnonymousFunctionc5b93c5c4f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			gt: function(a,i,m){return i>m[3]-0;},$/;"	f
AnonymousFunctionc5b93c5c5000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			nth: function(a,i,m){return m[3]-0==i;},$/;"	f
AnonymousFunctionc5b93c5c5100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			eq: function(a,i,m){return m[3]-0==i;},$/;"	f
AnonymousFunctionc5b93c5c5200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			first: function(a,i){return i==0;},$/;"	f
AnonymousFunctionc5b93c5c5300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			last: function(a,i,m,r){return i==r.length-1;},$/;"	f
AnonymousFunctionc5b93c5c5400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			even: function(a,i){return i%2==0;},$/;"	f
AnonymousFunctionc5b93c5c5500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			odd: function(a,i){return i%2;},$/;"	f
AnonymousFunctionc5b93c5c5600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"first-child": function(a){return a.parentNode.getElementsByTagName("*")[0]==a;},$/;"	f
AnonymousFunctionc5b93c5c5700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"last-child": function(a){return jQuery.nth(a.parentNode.lastChild,1,"previousSibling")==a;},$/;"	f
AnonymousFunctionc5b93c5c5800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			"only-child": function(a){return !jQuery.nth(a.parentNode.lastChild,2,"previousSibling");},$/;"	f
AnonymousFunctionc5b93c5c5900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			parent: function(a){return a.firstChild;},$/;"	f
AnonymousFunctionc5b93c5c5a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			empty: function(a){return !a.firstChild;},$/;"	f
AnonymousFunctionc5b93c5c5b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			contains: function(a,i,m){return (a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m/;"	f
AnonymousFunctionc5b93c5c5c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			visible: function(a){return "hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"/;"	f
AnonymousFunctionc5b93c5c5d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			hidden: function(a){return "hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"v/;"	f
AnonymousFunctionc5b93c5c5e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			enabled: function(a){return !a.disabled;},$/;"	f
AnonymousFunctionc5b93c5c5f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			disabled: function(a){return a.disabled;},$/;"	f
AnonymousFunctionc5b93c5c6000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checked: function(a){return a.checked;},$/;"	f
AnonymousFunctionc5b93c5c6100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			selected: function(a){return a.selected||jQuery.attr(a,"selected");},$/;"	f
AnonymousFunctionc5b93c5c6200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			text: function(a){return "text"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			radio: function(a){return "radio"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checkbox: function(a){return "checkbox"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			file: function(a){return "file"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			password: function(a){return "password"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			submit: function(a){return "submit"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			image: function(a){return "image"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			reset: function(a){return "reset"==a.type;},$/;"	f
AnonymousFunctionc5b93c5c6a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			button: function(a){return "button"==a.type||jQuery.nodeName(a,"button");},$/;"	f
AnonymousFunctionc5b93c5c6b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			input: function(a){return \/input|select|textarea|button\/i.test(a.nodeName);},$/;"	f
AnonymousFunctionc5b93c5c6c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			has: function(a,i,m){return jQuery.find(m[3],a).length;},$/;"	f
AnonymousFunctionc5b93c5c6d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			header: function(a){return \/h\\d\/i.test(a.nodeName);},$/;"	f
AnonymousFunctionc5b93c5c6e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	f
AnonymousFunctionc5b93c5c6f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	f
AnonymousFunctionc5b93c5c7000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	multiFilter: function( expr, elems, not ) {$/;"	f
AnonymousFunctionc5b93c5c7100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	find: function( t, context ) {$/;"	f
AnonymousFunctionc5b93c5c7200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	classFilter: function(r,m,not){$/;"	f
AnonymousFunctionc5b93c5c7300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	filter: function(t,r,not) {$/;"	f
AnonymousFunctionc5b93c5c7400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				r = jQuery.grep( r, function(elem, i){$/;"	f	function:AnonymousFunctionc5b93c5c7300
AnonymousFunctionc5b93c5c7500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	dir: function( elem, dir ){$/;"	f
AnonymousFunctionc5b93c5c7600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nth: function(cur,result,dir,elem){$/;"	f
AnonymousFunctionc5b93c5c7700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	sibling: function( n, elem ) {$/;"	f
AnonymousFunctionc5b93c5c7800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			handler = this.proxy( fn, function() {$/;"	f	function:jQuery.event.add
AnonymousFunctionc5b93c5c7900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			handle = jQuery.data(elem, "handle") || jQuery.data(elem, "handle", function(){$/;"	f	function:jQuery.event.add
AnonymousFunctionc5b93c5c7a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		jQuery.each(types.split(\/\\s+\/), function(index, type) {$/;"	f
AnonymousFunctionc5b93c5c7b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each(types.split(\/\\s+\/), function(index, type){$/;"	f
AnonymousFunctionc5b93c5c7c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					preventDefault: function(){},$/;"	f
AnonymousFunctionc5b93c5c7d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					stopPropagation: function(){},$/;"	f
AnonymousFunctionc5b93c5c7e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	bind: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c7f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return type == "unload" ? this.one(type, data, fn) : this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c7e00
AnonymousFunctionc5b93c5c8000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	one: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var one = jQuery.event.proxy( fn || data, function(event) {$/;"	f	function:AnonymousFunctionc5b93c5c8000
AnonymousFunctionc5b93c5c8200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8000
AnonymousFunctionc5b93c5c8300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unbind: function( type, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8300
AnonymousFunctionc5b93c5c8500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trigger: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5c8500
AnonymousFunctionc5b93c5c8700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	triggerHandler: function( type, data, fn ) {$/;"	f
AnonymousFunctionc5b93c5c8800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn ) {$/;"	f
AnonymousFunctionc5b93c5c8900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.click( jQuery.event.proxy( fn, function(event) {$/;"	c	class:AnonymousFunctionc5b93c5c8800
AnonymousFunctionc5b93c5c8a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hover: function(fnOver, fnOut) {$/;"	f
AnonymousFunctionc5b93c5c8b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function(fn) {$/;"	f
AnonymousFunctionc5b93c5c8c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.readyList.push( function() { return fn.call(this, jQuery); } );$/;"	f	function:AnonymousFunctionc5b93c5c8b00
AnonymousFunctionc5b93c5c8d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function() {$/;"	f
AnonymousFunctionc5b93c5c8e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery.each( jQuery.readyList, function(){$/;"	c
AnonymousFunctionc5b93c5c8f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	if ( jQuery.browser.msie && window == top ) (function(){$/;"	f	function:bindReady
AnonymousFunctionc5b93c5c9000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		document.addEventListener( "DOMContentLoaded", function () {$/;"	f	function:bindReady
AnonymousFunctionc5b93c5c9100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	"submit,keydown,keypress,keyup,error").split(","), function(i, name){$/;"	f
AnonymousFunctionc5b93c5c9200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery(window).bind("unload", function() {$/;"	f
AnonymousFunctionc5b93c5c9300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	load: function( url, params, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			complete: function(res, status){$/;"	f
AnonymousFunctionc5b93c5c9500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serialize: function() {$/;"	f
AnonymousFunctionc5b93c5c9600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serializeArray: function() {$/;"	f
AnonymousFunctionc5b93c5c9700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.map(function(){$/;"	f	function:AnonymousFunctionc5b93c5c9600
AnonymousFunctionc5b93c5c9800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		.filter(function(){$/;"	f
AnonymousFunctionc5b93c5c9900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		.map(function(i, elem){$/;"	f
AnonymousFunctionc5b93c5c9a00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.map( val, function(val, i){$/;"	f	function:AnonymousFunctionc5b93c5c9900
AnonymousFunctionc5b93c5c9b00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each( "ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","), functi/;"	f
AnonymousFunctionc5b93c5c9c00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	get: function( url, data, callback, type ) {$/;"	f
AnonymousFunctionc5b93c5c9d00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getScript: function( url, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9e00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getJSON: function( url, data, callback ) {$/;"	f
AnonymousFunctionc5b93c5c9f00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	post: function( url, data, callback, type ) {$/;"	f
AnonymousFunctionc5b93c5ca000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajaxSetup: function( settings ) {$/;"	f
AnonymousFunctionc5b93c5ca100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajax: function( s ) {$/;"	f
AnonymousFunctionc5b93c5ca200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				setTimeout(function(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
AnonymousFunctionc5b93c5ca300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	handleError: function( s, xhr, status, e ) {$/;"	f
AnonymousFunctionc5b93c5ca400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpSuccess: function( xhr ) {$/;"	f
AnonymousFunctionc5b93c5ca500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpNotModified: function( xhr, url ) {$/;"	f
AnonymousFunctionc5b93c5ca600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpData: function( xhr, type, filter ) {$/;"	f
AnonymousFunctionc5b93c5ca700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	param: function( a ) {$/;"	f
AnonymousFunctionc5b93c5ca800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( a, function(){$/;"	f	function:AnonymousFunctionc5b93c5ca700
AnonymousFunctionc5b93c5ca900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					jQuery.each( a[j], function(){$/;"	f	function:AnonymousFunctionc5b93c5ca700
AnonymousFunctionc5b93c5caa00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cab00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.filter(":hidden").each(function(){$/;"	c
AnonymousFunctionc5b93c5cac00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cad00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.filter(":visible").each(function(){$/;"	c
AnonymousFunctionc5b93c5cae00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn, fn2 ){$/;"	f
AnonymousFunctionc5b93c5caf00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.each(function(){$/;"	f
AnonymousFunctionc5b93c5cb000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideDown: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cb100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideUp: function(speed,callback){$/;"	f
AnonymousFunctionc5b93c5cb200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideToggle: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeIn: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeOut: function(speed, callback){$/;"	f
AnonymousFunctionc5b93c5cb500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeTo: function(speed,to,callback){$/;"	f
AnonymousFunctionc5b93c5cb600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	animate: function( prop, speed, easing, callback ) {$/;"	f
AnonymousFunctionc5b93c5cb700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this[ optall.queue === false ? "each" : "queue" ](function(){$/;"	f
AnonymousFunctionc5b93c5cb800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.each( prop, function(name, val){$/;"	f
AnonymousFunctionc5b93c5cb900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	queue: function(type, fn){$/;"	f
AnonymousFunctionc5b93c5cba00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		return this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5cb900
AnonymousFunctionc5b93c5cbb00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	stop: function(clearQueue, gotoEnd){$/;"	c
AnonymousFunctionc5b93c5cbc00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.each(function(){$/;"	f	function:AnonymousFunctionc5b93c5cbb00
AnonymousFunctionc5b93c5cbd00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	return this.each(function(){$/;"	f	function:jQuery.fn.dequeue
AnonymousFunctionc5b93c5cbe00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	speed: function(speed, easing, fn) {$/;"	f
AnonymousFunctionc5b93c5cbf00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		linear: function( p, n, firstNum, diff ) {$/;"	f
AnonymousFunctionc5b93c5cc000	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		swing: function( p, n, firstNum, diff ) {$/;"	f
AnonymousFunctionc5b93c5cc100	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fx: function( elem, options, prop ){$/;"	c
AnonymousFunctionc5b93c5cc200	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery.timerId = setInterval(function(){$/;"	f
AnonymousFunctionc5b93c5cc300	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollLeft: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc400	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollTop: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc500	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		opacity: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc600	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		_default: function(fx){$/;"	f
AnonymousFunctionc5b93c5cc700	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	position: function() {$/;"	f
AnonymousFunctionc5b93c5cc800	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	offsetParent: function() {$/;"	f
AnonymousFunctionc5b93c5cc900	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each( ['Left', 'Top'], function(i, name) {$/;"	f
AnonymousFunctionc5b93c5cca00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.each(function() {$/;"	c	class:jQuery.fn
AnonymousFunctionc5b93c5ccb00	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.each([ "Height", "Width" ], function(i, name){$/;"	f
AnonymousFunctione553a8490100	plugged/coc.nvim/jest.js	/^process.on('uncaughtException', function(err) {$/;"	f
Answer	plugged/vim-gitgutter/test/test_gitgutter.vim	/^  func Answer(char)$/;"	f
AntlrActionScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrActionScriptLexer(DelegatingLexer):$/;"	c
AntlrCSharpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrCSharpLexer(DelegatingLexer):$/;"	c
AntlrCppLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrCppLexer(DelegatingLexer):$/;"	c
AntlrJavaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrJavaLexer(DelegatingLexer):$/;"	c
AntlrLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrLexer(RegexLexer):$/;"	c
AntlrObjectiveCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrObjectiveCLexer(DelegatingLexer):$/;"	c
AntlrPerlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrPerlLexer(DelegatingLexer):$/;"	c
AntlrPythonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrPythonLexer(DelegatingLexer):$/;"	c
AntlrRubyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class AntlrRubyLexer(DelegatingLexer):$/;"	c
Any background context you can provide?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Any background context you can provide?$/;"	t
ApacheConfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class ApacheConfLexer(RegexLexer):$/;"	c
AppEngineManager	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^class AppEngineManager(RequestMethods):$/;"	c
AppEnginePlatformError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^class AppEnginePlatformError(HTTPError):$/;"	c
AppEnginePlatformWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^class AppEnginePlatformWarning(HTTPWarning):$/;"	c
AppleScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class AppleScriptLexer(RegexLexer):$/;"	c
ArduinoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class ArduinoLexer(CppLexer):$/;"	c
ArduinoStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/arduino.py	/^class ArduinoStyle(Style):$/;"	c
ArgumentDefaultsHelpFormatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class ArgumentDefaultsHelpFormatter(HelpFormatter):$/;"	c
ArgumentError	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class ArgumentError(Exception):$/;"	c
ArgumentParser	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class ArgumentParser(_AttributeHolder, _ActionsContainer):$/;"	c
ArgumentTypeError	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class ArgumentTypeError(Exception):$/;"	c
Array	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	c
AspectJLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class AspectJLexer(JavaLexer):$/;"	c
AssertFixer	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertFixer :call ale#assert#Fixer(<args>)$/;"	c
AssertLSPAddress	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPAddress :call ale#assert#LSPAddress(<args>)$/;"	c
AssertLSPConfig	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPConfig :call ale#assert#LSPConfig(<args>)$/;"	c
AssertLSPLanguage	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPLanguage :call ale#assert#LSPLanguage(<args>)$/;"	c
AssertLSPOptions	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPOptions :call ale#assert#LSPOptions(<args>)$/;"	c
AssertLSPProject	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPProject :call ale#assert#LSPProject(<args>)$/;"	c
AssertLinter	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLinter :call ale#assert#Linter(<args>)$/;"	c
AssertLinterNotExecuted	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=0 AssertLinterNotExecuted :call ale#assert#LinterNotExecuted()$/;"	c
AsymptoteLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^class AsymptoteLexer(RegexLexer):$/;"	c
Asynchronous Lint Engine [![Travis CI Build Status](https://travis-ci.org/w0rp/ale.svg?branch=master)](https://travis-ci.org/w0rp/ale) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/r0ef1xu8xjmik58d/branch/master?svg=true)](https://ci.appveyor.com/project/w0rp/ale) [![Join the chat at https://gitter.im/vim-ale/Lobby](https://badges.gitter.im/vim-ale/Lobby.svg)](https://gitter.im/vim-ale/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)	plugged/ale/README.md	/^# Asynchronous Lint Engine [![Travis CI Build Status](https:\/\/travis-ci.org\/w0rp\/ale.svg?bra/;"	c
AtomsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^class AtomsLexer(RegexLexer):$/;"	c
Attribution	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s
AuthBase	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^class AuthBase(object):$/;"	c
AuthenticateMessage	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^class AuthenticateMessage(object):$/;"	c
Author	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Author<\/h2>$/;"	i
Author	plugged/lightline.vim/README.md	/^## Author$/;"	s
AutoItLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^class AutoItLexer(RegexLexer):$/;"	c
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
AutohotkeyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^class AutohotkeyLexer(RegexLexer):$/;"	c
Autojump from tabstop when it's empty	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# Autojump from tabstop when it's empty$/;"	c
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
AutumnStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/autumn.py	/^class AutumnStyle(Style):$/;"	c
AvFlags	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^class AvFlags(object):$/;"	c
AwkLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^class AwkLexer(RegexLexer):$/;"	c
BACKGROUND	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^BACKGROUND = "#2f1e2e"$/;"	v
BACKGROUND	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^BACKGROUND = "#e7e9db"$/;"	v
BACKOFF_MAX	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    BACKOFF_MAX = 120$/;"	v	class:Retry
BACKSLASH	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^BACKSLASH = {$/;"	v
BACKSLASH_REPLACE_PATTERN	plugged/vim-wakatime/packages/wakatime/utils.py	/^BACKSLASH_REPLACE_PATTERN = re.compile(r'[\\\\\/]+')$/;"	v
BBCodeFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^class BBCodeFormatter(Formatter):$/;"	c
BBCodeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class BBCodeLexer(RegexLexer):$/;"	c
BCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^class BCLexer(RegexLexer):$/;"	c
BIG5_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^BIG5_CHAR_LEN_TABLE = (0, 1, 1, 2, 0)$/;"	v
BIG5_CHAR_TO_FREQ_ORDER	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5freq.py	/^BIG5_CHAR_TO_FREQ_ORDER = ($/;"	v
BIG5_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^BIG5_CLS = ($/;"	v
BIG5_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^BIG5_SM_MODEL = {'class_table': BIG5_CLS,$/;"	v
BIG5_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^BIG5_ST = ($/;"	v
BIG5_TABLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5freq.py	/^BIG5_TABLE_SIZE = 5376$/;"	v
BIG5_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5freq.py	/^BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
BLANK_NODE_LABEL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    BLANK_NODE_LABEL = '_:[0-9' + PN_CHARS_U_GRP + '](?:[' + PN_CHARS_GRP + \\$/;"	v	class:SparqlLexer
BLOCK_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    BLOCK_KEYWORDS = set(($/;"	v	class:DelphiLexer
BLUE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^BLUE = "#06b6ef"$/;"	v
BLUE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^BLUE = "#06b6ef"$/;"	v
BLUE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^BLUE = '#2c5dcd'$/;"	v
BLUE_LIGHT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^BLUE_LIGHT = '#0080ff'$/;"	v
BOOLEAN_STATES	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    BOOLEAN_STATES = {'1': True, 'yes': True, 'true': True, 'on': True,$/;"	v	class:RawConfigParser
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile('([}{])')$/;"	v	class:VimInterfaceWindows
BS	plugged/ultisnips/test/constant.py	/^BS = '\\x7f'$/;"	v
BSTLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^class BSTLexer(RegexLexer):$/;"	c
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
BUILTIN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    BUILTIN = ($/;"	v	class:ElixirLexer
BUILTINS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lasso_builtins.py	/^BUILTINS = {$/;"	v
BUILTINS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    BUILTINS = ($/;"	v	class:ShenLexer
BUILTINS_ANYWHERE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    BUILTINS_ANYWHERE = ('where', 'skip', '>>', '_', '!', '<e>', '<!>')$/;"	v	class:ShenLexer
BUILTIN_CLASSES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^BUILTIN_CLASSES = set(($/;"	v
BUILTIN_DECLARATION	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    BUILTIN_DECLARATION = ($/;"	v	class:ElixirLexer
BUILTIN_FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^BUILTIN_FUNCTIONS = set((  # 638 functions$/;"	v
BUILTIN_NAMESPACE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    BUILTIN_NAMESPACE = ('import', 'require', 'use', 'alias')$/;"	v	class:ElixirLexer
BUILTIN_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^BUILTIN_TYPES = set(($/;"	v
BUILTIN_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    BUILTIN_TYPES = set(($/;"	v	class:DelphiLexer
BUILTIN_UNITS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    BUILTIN_UNITS = {$/;"	v	class:DelphiLexer
Backers	plugged/coc.nvim/Readme.md	/^## Backers$/;"	s
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BaseAdapter	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^class BaseAdapter(object):$/;"	c
BaseHTTPError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^from urllib3.exceptions import HTTPError as BaseHTTPError$/;"	x
BaseMakefileLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^class BaseMakefileLexer(RegexLexer):$/;"	c
BaseProject	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^class BaseProject(object):$/;"	c
BaseSSLError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    BaseSSLError = ssl.SSLError$/;"	v
BaseSSLError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    class BaseSSLError(BaseException):$/;"	c
BaseSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^class BaseSelector(object):$/;"	c
BaseTzInfo	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^class BaseTzInfo(tzinfo):$/;"	c
BashLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class BashLexer(RegexLexer):$/;"	c
BashSessionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class BashSessionLexer(ShellSessionBaseLexer):$/;"	c
Basic Options	plugged/ctrlp.vim/readme.md	/^## Basic Options$/;"	s
Basic Usage	plugged/ctrlp.vim/readme.md	/^## Basic Usage$/;"	s
BasicInterpolation	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class BasicInterpolation(Interpolation):$/;"	c
BatchLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class BatchLexer(RegexLexer):$/;"	c
Before you add a feature	plugged/ultisnips/CONTRIBUTING.md	/^## Before you add a feature$/;"	s
BefungeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class BefungeLexer(RegexLexer):$/;"	c
BibTeXLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^class BibTeXLexer(ExtendedRegexLexer):$/;"	c
Big5DistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class Big5DistributionAnalysis(CharDistributionAnalysis):$/;"	c
Big5Prober	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5prober.py	/^class Big5Prober(MultiByteCharSetProber):$/;"	c
Bison, Flex	plugged/vim-syntax-extra/README.md	/^Bison, Flex$/;"	s
BlackWhiteStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/bw.py	/^class BlackWhiteStyle(Style):$/;"	c
BlitzBasicLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^class BlitzBasicLexer(RegexLexer):$/;"	c
BlitzMaxLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^class BlitzMaxLexer(RegexLexer):$/;"	c
BmpImageFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class BmpImageFormatter(ImageFormatter):$/;"	c
BnfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^class BnfLexer(RegexLexer):$/;"	c
BodyNotHttplibCompatible	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class BodyNotHttplibCompatible(HTTPError):$/;"	c
BooLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class BooLexer(RegexLexer):$/;"	c
BoogieLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^class BoogieLexer(RegexLexer):$/;"	c
Bookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Boolean	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^Boolean = c_bool$/;"	v
BorlandStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/borland.py	/^class BorlandStyle(Style):$/;"	c
BrainfuckLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class BrainfuckLexer(RegexLexer):$/;"	c
BroLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class BroLexer(RegexLexer):$/;"	c
BufferGatorAuto	plugged/vim-buffergator/autoload/buffergator.vim	/^augroup BufferGatorAuto$/;"	a
BuffergatorBuffersStatusLine	plugged/vim-buffergator/autoload/buffergator.vim	/^function! BuffergatorBuffersStatusLine()$/;"	f
BuffergatorCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^        augroup BuffergatorCatalogViewer$/;"	a
BuffergatorClose	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorClose       :call buffergator#CloseBuffergator()$/;"	c
BuffergatorMRU	plugged/vim-buffergator/plugin/buffergator.vim	/^augroup BuffergatorMRU$/;"	a
BuffergatorMruCycleNext	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=* BuffergatorMruCycleNext :call buffergator#BuffergatorCycleMru(1, "<args>")$/;"	c
BuffergatorMruCyclePrev	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=* BuffergatorMruCyclePrev :call buffergator#BuffergatorCycleMru(-1, "<args>")$/;"	c
BuffergatorMruList	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=? -bang BuffergatorMruList     :call buffergator#BuffergatorEchoMruList('<bang>'/;"	c
BuffergatorOpen	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorOpen        :call buffergator#OpenBuffergator()$/;"	c
BuffergatorTabsClose	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsClose   :call buffergator#CloseBuffergatorTabs()$/;"	c
BuffergatorTabsOpen	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsOpen    :call buffergator#OpenBuffergatorTabs()$/;"	c
BuffergatorTabsStatusLine	plugged/vim-buffergator/autoload/buffergator.vim	/^function! BuffergatorTabsStatusLine()$/;"	f
BuffergatorTabsToggle	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorTabsToggle  :call buffergator#ToggleBuffergatorTabs()$/;"	c
BuffergatorToggle	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorToggle      :call buffergator#ToggleBuffergator()$/;"	c
BuffergatorUpdate	plugged/vim-buffergator/plugin/buffergator.vim	/^command! -nargs=0 BuffergatorUpdate      :call buffergator#UpdateBuffergator('',-1)$/;"	c
BuffergatorUpdateMRU	plugged/vim-buffergator/plugin/buffergator.vim	/^function! BuffergatorUpdateMRU(acmd_bufnr)$/;"	f
Bug Fixes	plugged/nord-vim/CHANGELOG.md	/^## Bug Fixes$/;"	s
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
BugsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^class BugsLexer(RegexLexer):$/;"	c
Building	plugged/vim-vue/.circleci/README.md	/^## Building$/;"	s
BuiltIn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    BuiltIn = ('attachment', 'attribute run', 'character', 'day', 'month',$/;"	v	class:AppleScriptLexer
BulgarianLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langbulgarianmodel.py	/^BulgarianLangModel = ($/;"	v
BytesIO	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    BytesIO = cStringIO.StringIO$/;"	v
BytesIO	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
BytesIO	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    BytesIO = io.BytesIO$/;"	v
C	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> C    :<C-u>exe "vertical resize ".(<SID>linechars('^\\S\\+')+/;"	m
C	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> C     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
C	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> C :<C-U>Gcommit<CR>:echohl WarningMsg<Bar>echo ':Gstatus C is dep/;"	m
C	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^C = 0x1000000000$/;"	v
CAmkESLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class CAmkESLexer(RegexLexer):$/;"	c
CFAllocatorRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFAllocatorRef = c_void_p$/;"	v
CFArray	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFArray = c_void_p$/;"	v
CFArrayCallBacks	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFArrayCallBacks = c_void_p$/;"	v
CFArrayRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFArrayRef = POINTER(CFArray)$/;"	v
CFConst	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^class CFConst(object):$/;"	c
CFData	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFData = c_void_p$/;"	v
CFDataRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFDataRef = POINTER(CFData)$/;"	v
CFDictionary	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFDictionary = c_void_p$/;"	v
CFDictionaryKeyCallBacks	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryKeyCallBacks = c_void_p$/;"	v
CFDictionaryRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryRef = POINTER(CFDictionary)$/;"	v
CFDictionaryValueCallBacks	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFDictionaryValueCallBacks = c_void_p$/;"	v
CFError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFError = c_void_p$/;"	v
CFIndex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFIndex = c_long$/;"	v
CFMutableArray	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArray = c_void_p$/;"	v
CFMutableArrayRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFMutableArrayRef = POINTER(CFMutableArray)$/;"	v
CFString	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFString = c_void_p$/;"	v
CFStringEncoding	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFStringEncoding = c_uint32$/;"	v
CFStringRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFStringRef = POINTER(CFString)$/;"	v
CFType	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFType = c_void_p$/;"	v
CFTypeID	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFTypeID = c_ulong$/;"	v
CFTypeRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CFTypeRef = POINTER(CFType)$/;"	v
CFamilyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^class CFamilyLexer(RegexLexer):$/;"	c
CHANGELOG	plugged/vim-devicons/CHANGELOG.md	/^CHANGELOG$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\$\\d+')$/;"	v	class:MirrorToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+[:}]')$/;"	v	class:TabStopToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+\\\/')$/;"	v	class:TransformationToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!p\\s')$/;"	v	class:PythonCodeToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!v\\s')$/;"	v	class:VimLCodeToken
CHINESE	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    CHINESE = CHINESE_SIMPLIFIED | CHINESE_TRADITIONAL$/;"	v	class:LanguageFilter
CHINESE_SIMPLIFIED	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    CHINESE_SIMPLIFIED = 0x01$/;"	v	class:LanguageFilter
CHINESE_TRADITIONAL	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    CHINESE_TRADITIONAL = 0x02$/;"	v	class:LanguageFilter
CIPHER_SUITES	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^CIPHER_SUITES = [$/;"	v
CJK	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    CJK = CHINESE | JAPANESE | KOREAN$/;"	v	class:LanguageFilter
CLASS_NUM	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^CLASS_NUM = 8  # total classes$/;"	v
CLIENT_SEALING	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    CLIENT_SEALING = b"session key to client-to-server sealing key magic constant\\0"$/;"	v	class:SignSealConstants
CLIENT_SIGNING	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    CLIENT_SIGNING = b"session key to client-to-server signing key magic constant\\0"$/;"	v	class:SignSealConstants
CLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^class CLexer(CFamilyLexer):$/;"	c
CMakeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^class CMakeLexer(RegexLexer):$/;"	c
COCOA_INTERFACES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^COCOA_INTERFACES = set(['UITableViewCell', 'HKCorrelationQuery', 'NSURLSessionDataTask', 'PHFetc/;"	v
COCOA_PRIMITIVES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^COCOA_PRIMITIVES = set(['ROTAHeader', '__CFBundle', 'MortSubtable', 'AudioFilePacketTableInfo', /;"	v
COCOA_PROTOCOLS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^COCOA_PROTOCOLS = set(['SKStoreProductViewControllerDelegate', 'AVVideoCompositionInstruction', /;"	v
COMMAND_RE	plugged/ale/test/script/block-padding-checker	/^COMMAND_RE = re.compile(r'^ *([a-zA-Z\\\\]+)')$/;"	v
COMMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^COMMENT = Token.Comment$/;"	v
COMMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^COMMENT = "#776e71"$/;"	v
COMMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^COMMENT = "#8d8687"$/;"	v
COMMENT_LINE_RE	plugged/ale/test/script/block-padding-checker	/^COMMENT_LINE_RE = re.compile(r'^ *"')$/;"	v
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = 'completion1\\ncompletion2\\n'$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
CONFIG_FILE	plugged/javascript-libraries-syntax.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CONFIG_FILE_PARSE_ERROR	plugged/vim-wakatime/packages/wakatime/constants.py	/^CONFIG_FILE_PARSE_ERROR = 103$/;"	v
CONFIG_PLUGINS	plugged/vim-wakatime/packages/wakatime/project.py	/^CONFIG_PLUGINS = [$/;"	v
CONNECTION_ERROR	plugged/vim-wakatime/packages/wakatime/constants.py	/^CONNECTION_ERROR = 107$/;"	v
CONSTANT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    CONSTANT = ('nil', 'true', 'false')$/;"	v	class:ElixirLexer
CONTENT_CHUNK_SIZE	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^CONTENT_CHUNK_SIZE = 10 * 1024$/;"	v
CONTENT_DECODERS	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    CONTENT_DECODERS = ['gzip', 'deflate']$/;"	v	class:HTTPResponse
CONTENT_TYPE_FORM_URLENCODED	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^CONTENT_TYPE_FORM_URLENCODED = 'application\/x-www-form-urlencoded'$/;"	v
CONTENT_TYPE_MULTI_PART	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^CONTENT_TYPE_MULTI_PART = 'multipart\/form-data'$/;"	v
CONTROL	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    CONTROL = 251$/;"	v	class:CharacterCategory
CObjdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class CObjdumpLexer(DelegatingLexer):$/;"	c
CP949Prober	plugged/vim-wakatime/packages/wakatime/packages/chardet/cp949prober.py	/^class CP949Prober(MultiByteCharSetProber):$/;"	c
CP949_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^CP949_CHAR_LEN_TABLE = (0, 1, 2, 0, 1, 1, 2, 2, 0, 2)$/;"	v
CP949_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^CP949_CLS  = ($/;"	v
CP949_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^CP949_SM_MODEL = {'class_table': CP949_CLS,$/;"	v
CP949_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^CP949_ST = ($/;"	v
CPSALexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class CPSALexer(SchemeLexer):$/;"	c
CParser	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^class CParser(TokenParser):$/;"	c
CRYSTAL_OPERATORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^CRYSTAL_OPERATORS = [$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CSSFILE_TEMPLATE	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^CSSFILE_TEMPLATE = '''\\$/;"	v
CS_ESCAPE	plugged/vim-wakatime/packages/wakatime/packages/pygments/regexopt.py	/^CS_ESCAPE = re.compile(r'[\\^\\\\\\-\\]]')$/;"	v
CSharpAspxLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class CSharpAspxLexer(DelegatingLexer):$/;"	c
CSharpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class CSharpLexer(RegexLexer):$/;"	c
CSharpParser	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^class CSharpParser(TokenParser):$/;"	c
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CURL_OPT	plugged/javascript-libraries-syntax.vim/Makefile	/^CURL_OPT=$/;"	m
CURRENT_LINE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^CURRENT_LINE = "#41323f"$/;"	v
CURRENT_LINE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^CURRENT_LINE = "#b9b6b0"$/;"	v
Ca65Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class Ca65Lexer(RegexLexer):$/;"	c
CadlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^class CadlLexer(AtomsLexer):$/;"	c
Can I display the plugin information at the filename component?	plugged/lightline.vim/README.md	/^### Can I display the plugin information at the filename component?$/;"	S
Can I display the plugin name at the mode component?	plugged/lightline.vim/README.md	/^### Can I display the plugin name at the mode component?$/;"	S
Can I hide the readonly component in other plugins buffer?	plugged/lightline.vim/README.md	/^### Can I hide the readonly component in other plugins buffer?$/;"	S
Can I hide the readonly component in the help buffer?	plugged/lightline.vim/README.md	/^### Can I hide the readonly component in the help buffer?$/;"	S
Can I trim the bar between the filename and modified sign?	plugged/lightline.vim/README.md	/^### Can I trim the bar between the filename and modified sign?$/;"	S
Can I trim the file format and encoding information on narrow windows?	plugged/lightline.vim/README.md	/^### Can I trim the file format and encoding information on narrow windows?$/;"	S
Can I use `ag` ([The Silver Searcher]) with this?	plugged/ack.vim/README.md	/^#### Can I use `ag` ([The Silver Searcher]) with this?$/;"	t
CapDLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class CapDLLexer(RegexLexer):$/;"	c
CapnProtoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^class CapnProtoLexer(RegexLexer):$/;"	c
CaseInsensitiveDict	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^class CaseInsensitiveDict(collections.MutableMapping):$/;"	c
CbmBasicV2Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^class CbmBasicV2Lexer(RegexLexer):$/;"	c
Cc	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Cc = u'\\x00-\\x1f\\x7f-\\x9f'$/;"	v
Center	plugged/numbers.vim/plugin/numbers.vim	/^function! Center()$/;"	f
Central	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^Central  = USTimeZone(-6, "Central",  "CST", "CDT")$/;"	v
CertificateError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^class CertificateError(ValueError):$/;"	c
CeylonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class CeylonLexer(RegexLexer):$/;"	c
Cf	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Cf = u'\\xad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u/;"	v
Cfengine3Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class Cfengine3Lexer(RegexLexer):$/;"	c
ChainMap	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    ChainMap = _ChainMap$/;"	v
ChaiscriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class ChaiscriptLexer(RegexLexer):$/;"	c
ChallengeMessage	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^class ChallengeMessage(object):$/;"	c
Changelog	plugged/ack.vim/README.md	/^## Changelog$/;"	s
Changes	plugged/javascript-libraries-syntax.vim/README.md	/^Changes$/;"	s
ChapelLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^class ChapelLexer(RegexLexer):$/;"	c
CharDistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class CharDistributionAnalysis(object):$/;"	c
CharSetGroupProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^class CharSetGroupProber(CharSetProber):$/;"	c
CharSetProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^class CharSetProber(object):$/;"	c
CharacterCategory	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class CharacterCategory(object):$/;"	c
CheetahHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CheetahHtmlLexer(DelegatingLexer):$/;"	c
CheetahJavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CheetahJavascriptLexer(DelegatingLexer):$/;"	c
CheetahLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CheetahLexer(RegexLexer):$/;"	c
CheetahPythonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CheetahPythonLexer(Lexer):$/;"	c
CheetahXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CheetahXmlLexer(DelegatingLexer):$/;"	c
ChunkedEncodingError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ChunkedEncodingError(RequestException):$/;"	c
CirruLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^class CirruLexer(RegexLexer):$/;"	c
ClassNotFound	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^class ClassNotFound(ValueError):$/;"	c
Classes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Classes = ('alias ', 'application ', 'boolean ', 'class ', 'constant ',$/;"	v	class:AppleScriptLexer
ClayLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class ClayLexer(RegexLexer):$/;"	c
CleanLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^class CleanLexer(ExtendedRegexLexer):$/;"	c
CleanUp	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
Cleaning	plugged/vim-vue/.circleci/README.md	/^## Cleaning$/;"	s
ClearAllBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearAllCtrlPCaches	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
ClearCtrlPCache	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
ClojureLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class ClojureLexer(RegexLexer):$/;"	c
ClojureScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class ClojureScriptLexer(ClojureLexer):$/;"	c
ClosedPoolError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ClosedPoolError(PoolError):$/;"	c
Cn	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Cn = u'\\u0378-\\u0379\\u037f-\\u0383\\u038b\\u038d\\u03a2\\u0528-\\u0530\\u0557-\\u0558\\u0560\\/;"	v
Co	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Co = u'\\ue000-\\uf8ff'$/;"	v
CobolFreeformatLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class CobolFreeformatLexer(CobolLexer):$/;"	c
CobolLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class CobolLexer(RegexLexer):$/;"	c
CocAction	plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(...) abort$/;"	f
CocActionAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(...) abort$/;"	f
CocCommand	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList    CocCommand   :call s:SendRequest('CocAction'/;"	c
CocConfig	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDisable	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable()$/;"	c
CocInfo	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:SendRequest('showInfo', [])$/;"	c
CocInstall	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_extensio/;"	c
CocList	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call s:SendRequest('openList',/;"	c
CocListResume	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocListResume   :call s:SendRequest('listResume', [])$/;"	c
CocLocations	plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocNext         :call s:SendRequest('listNext', [])$/;"	c
CocOpenLog	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call s:SendRequest('openLog',  [])$/;"	c
CocPrev	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocPrev         :call s:SendRequest('listPrev', [])$/;"	c
CocRebuild	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRequest	plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocStart	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocUninstall	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call s:SendRequest('CocAction'/;"	c
CocUpdate	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call s:SendRequest('updateExtension', [])$/;"	c
CocUpdateSync	plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CodeTagFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class CodeTagFilter(Filter):$/;"	c
Codec	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^class Codec(codecs.Codec):$/;"	c
CodingStateMachine	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^class CodingStateMachine(object):$/;"	c
CoffeeScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class CoffeeScriptLexer(RegexLexer):$/;"	c
ColdfusionCFCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class ColdfusionCFCLexer(DelegatingLexer):$/;"	c
ColdfusionHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class ColdfusionHtmlLexer(DelegatingLexer):$/;"	c
ColdfusionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class ColdfusionLexer(RegexLexer):$/;"	c
ColdfusionMarkupLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class ColdfusionMarkupLexer(RegexLexer):$/;"	c
Color Format	plugged/papercolor-theme/DESIGN.md	/^# Color Format$/;"	c
Color Names	plugged/papercolor-theme/DESIGN.md	/^# Color Names$/;"	c
Color Ranges	plugged/papercolor-theme/README.md	/^### Color Ranges$/;"	S
ColorfulStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/colorful.py	/^class ColorfulStyle(Style):$/;"	c
Colorscheme configuration	plugged/lightline.vim/README.md	/^## Colorscheme configuration$/;"	s
Colourising namespace separator in `use`, `extends` and `implements`	plugged/php.vim/README.md	/^##### Colourising namespace separator in `use`, `extends` and `implements`$/;"	T
Colourising parentheses	plugged/php.vim/README.md	/^##### Colourising parentheses$/;"	T
Command-Line Completion	plugged/far.vim/README.md	/^### Command-Line Completion$/;"	S
Commands	plugged/indentLine/README.md	/^### Commands$/;"	S
Commands	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Commands = ('ASCII (character|number)', 'activate', 'beep', 'choose URL',$/;"	v	class:AppleScriptLexer
Commands:	plugged/vim-wakatime/README.md	/^#### Commands:$/;"	t
Comment	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class Comment(Tokenizer):$/;"	c
Comment	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Comment = Token.Comment$/;"	v
Comment Contrast	plugged/nord-vim/README.md	/^### Comment Contrast$/;"	S
CommonLispLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class CommonLispLexer(RegexLexer):$/;"	c
CompilerSet	plugged/vim-javascript/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteTaskText	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    CompleteTaskText = Operator  # Chosen to de-emphasize complete tasks$/;"	v	class:TodotxtLexer
Completion sources	plugged/coc.nvim/Readme.md	/^## Completion sources$/;"	s
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ComponentPascalLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^class ComponentPascalLexer(RegexLexer):$/;"	c
ComputeResponse	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^class ComputeResponse():$/;"	c
Concealing Characters	plugged/vim-javascript/README.md	/^## Concealing Characters$/;"	s
Config	plugged/javascript-libraries-syntax.vim/README.md	/^Config$/;"	s
ConfigParser	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class ConfigParser(RawConfigParser):$/;"	c
Configuration	plugged/lightline-ale/README.md	/^## Configuration$/;"	s
Configuration	plugged/nord-vim/README.md	/^## Configuration$/;"	s
Configuration	plugged/php.vim/README.md	/^Configuration$/;"	s
Configuration	plugged/vim-blade/README.md	/^Configuration$/;"	s
Configuration Variables	plugged/vim-javascript/README.md	/^## Configuration Variables$/;"	s
Configurations	plugged/nord-vim/CHANGELOG.md	/^### Configurations$/;"	S
Configuring	plugged/vim-wakatime/README.md	/^Configuring$/;"	s
ConnectTimeout	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ConnectTimeout(ConnectionError, Timeout):$/;"	c
ConnectTimeoutError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ConnectTimeoutError(TimeoutError):$/;"	c
ConnectionCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    ConnectionCls = HTTPConnection$/;"	v	class:HTTPConnectionPool
ConnectionCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    ConnectionCls = HTTPSConnection$/;"	v	class:HTTPSConnectionPool
ConnectionCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSConnection$/;"	v	class:SOCKSHTTPConnectionPool
ConnectionCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    ConnectionCls = SOCKSHTTPSConnection$/;"	v	class:SOCKSHTTPSConnectionPool
ConnectionError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ConnectionError(RequestException):$/;"	c
ConnectionError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    class ConnectionError(Exception):$/;"	c
ConnectionError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^ConnectionError = ProtocolError$/;"	v
ConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^class ConnectionPool(object):$/;"	c
Consistency Check	plugged/far.vim/README.md	/^### Consistency Check$/;"	S
ContainerCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    ContainerCls = OrderedDict$/;"	v	class:RecentlyUsedContainer
ContentDecodingError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ContentDecodingError(RequestException, BaseHTTPError):$/;"	c
Contents	plugged/vim-snippets/README.md	/^Contents$/;"	s
Context	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    Context = String$/;"	v	class:TodotxtLexer
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
Contributing	plugged/vim-blade/README.md	/^Contributing$/;"	s
Contributing	plugged/vim-devicons/README.md	/^Contributing$/;"	s
Contributing	plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	plugged/vim-javascript/README.md	/^## Contributing$/;"	s
Contributing	plugged/vim-repeat/README.markdown	/^## Contributing$/;"	s
Contributing	plugged/vim-surround/README.markdown	/^## Contributing$/;"	s
Contributing	plugged/vim-vue/readme.md	/^## Contributing$/;"	s
Contributing Guide	plugged/vim-devicons/CONTRIBUTING.md	/^# Contributing Guide$/;"	c
Contributing to UltiSnips	plugged/ultisnips/CONTRIBUTING.md	/^# Contributing to UltiSnips$/;"	c
Contribution	plugged/nord-vim/README.md	/^### Contribution$/;"	S
Contributor Covenant Code of Conduct	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Control	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Control = ('considering', 'else', 'error', 'exit', 'from', 'if',$/;"	v	class:AppleScriptLexer
ConverterMapping	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class ConverterMapping(MutableMapping):$/;"	c
CookieConflictError	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^class CookieConflictError(RuntimeError):$/;"	c
CoqLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^class CoqLexer(RegexLexer):$/;"	c
CoreFoundation	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^CoreFoundation = CDLL(core_foundation_path, use_errno=True)$/;"	v
CppLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^class CppLexer(CFamilyLexer):$/;"	c
CppObjdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class CppObjdumpLexer(DelegatingLexer):$/;"	c
CppParser	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^class CppParser(CParser):$/;"	c
Create your own theme	plugged/papercolor-theme/DESIGN.md	/^# Create your own theme$/;"	c
Creating Issues	plugged/ale/.github/CONTRIBUTING.md	/^## Creating Issues$/;"	s
Credits	plugged/ack.vim/README.md	/^## Credits$/;"	s
Credits	plugged/javascript-libraries-syntax.vim/README.md	/^Credits$/;"	s
CrmshLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class CrmshLexer(RegexLexer):$/;"	c
CrocLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^class CrocLexer(RegexLexer):$/;"	c
CryptolLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class CryptolLexer(RegexLexer):$/;"	c
CrystalLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^class CrystalLexer(ExtendedRegexLexer):$/;"	c
Cs	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^    Cs = ''  # Jython can't handle isolated surrogates$/;"	v
CsoundDocumentLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^class CsoundDocumentLexer(RegexLexer):$/;"	c
CsoundLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^class CsoundLexer(RegexLexer):$/;"	c
CsoundOrchestraLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^class CsoundOrchestraLexer(CsoundLexer):$/;"	c
CsoundScoreLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^class CsoundScoreLexer(CsoundLexer):$/;"	c
CssDjangoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CssDjangoLexer(DelegatingLexer):$/;"	c
CssErbLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CssErbLexer(DelegatingLexer):$/;"	c
CssGenshiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CssGenshiLexer(DelegatingLexer):$/;"	c
CssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^class CssLexer(RegexLexer):$/;"	c
CssPhpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CssPhpLexer(DelegatingLexer):$/;"	c
CssSmartyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class CssSmartyLexer(DelegatingLexer):$/;"	c
CtrlP	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir -bang CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init('buf')$/;"	c
CtrlPChange	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init('fil', { 'mode': 'c' })$/;"	c
CtrlPCurWD	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init('fil', { 'mode': '' })$/;"	c
CtrlPDir	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLazy	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		aug CtrlPLazy$/;"	a
CtrlPLine	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUF	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^	aug CtrlPMRUF$/;"	a
CtrlPMRUFiles	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init('mru', { 'dir': <q-args> })$/;"	c
CtrlPMixed	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init('fil', { 'mode': 'r' })$/;"	c
CtrlPTag	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	plugged/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CudaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class CudaLexer(CLexer):$/;"	c
Current Result	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Current Result$/;"	S
Currently available language options	plugged/papercolor-theme/README.md	/^#### Currently available language options$/;"	t
Currently available theme options	plugged/papercolor-theme/README.md	/^#### Currently available theme options$/;"	t
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
Custom	plugged/lightline.vim/test/expand.vim	/^  function! Custom()$/;"	f
Custom	plugged/lightline.vim/test/onetab.vim	/^  function! Custom(n)$/;"	f
Custom1	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom1()$/;"	f
Custom2	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	plugged/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
Customization	plugged/indentLine/README.md	/^## Customization$/;"	s
Customize Current Theme Colors	plugged/papercolor-theme/DESIGN.md	/^# Customize Current Theme Colors$/;"	c
CypherLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^class CypherLexer(RegexLexer):$/;"	c
CythonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class CythonLexer(RegexLexer):$/;"	c
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> D           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
D	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> D           :call b:buffergator_catalog_viewer.delete_targ/;"	m
D	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> D    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
D	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> D :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
DATATYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^DATATYPES = ($/;"	v
DATATYPES_URL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    DATATYPES_URL = SOURCE_URL + '\/doc\/src\/sgml\/datatype.sgml'$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DECLARATIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^DECLARATIONS = set(($/;"	v
DECLARATIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    DECLARATIONS = ($/;"	v	class:ShenLexer
DEFAULTSECT	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^DEFAULTSECT = "DEFAULT"$/;"	v
DEFAULT_CA_BUNDLE_PATH	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^DEFAULT_CA_BUNDLE_PATH = certs.where()$/;"	v
DEFAULT_CIPHERS	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^DEFAULT_CIPHERS = ':'.join([$/;"	v
DEFAULT_ENCODING	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define DEFAULT_ENCODING /;"	d	file:
DEFAULT_ENCODING	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^DEFAULT_ENCODING = "utf-8"$/;"	v
DEFAULT_FONT_NAME_MAC	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_MAC = 'Courier New'$/;"	v
DEFAULT_FONT_NAME_NIX	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_NIX = 'Bitstream Vera Sans Mono'$/;"	v
DEFAULT_FONT_NAME_WIN	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^DEFAULT_FONT_NAME_WIN = 'Courier New'$/;"	v
DEFAULT_METHOD_WHITELIST	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    DEFAULT_METHOD_WHITELIST = frozenset([$/;"	v	class:Retry
DEFAULT_POOLBLOCK	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOLBLOCK = False$/;"	v
DEFAULT_POOLSIZE	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOLSIZE = 10$/;"	v
DEFAULT_POOL_TIMEOUT	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_POOL_TIMEOUT = None$/;"	v
DEFAULT_PORTS	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^DEFAULT_PORTS = { SOCKS4: 1080,$/;"	v
DEFAULT_REDIRECT_LIMIT	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^DEFAULT_REDIRECT_LIMIT = 30$/;"	v
DEFAULT_RETRIES	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^DEFAULT_RETRIES = 0$/;"	v
DEFAULT_SYNC_OFFLINE_ACTIVITY	plugged/vim-wakatime/packages/wakatime/constants.py	/^DEFAULT_SYNC_OFFLINE_ACTIVITY = 100$/;"	v
DEFAULT_TIMEOUT	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    DEFAULT_TIMEOUT = _GLOBAL_DEFAULT_TIMEOUT$/;"	v	class:Timeout
DELPHI_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    DELPHI_KEYWORDS = ($/;"	v	class:DelphiLexer
DEPEND_DIR	plugged/javascript-libraries-syntax.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
DES	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^class DES:$/;"	c
DES	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^class DES:$/;"	c
DESException	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^DESException = 'DESException'$/;"	v
DETECTING	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    DETECTING = 0$/;"	v	class:ProbingState
DIGIT	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    DIGIT = 252$/;"	v	class:CharacterCategory
DIRECTIVES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    DIRECTIVES = set(($/;"	v	class:DelphiLexer
DIRS	plugged/javascript-libraries-syntax.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DISTRIBUTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stan_builtins.py	/^DISTRIBUTIONS = ($/;"	v
DJANGO_SETTINGS_MODULE	plugged/ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^DJANGO_SETTINGS_MODULE=foo.settings$/;"	k	section:pytest
DLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^class DLexer(RegexLexer):$/;"	c
DOC_FOOTER	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^DOC_FOOTER = '''\\$/;"	v
DOC_HEADER	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^DOC_HEADER = '''\\$/;"	v
DOC_HEADER_EXTERNALCSS	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^DOC_HEADER_EXTERNALCSS = '''\\$/;"	v
DOC_TEMPLATE	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^DOC_TEMPLATE = r'''$/;"	v
DONT_KNOW	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    DONT_KNOW = -1$/;"	v	class:JapaneseContextAnalysis
DObjdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class DObjdumpLexer(DelegatingLexer):$/;"	c
DPATCH_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    DPATCH_KEYWORDS = ('hunk', 'addfile', 'adddir', 'rmfile', 'rmdir', 'move',$/;"	v	class:DarcsPatchLexer
DSTDIFF	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^DSTDIFF = DSTOFFSET - STDOFFSET$/;"	v
DSTEND	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^DSTEND = datetime(1, 10, 25, 1)$/;"	v
DSTOFFSET	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    DSTOFFSET = timedelta(seconds = -_time.altzone)$/;"	v
DSTSTART	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^DSTSTART = datetime(1, 4, 1, 2)$/;"	v
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = '\/tmp\/file.txt' if not sys.platform.lower().startswith('win') \\$/;"	v
D_ENCRYPT	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def D_ENCRYPT(tup, u, t, s):$/;"	f
DarcsPatchLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^class DarcsPatchLexer(RegexLexer):$/;"	c
DartLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class DartLexer(RegexLexer):$/;"	c
Date	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    Date = Generic.Subheading$/;"	v	class:TodotxtLexer
DebianControlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^class DebianControlLexer(RegexLexer):$/;"	c
Decimal	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *Decimal;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
Declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Declarations = ('global', 'local', 'prop(erty)?', 'set', 'get')$/;"	v	class:AppleScriptLexer
DecodeError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class DecodeError(HTTPError):$/;"	c
DefaultSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^def DefaultSelector():$/;"	f
DefaultStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/default.py	/^class DefaultStyle(Style):$/;"	c
DeflateDecoder	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^class DeflateDecoder(object):$/;"	c
DelegatingLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class DelegatingLexer(Lexer):$/;"	c
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
DelphiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^class DelphiLexer(Lexer):$/;"	c
Denite source	plugged/nvim-miniyank/README.md	/^# Denite source$/;"	c
DependencyParser	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^class DependencyParser(object):$/;"	c
DependencyWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class DependencyWarning(HTTPWarning):$/;"	c
DeprecatedBundleWarning	plugged/vim-wakatime/packages/wakatime/packages/certifi/core.py	/^class DeprecatedBundleWarning(DeprecationWarning):$/;"	c
Design Guideline	plugged/papercolor-theme/DESIGN.md	/^Design Guideline$/;"	c
Details	plugged/vim-buffergator/README.md	/^Details$/;"	c
Developers	plugged/vim-devicons/README.md	/^Developers$/;"	s
Developing	plugged/php.vim/README.md	/^Developing$/;"	s
Development	plugged/nord-vim/README.md	/^## Development$/;"	s
DgLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class DgLexer(RegexLexer):$/;"	c
DictMixin	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    from collections import Mapping as DictMixin$/;"	x
DiffLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^class DiffLexer(RegexLexer):$/;"	c
DjangoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class DjangoLexer(RegexLexer):$/;"	c
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
DockerLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class DockerLexer(RegexLexer):$/;"	c
Documentation	plugged/nord-vim/CHANGELOG.md	/^### Documentation$/;"	S
Documenting	plugged/ultisnips/CONTRIBUTING.md	/^## Documenting$/;"	s
Does it work in vim 8?	plugged/nvim-miniyank/README.md	/^## Does it work in vim 8?$/;"	s
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DstTzInfo	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^class DstTzInfo(BaseTzInfo):$/;"	c
DtdLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class DtdLexer(RegexLexer):$/;"	c
DuelLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^class DuelLexer(RegexLexer):$/;"	c
DummyConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^class DummyConnection(object):$/;"	c
DuplicateOptionError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class DuplicateOptionError(Error):$/;"	c
DuplicateSectionError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class DuplicateSectionError(Error):$/;"	c
DylanConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^class DylanConsoleLexer(Lexer):$/;"	c
DylanLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^class DylanLexer(RegexLexer):$/;"	c
DylanLidLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^class DylanLidLexer(RegexLexer):$/;"	c
Dynamic tabstop generation	plugged/ultisnips/doc/examples/tabstop-generation/README.md	/^# Dynamic tabstop generation$/;"	c
E	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> E           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
EA	plugged/ultisnips/test/constant.py	/^EA = '#'  # Expand anonymous$/;"	v
ECLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^class ECLLexer(RegexLexer):$/;"	c
ECLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class ECLexer(CLexer):$/;"	c
ENABLE_LOGGING	plugged/coc.nvim/bin/tsserverForkStart.js	/^let ENABLE_LOGGING = false;$/;"	v
END_BLOCKS	plugged/ale/test/script/block-padding-checker	/^END_BLOCKS = set(['endif', 'endfor', 'endwhile', 'endtry', 'endfunction'])$/;"	v
ENOUGH_DATA_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    ENOUGH_DATA_THRESHOLD = 1024$/;"	v	class:CharDistributionAnalysis
ENOUGH_REL_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    ENOUGH_REL_THRESHOLD = 100$/;"	v	class:JapaneseContextAnalysis
EOF	plugged/papercolor-theme/test/test.sh	/^cat > "${custom_rtp}\/.vimrc" <<- EOF$/;"	h
ERROR	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    ERROR = 1$/;"	v	class:MachineState
ERROR	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^ERROR = Token.Error$/;"	v
ERR_ARRAY_DELIMITER	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_ARRAY_DELIMITER /;"	d	file:
ERR_ARRAY_VALUE_FIRST	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_ARRAY_VALUE_FIRST /;"	d	file:
ERR_EXPECTING_VALUE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_EXPECTING_VALUE /;"	d	file:
ERR_OBJECT_DELIMITER	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_DELIMITER /;"	d	file:
ERR_OBJECT_PROPERTY	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY /;"	d	file:
ERR_OBJECT_PROPERTY_DELIMITER	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY_DELIMITER /;"	d	file:
ERR_OBJECT_PROPERTY_FIRST	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_OBJECT_PROPERTY_FIRST /;"	d	file:
ERR_STRING_CONTROL	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_CONTROL /;"	d	file:
ERR_STRING_ESC1	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_ESC1 /;"	d	file:
ERR_STRING_ESC4	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_ESC4 /;"	d	file:
ERR_STRING_UNTERMINATED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define ERR_STRING_UNTERMINATED /;"	d	file:
ESC	plugged/ultisnips/test/constant.py	/^ESC = '\\x1b'$/;"	v
ESCAPE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE = re.compile(u'[\\\\x00-\\\\x1f\\\\\\\\"\\\\b\\\\f\\\\n\\\\r\\\\t\\u2028\\u2029]')$/;"	v
ESCAPE_ASCII	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE_ASCII = re.compile(r'([\\\\"]|[^\\ -~])')$/;"	v
ESCAPE_DCT	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^ESCAPE_DCT = {$/;"	v
ESC_ASCII	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    ESC_ASCII = 1$/;"	v	class:InputState
ESC_DETECTOR	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    ESC_DETECTOR = re.compile(b'(\\033|~{)')$/;"	v	class:UniversalDetector
EUCJPContextAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^class EUCJPContextAnalysis(JapaneseContextAnalysis):$/;"	c
EUCJPDistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class EUCJPDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCJPProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^class EUCJPProber(MultiByteCharSetProber):$/;"	c
EUCJP_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCJP_CHAR_LEN_TABLE = (2, 2, 2, 3, 1, 0)$/;"	v
EUCJP_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCJP_CLS = ($/;"	v
EUCJP_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCJP_SM_MODEL = {'class_table': EUCJP_CLS,$/;"	v
EUCJP_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCJP_ST = ($/;"	v
EUCKRDistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class EUCKRDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCKRProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrprober.py	/^class EUCKRProber(MultiByteCharSetProber):$/;"	c
EUCKR_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCKR_CHAR_LEN_TABLE = (0, 1, 2, 0)$/;"	v
EUCKR_CHAR_TO_FREQ_ORDER	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrfreq.py	/^EUCKR_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCKR_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCKR_CLS  = ($/;"	v
EUCKR_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCKR_SM_MODEL = {'class_table': EUCKR_CLS,$/;"	v
EUCKR_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCKR_ST = ($/;"	v
EUCKR_TABLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrfreq.py	/^EUCKR_TABLE_SIZE = 2352$/;"	v
EUCKR_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrfreq.py	/^EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0$/;"	v
EUCTWDistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class EUCTWDistributionAnalysis(CharDistributionAnalysis):$/;"	c
EUCTWProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwprober.py	/^class EUCTWProber(MultiByteCharSetProber):$/;"	c
EUCTW_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCTW_CHAR_LEN_TABLE = (0, 0, 1, 2, 2, 2, 3)$/;"	v
EUCTW_CHAR_TO_FREQ_ORDER	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwfreq.py	/^EUCTW_CHAR_TO_FREQ_ORDER = ($/;"	v
EUCTW_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCTW_CLS = ($/;"	v
EUCTW_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCTW_SM_MODEL = {'class_table': EUCTW_CLS,$/;"	v
EUCTW_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^EUCTW_ST = ($/;"	v
EUCTW_TABLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwfreq.py	/^EUCTW_TABLE_SIZE = 5376$/;"	v
EUCTW_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwfreq.py	/^EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75$/;"	v
EVENT_READ	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^EVENT_READ = (1 << 0)$/;"	v
EVENT_WRITE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^EVENT_WRITE = (1 << 1)$/;"	v
EX	plugged/ultisnips/test/constant.py	/^EX = '\\t'  # EXPAND$/;"	v
EXPECTED_BODY_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    EXPECTED_BODY_LENGTH = 40$/;"	v	class:NegotiateMessage
EXPECTED_BODY_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    EXPECTED_BODY_LENGTH = 72$/;"	v	class:AuthenticateMessage
EXPECTED_BODY_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    EXPECTED_BODY_LENGTH = 16$/;"	v	class:_NtlmMessageSignature1
EXPECTED_BODY_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    EXPECTED_BODY_LENGTH = 16$/;"	v	class:_NtlmMessageSignature2
EXPECTED_BODY_LENGTH_WITH_MIC	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    EXPECTED_BODY_LENGTH_WITH_MIC = 88$/;"	v	class:AuthenticateMessage
EXPONENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    EXPONENT = r'[eE][+-]?\\d+'$/;"	v	class:SparqlLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    EXTRA_KEYWORDS = set(('join', 'split', 'reverse', 'transpose', 'width',$/;"	v	class:CryptolLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:XsltLexer
EXTRA_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    EXTRA_KEYWORDS = set(($/;"	v	class:NumPyLexer
EarlGreyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class EarlGreyLexer(RegexLexer):$/;"	c
Eastern	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^Eastern  = USTimeZone(-5, "Eastern",  "EST", "EDT")$/;"	v
EasytrieveLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class EasytrieveLexer(RegexLexer):$/;"	c
EbnfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class EbnfLexer(RegexLexer):$/;"	c
EditBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 EditBookmarks call g:NERDTreeBookmark.Edit()$/;"	c
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
EiffelLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^class EiffelLexer(RegexLexer):$/;"	c
ElixirConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^class ElixirConsoleLexer(Lexer):$/;"	c
ElixirLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^class ElixirLexer(RegexLexer):$/;"	c
ElmLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^class ElmLexer(RegexLexer):$/;"	c
ElmParser	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^class ElmParser(TokenParser):$/;"	c
EmacsLispLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class EmacsLispLexer(RegexLexer):$/;"	c
EmacsStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/emacs.py	/^class EmacsStyle(Style):$/;"	c
Emmet	plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	plugged/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:d/;"	c
EmptyPoolError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class EmptyPoolError(PoolError):$/;"	c
EndOfText	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^class EndOfText(RuntimeError):$/;"	c
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
Enforcement	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s
Enhanced C definitions	plugged/vim-syntax-extra/README.md	/^Enhanced C definitions $/;"	s
Environment	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Environment$/;"	S
EpollSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    class EpollSelector(BaseSelector):$/;"	c
ErbLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class ErbLexer(Lexer):$/;"	c
ErlangLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^class ErlangLexer(RegexLexer):$/;"	c
ErlangShellLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^class ErlangShellLexer(Lexer):$/;"	c
Error	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class Error(Exception):$/;"	c
Error	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Error = Token.Error$/;"	v
ErrorToken	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class ErrorToken(Exception):$/;"	c
EscCharSetProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^class EscCharSetProber(CharSetProber):$/;"	c
Escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Escape = Token.Escape$/;"	v
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapeSequence	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^class EscapeSequence:$/;"	c
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
EvoqueHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class EvoqueHtmlLexer(DelegatingLexer):$/;"	c
EvoqueLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class EvoqueLexer(RegexLexer):$/;"	c
EvoqueXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class EvoqueXmlLexer(DelegatingLexer):$/;"	c
Example vim configuration	plugged/coc.nvim/Readme.md	/^## Example vim configuration$/;"	s
Exception	plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
Expected Result	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Expected Result$/;"	S
Extended Colors	plugged/papercolor-theme/DESIGN.md	/^## Extended Colors$/;"	s
ExtendedInterpolation	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class ExtendedInterpolation(Interpolation):$/;"	c
ExtendedRegexLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class ExtendedRegexLexer(RegexLexer):$/;"	c
Extensions	plugged/coc.nvim/Readme.md	/^## Extensions$/;"	s
Extras	plugged/far.vim/README.md	/^## Extras$/;"	s
EzhilLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^class EzhilLexer(RegexLexer):$/;"	c
F	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FindComplete -nargs=1 -range=-1 F$/;"	c
F.A.Q.	plugged/nerdtree/README.markdown	/^F.A.Q.$/;"	s
FAQ	plugged/nvim-miniyank/README.md	/^# FAQ$/;"	c
FAQ	plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s
FAQ	plugged/vim-vue/readme.md	/^## FAQ$/;"	s
FILES	plugged/javascript-libraries-syntax.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
FILES	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^FILES = {$/;"	v
FILES	plugged/vim-wakatime/packages/wakatime/dependencies/unknown.py	/^FILES = {$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FILTERDOC	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^FILTERDOC = '''$/;"	v
FILTERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^FILTERS = {$/;"	v
FILTER_ENTRY_POINT	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^FILTER_ENTRY_POINT = 'pygments.filters'$/;"	v
FINAL_KAF	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    FINAL_KAF = 0xea$/;"	v	class:HebrewProber
FINAL_MEM	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    FINAL_MEM = 0xed$/;"	v	class:HebrewProber
FINAL_NUN	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    FINAL_NUN = 0xef$/;"	v	class:HebrewProber
FINAL_PE	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    FINAL_PE = 0xf3$/;"	v	class:HebrewProber
FINAL_TSADI	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    FINAL_TSADI = 0xf5$/;"	v	class:HebrewProber
FIRST_ELEMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/regexopt.py	/^FIRST_ELEMENT = itemgetter(0)$/;"	v
FLAGS	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^FLAGS = re.VERBOSE | re.MULTILINE | re.DOTALL$/;"	v
FLOAT_REPR	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^FLOAT_REPR = repr$/;"	v
FMTERDOC	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^FMTERDOC = '''$/;"	v
FOREGROUND	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^FOREGROUND = "#e7e9db"$/;"	v
FOREGROUND	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^FOREGROUND = "#2f1e2e"$/;"	v
FORMATTERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^FORMATTERS = {$/;"	v
FORMATTER_ENTRY_POINT	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^FORMATTER_ENTRY_POINT = 'pygments.formatters'$/;"	v
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOUND_IT	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    FOUND_IT = 1$/;"	v	class:ProbingState
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FRAMEWORKS_PATH	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^    FRAMEWORKS_PATH = '\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/iPhoneOS.platf/;"	v
FREE_PASCAL_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    FREE_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
FREQ_CAT_NUM	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^FREQ_CAT_NUM = 4$/;"	v
FSharpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class FSharpLexer(RegexLexer):$/;"	c
FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stan_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^FUNCTIONS = ($/;"	v
FUNCTION_MODIFIERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    FUNCTION_MODIFIERS = set(($/;"	v	class:DelphiLexer
FactorLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^class FactorLexer(RegexLexer):$/;"	c
FancyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^class FancyLexer(RegexLexer):$/;"	c
FantomLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^class FantomLexer(RegexLexer):$/;"	c
Far	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarComplete -nargs=1 -range=-1 Far$/;"	c
Far	plugged/far.vim/plugin/far.vim	/^function! Far(rngmode, rngline1, rngline2, cmdline) range abort "{{{$/;"	f
FarDo	plugged/far.vim/plugin/far.vim	/^function! FarDo(...) abort "{{{$/;"	f
FarPlugin	plugged/far.vim/rplugin/python3/far/__init__.py	/^    class FarPlugin(object):$/;"	c
FarPrompt	plugged/far.vim/plugin/far.vim	/^function! FarPrompt(rngmode, rngline1, rngline2, ...) abort range "{{{$/;"	f
FarUndo	plugged/far.vim/plugin/far.vim	/^function! FarUndo(...) abort "{{{$/;"	f
Fardo	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FardoComplete -nargs=* Fardo call FarDo(<f-args>)$/;"	c
Farp	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farp$/;"	c
Farundo	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarundoComplete -nargs=* Farundo call FarUndo(<f-args>)$/;"	c
Features	plugged/nord-vim/CHANGELOG.md	/^## Features$/;"	s
Features	plugged/vim-devicons/README.md	/^Features$/;"	s
Feedback	plugged/coc.nvim/Readme.md	/^## Feedback$/;"	s
FelixLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^class FelixLexer(RegexLexer):$/;"	c
File Types	plugged/javascript-libraries-syntax.vim/README.md	/^File Types$/;"	s
FileAction	plugged/vim-wakatime/packages/wakatime/arguments.py	/^class FileAction(argparse.Action):$/;"	c
FileModeWarning	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class FileModeWarning(RequestsWarning, DeprecationWarning):$/;"	c
FileType	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class FileType(object):$/;"	c
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^class Filter(object):$/;"	c
Find	plugged/far.vim/plugin/far.vim	/^function! Find(rngmode, rngline1, rngline2, cmdline, ...) range abort "{{{$/;"	f
FishShellLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class FishShellLexer(RegexLexer):$/;"	c
FixedOffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def FixedOffset(offset, _tzinfos = {}):$/;"	f
FixedOffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^class FixedOffset(tzinfo):$/;"	c
FlatlineLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class FlatlineLexer(RegexLexer):$/;"	c
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Font patching	plugged/indentLine/README.md	/^### Font patching$/;"	S
FontManager	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class FontManager(object):$/;"	c
FontNotFound	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class FontNotFound(Exception):$/;"	c
For Loop	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^  "For Loop": {$/;"	o
ForLoop	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class ForLoop(Tokenizer):$/;"	c
Formatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^class Formatter(object):$/;"	c
ForthLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^class ForthLexer(RegexLexer):$/;"	c
FortranFixedLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^class FortranFixedLexer(RegexLexer):$/;"	c
FortranLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^class FortranLexer(RegexLexer):$/;"	c
FoxProLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^class FoxProLexer(RegexLexer):$/;"	c
FriendlyName	plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
FriendlyStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/friendly.py	/^class FriendlyStyle(Style):$/;"	c
FruityStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/fruity.py	/^class FruityStyle(Style):$/;"	c
FugitiveCommonDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveHead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveStatusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveWorkTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
Function	plugged/vim-smooth-scroll/README.md	/^## Function$/;"	s
FunctionFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^class FunctionFilter(Filter):$/;"	c
Future	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^class Future(object):$/;"	c
Future ideas and examples	plugged/vim-snippets/README.md	/^Future ideas and examples$/;"	s
GAPLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^class GAPLexer(RegexLexer):$/;"	c
GB2312DistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class GB2312DistributionAnalysis(CharDistributionAnalysis):$/;"	c
GB2312Prober	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312prober.py	/^class GB2312Prober(MultiByteCharSetProber):$/;"	c
GB2312_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^GB2312_CHAR_LEN_TABLE = (0, 1, 1, 1, 1, 1, 2)$/;"	v
GB2312_CHAR_TO_FREQ_ORDER	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312freq.py	/^GB2312_CHAR_TO_FREQ_ORDER = ($/;"	v
GB2312_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^GB2312_CLS = ($/;"	v
GB2312_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^GB2312_SM_MODEL = {'class_table': GB2312_CLS,$/;"	v
GB2312_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^GB2312_ST = ($/;"	v
GB2312_TABLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312freq.py	/^GB2312_TABLE_SIZE = 3760$/;"	v
GB2312_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312freq.py	/^GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9$/;"	v
GENERIC_ERROR	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    GENERIC_ERROR = 'too many error responses'$/;"	v	class:ResponseError
GETTERCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    GETTERCRE = re.compile(r"^get(?P<name>.+)$")$/;"	v	class:ConverterMapping
GHERKIN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^GHERKIN = Token.Generic.Emph$/;"	v
GIT_SOURCES	plugged/javascript-libraries-syntax.vim/Makefile	/^GIT_SOURCES=$/;"	m
GLShaderLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^class GLShaderLexer(RegexLexer):$/;"	c
GREEN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^GREEN = "#48b685"$/;"	v
GREEN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^GREEN = "#48b685"$/;"	v
GREEN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREEN = '#00cc66'$/;"	v
GREEN_LIGHT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREEN_LIGHT = '#ccffcc'$/;"	v
GREEN_NEON	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREEN_NEON = '#00cc00'$/;"	v
GREY	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREY = '#aaaaaa'$/;"	v
GREY_DARK	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREY_DARK = '#4d4d4d'$/;"	v
GREY_LIGHT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^GREY_LIGHT = '#cbcbcb'$/;"	v
GasLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class GasLexer(RegexLexer):$/;"	c
GeneralProxyError	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class GeneralProxyError(ProxyError): pass$/;"	c
GeneratedObjectiveCVariant	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    class GeneratedObjectiveCVariant(baselexer):$/;"	c	function:objective	file:
Generating Vim help files	plugged/ale/README.md	/^#### Generating Vim help files$/;"	t
Generic	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Generic = Token.Generic$/;"	v
GenericAspxLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class GenericAspxLexer(RegexLexer):$/;"	c
GenshiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class GenshiLexer(DelegatingLexer):$/;"	c
GenshiMarkupLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class GenshiMarkupLexer(RegexLexer):$/;"	c
GenshiTextLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class GenshiTextLexer(RegexLexer):$/;"	c
GetBladeIndent	plugged/vim-blade/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetJavascriptIndent	plugged/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetVueIndent	plugged/vim-vue/indent/vue.vim	/^function! GetVueIndent()$/;"	f
GettextLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^class GettextLexer(RegexLexer):$/;"	c
Getting help	plugged/vim-snippets/README.md	/^Getting help$/;"	s
Getting started	plugged/nord-vim/README.md	/^## Getting started$/;"	s
GherkinLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^class GherkinLexer(RegexLexer):$/;"	c
GherkinTokenizer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class GherkinTokenizer(object):$/;"	c
GifImageFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class GifImageFormatter(ImageFormatter):$/;"	c
Git	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^class Git(BaseProject):$/;"	c
GitGutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterDebug	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterSignsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterStageHunk   call gitgutter#hunk#stage()$/;"	c
GitGutterToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GivenCommandOutput	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ GivenCommandOutput :call ale#assert#GivenCommandOutput(<args>)$/;"	c
GnuplotLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^class GnuplotLexer(RegexLexer):$/;"	c
GoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^class GoLexer(RegexLexer):$/;"	c
GoParser	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^class GoParser(TokenParser):$/;"	c
GobbleFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class GobbleFilter(Filter):$/;"	c
GoloLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class GoloLexer(RegexLexer):$/;"	c
GoodDataCLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class GoodDataCLLexer(RegexLexer):$/;"	c
GosuLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class GosuLexer(RegexLexer):$/;"	c
GosuTemplateLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class GosuTemplateLexer(Lexer):$/;"	c
Gotchas	plugged/ack.vim/README.md	/^### Gotchas$/;"	S
GreekLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langgreekmodel.py	/^GreekLangModel = ($/;"	v
GroffLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class GroffLexer(RegexLexer):$/;"	c
GroovyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class GroovyLexer(RegexLexer):$/;"	c
GssChannelBindingsStruct	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^class GssChannelBindingsStruct(object):$/;"	c
Guidelines	plugged/ale/.github/CONTRIBUTING.md	/^## Guidelines$/;"	s
Gutentags	plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
GzipDecoder	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^class GzipDecoder(object):$/;"	c
HASHFUNC_MAP	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^HASHFUNC_MAP = {$/;"	v
HAS_IPV6	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^HAS_IPV6 = _has_ipv6('::1')$/;"	v
HAS_SELECT	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    HAS_SELECT = False$/;"	v
HAS_SELECT	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^HAS_SELECT = True  # Variable that shows whether the platform has a selector.$/;"	v
HAS_SNI	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^HAS_SNI = True$/;"	v
HAS_SNI	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^HAS_SNI = True$/;"	v
HAS_SNI	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^HAS_SNI = False$/;"	v
HAS_SQL	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    HAS_SQL = False$/;"	v
HAS_SQL	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    HAS_SQL = True$/;"	v
HAS_SQL	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    HAS_SQL = False$/;"	v
HAS_SQL	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    HAS_SQL = True$/;"	v
HAS_UTF8	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^HAS_UTF8 = re.compile(r'[\\x80-\\xff]')$/;"	v
HEADING	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^HEADING = Token.Generic.Heading$/;"	v
HEARTBEATS_PER_REQUEST	plugged/vim-wakatime/packages/wakatime/constants.py	/^HEARTBEATS_PER_REQUEST = 25$/;"	v
HEBREW_LANG_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhebrewmodel.py	/^HEBREW_LANG_MODEL = ($/;"	v
HEX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    HEX = '[' + HEX_GRP + ']'$/;"	v	class:SparqlLexer
HEX_GRP	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    HEX_GRP = '0-9A-Fa-f'$/;"	v	class:SparqlLexer
HIGH_BYTE	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    HIGH_BYTE = 2$/;"	v	class:InputState
HIGH_BYTE_DETECTOR	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    HIGH_BYTE_DETECTOR = re.compile(b'[\\x80-\\xFF]')$/;"	v	class:UniversalDetector
HOOKS	plugged/vim-wakatime/packages/wakatime/packages/requests/hooks.py	/^HOOKS = ['response']$/;"	v
HOUR	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^HOUR = datetime.timedelta(hours=1)$/;"	v
HPERM_OP	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def HPERM_OP(tup, n, m):$/;"	f
HTTPAdapter	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^class HTTPAdapter(BaseAdapter):$/;"	c
HTTPBasicAuth	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^class HTTPBasicAuth(AuthBase):$/;"	c
HTTPConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^class HTTPConnection(_HTTPConnection, object):$/;"	c
HTTPConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^class HTTPConnectionPool(ConnectionPool, RequestMethods):$/;"	c
HTTPDigestAuth	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^class HTTPDigestAuth(AuthBase):$/;"	c
HTTPError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class HTTPError(RequestException):$/;"	c
HTTPError	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class HTTPError(ProxyError): pass$/;"	c
HTTPError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class HTTPError(Exception):$/;"	c
HTTPHeaderDict	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^class HTTPHeaderDict(MutableMapping):$/;"	c
HTTPProxyAuth	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^class HTTPProxyAuth(HTTPBasicAuth):$/;"	c
HTTPResponse	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^class HTTPResponse(io.IOBase):$/;"	c
HTTPSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    HTTPSConnection = VerifiedHTTPSConnection$/;"	v
HTTPSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^class HTTPSConnection(HTTPConnection):$/;"	c
HTTPSConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^class HTTPSConnectionPool(HTTPConnectionPool):$/;"	c
HTTPWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class HTTPWarning(Warning):$/;"	c
HZ_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^HZ_CHAR_LEN_TABLE = (0, 0, 0, 0, 0, 0)$/;"	v
HZ_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^HZ_CLS = ($/;"	v
HZ_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^HZ_SM_MODEL = {'class_table': HZ_CLS,$/;"	v
HZ_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^HZ_ST = ($/;"	v
HamlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class HamlLexer(ExtendedRegexLexer):$/;"	c
HandlebarsHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HandlebarsHtmlLexer(DelegatingLexer):$/;"	c
HandlebarsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HandlebarsLexer(RegexLexer):$/;"	c
HandlerParams	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    HandlerParams = ('about', 'above', 'against', 'apart from', 'around',$/;"	v	class:AppleScriptLexer
HaskellLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class HaskellLexer(RegexLexer):$/;"	c
HaskellParser	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^class HaskellParser(TokenParser):$/;"	c
HaxeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^class HaxeLexer(ExtendedRegexLexer):$/;"	c
HaxeParser	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^class HaxeParser(TokenParser):$/;"	c
HeaderParsingError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class HeaderParsingError(HTTPError):$/;"	c
Heartbeat	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^class Heartbeat(object):$/;"	c
HebrewProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^class HebrewProber(CharSetProber):$/;"	c
HelpFormatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class HelpFormatter(object):$/;"	c
HexdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^class HexdumpLexer(RegexLexer):$/;"	c
HiFold	plugged/vim-syntax-extra/after/syntax/yacc.vim	/^ com! -nargs=+ HiFold	<args> fold$/;"	c
HiFold	plugged/vim-syntax-extra/after/syntax/yacc.vim	/^ com! -nargs=+ HiFold	<args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-syntax-extra/after/syntax/yacc.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
Historical notes	plugged/vim-snippets/README.md	/^Historical notes$/;"	s
History	plugged/vim-wakatime/HISTORY.rst	/^History$/;"	c
HostChangedError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class HostChangedError(RequestError):$/;"	c
How This Work	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">How This Work<\/h2>$/;"	i
How should this be manually tested?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### How should this be manually tested?$/;"	t
How to contribute	plugged/vim-devicons/CONTRIBUTING.md	/^## How to contribute$/;"	s
How to use commenting functionality with multiple languages in Vue files?	plugged/vim-vue/readme.md	/^### How to use commenting functionality with multiple languages in Vue files?$/;"	S
How?	plugged/vim-gutentags/README.md	/^## How?$/;"	s
HsailLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class HsailLexer(RegexLexer):$/;"	c
HtmlDjangoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HtmlDjangoLexer(DelegatingLexer):$/;"	c
HtmlFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^class HtmlFormatter(Formatter):$/;"	c
HtmlGenshiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HtmlGenshiLexer(DelegatingLexer):$/;"	c
HtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class HtmlLexer(RegexLexer):$/;"	c
HtmlParser	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^class HtmlParser(TokenParser):$/;"	c
HtmlPhpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HtmlPhpLexer(DelegatingLexer):$/;"	c
HtmlSmartyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class HtmlSmartyLexer(DelegatingLexer):$/;"	c
HttpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^class HttpLexer(RegexLexer):$/;"	c
HttpNtlmAuth	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^class HttpNtlmAuth(AuthBase):$/;"	c
HungarianLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhungarianmodel.py	/^HungarianLangModel = ($/;"	v
HxmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^class HxmlLexer(RegexLexer):$/;"	c
HyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class HyLexer(RegexLexer):$/;"	c
HybrisLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class HybrisLexer(RegexLexer):$/;"	c
I	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> I <NOP>$/;"	m
I	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> I :call far#change_exclude_all(0)<cr>$/;"	m
I	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> I           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
I don't want to jump to the first result automatically.	plugged/ack.vim/README.md	/^#### I don't want to jump to the first result automatically. ####$/;"	t
IBM855_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^IBM855_char_to_order_map = ($/;"	v
IBM866_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^IBM866_char_to_order_map = ($/;"	v
IDENTIFIER	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    IDENTIFIER = '[{0}][{1}]*'.format('a-z_' + ALLOWED_CHARS, r'\\w' + ALLOWED_CHARS)$/;"	v	class:BibTeXLexer
IDLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^class IDLLexer(RegexLexer):$/;"	c
IDNABidiError	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^class IDNABidiError(IDNAError):$/;"	c
IDNAError	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^class IDNAError(UnicodeError):$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
IMPORT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^IMPORT = Token.Name.Namespace$/;"	v
INDENTATION_RE	plugged/ale/test/script/block-padding-checker	/^INDENTATION_RE = re.compile(r'^ *')$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
INITIATOR_ADDRESS	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    INITIATOR_ADDRESS = 'initiator_address'$/;"	v	class:GssChannelBindingsStruct
INITIATOR_ADDRESS_LENGTH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    INITIATOR_ADDRESS_LENGTH = 'initiator_address_length'$/;"	v	class:GssChannelBindingsStruct
INITIATOR_ADDTYPE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    INITIATOR_ADDTYPE = 'initiator_addtype'$/;"	v	class:GssChannelBindingsStruct
IRCFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^class IRCFormatter(Formatter):$/;"	c
IRC_COLORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^IRC_COLORS = {$/;"	v
IRC_COLOR_MAP	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^IRC_COLOR_MAP = {$/;"	v
IRIREF	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    IRIREF = r'<(?:[^<>"{}|^`\\\\\\x00-\\x20])*>'$/;"	v	class:SparqlLexer
ISO2022CN_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022CN_CHAR_LEN_TABLE = (0, 0, 0, 0, 0, 0, 0, 0, 0)$/;"	v
ISO2022CN_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022CN_CLS = ($/;"	v
ISO2022CN_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022CN_SM_MODEL = {'class_table': ISO2022CN_CLS,$/;"	v
ISO2022CN_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022CN_ST = ($/;"	v
ISO2022JP_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022JP_CHAR_LEN_TABLE = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)$/;"	v
ISO2022JP_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022JP_CLS = ($/;"	v
ISO2022JP_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022JP_SM_MODEL = {'class_table': ISO2022JP_CLS,$/;"	v
ISO2022JP_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022JP_ST = ($/;"	v
ISO2022KR_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022KR_CHAR_LEN_TABLE = (0, 0, 0, 0, 0, 0)$/;"	v
ISO2022KR_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022KR_CLS = ($/;"	v
ISO2022KR_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022KR_SM_MODEL = {'class_table': ISO2022KR_CLS,$/;"	v
ISO2022KR_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/escsm.py	/^ISO2022KR_ST = ($/;"	v
ISO_WIN_MAP	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    ISO_WIN_MAP = {'iso-8859-1': 'Windows-1252',$/;"	v	class:UniversalDetector
IS_DIGIT	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^IS_DIGIT(JSON_UNICHR c)$/;"	f	typeref:typename:int	file:
IS_PYOPENSSL	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^IS_PYOPENSSL = False$/;"	v
IS_SECURETRANSPORT	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^IS_SECURETRANSPORT = False$/;"	v
IS_WHITESPACE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define IS_WHITESPACE(/;"	d	file:
ITER_CHUNK_SIZE	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^ITER_CHUNK_SIZE = 512$/;"	v
ITS_ME	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    ITS_ME = 2$/;"	v	class:MachineState
Ibm855Model	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^Ibm855Model = {$/;"	v
Ibm866Model	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^Ibm866Model = {$/;"	v
Identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Identifiers = r'[a-zA-Z]\\w*'$/;"	v	class:AppleScriptLexer
IdrisLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class IdrisLexer(RegexLexer):$/;"	c
IgorLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^class IgorLexer(RegexLexer):$/;"	c
IgorStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/igor.py	/^class IgorStyle(Style):$/;"	c
ImageFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class ImageFormatter(Formatter):$/;"	c
Implementation	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^## Implementation$/;"	s
ImportSetting	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class ImportSetting(Tokenizer):$/;"	c
Improvements	plugged/nord-vim/CHANGELOG.md	/^## Improvements$/;"	s
Improving scrolling performance	plugged/far.vim/README.md	/^#### Improving scrolling performance$/;"	t
Inclusive support	plugged/papercolor-theme/README.md	/^## Inclusive support$/;"	s
IncompleteRead	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class IncompleteRead(HTTPError, httplib_IncompleteRead):$/;"	c
IncompleteTaskText	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    IncompleteTaskText = Text    # Incomplete tasks should look like plain text$/;"	v	class:TodotxtLexer
IncrementalDecoder	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^class IncrementalDecoder(codecs.BufferedIncrementalDecoder):$/;"	c
IncrementalEncoder	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^class IncrementalEncoder(codecs.BufferedIncrementalEncoder):$/;"	c
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesDisable let b:indentLine_enabled = 0 | call <SID>IndentLinesDisable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesEnable let b:indentLine_enabled = 1 | call <SID>IndentLinesEnable()$/;"	c
IndentLinesReset	plugged/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil(object):$/;"	c
Indentation Specific	plugged/vim-javascript/README.md	/^## Indentation Specific$/;"	s
Inform6Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^class Inform6Lexer(RegexLexer):$/;"	c
Inform6TemplateLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^class Inform6TemplateLexer(Inform7Lexer):$/;"	c
Inform7Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^class Inform7Lexer(RegexLexer):$/;"	c
Information	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## Information$/;"	s
IniLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class IniLexer(RegexLexer):$/;"	c
InputState	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class InputState(object):$/;"	c
InsecurePlatformWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class InsecurePlatformWarning(SecurityWarning):$/;"	c
InsecureRequestWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class InsecureRequestWarning(SecurityWarning):$/;"	c
Install	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Install<\/h2>$/;"	i
Install	plugged/javascript-libraries-syntax.vim/README.md	/^Install$/;"	s
Install with [Pathogen](https://github.com/tpope/vim-pathogen)	plugged/vim-vue/readme.md	/^### Install with [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S
Install with [Vundle](https://github.com/VundleVim/Vundle.vim)	plugged/vim-vue/readme.md	/^### Install with [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	S
Install with [pathogen](https://github.com/tpope/vim-pathogen)	plugged/vim-javascript/README.md	/^### Install with [pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S
Install without a plugin manager (Vim 8)	plugged/vim-vue/readme.md	/^### Install without a plugin manager (Vim 8)$/;"	S
Installation	plugged/ack.vim/README.md	/^## Installation$/;"	s
Installation	plugged/ctrlp.vim/readme.md	/^## Installation$/;"	s
Installation	plugged/far.vim/README.md	/^## Installation$/;"	s
Installation	plugged/indentLine/README.md	/^## Installation$/;"	s
Installation	plugged/lightline-ale/README.md	/^## Installation$/;"	s
Installation	plugged/lightline.vim/README.md	/^## Installation$/;"	s
Installation	plugged/nerdtree/README.markdown	/^Installation$/;"	s
Installation	plugged/nord-vim/README.md	/^### Installation$/;"	S
Installation	plugged/numbers.vim/README.md	/^Installation$/;"	s
Installation	plugged/papercolor-theme/README.md	/^## Installation$/;"	s
Installation	plugged/php.vim/README.md	/^Installation$/;"	s
Installation	plugged/vim-blade/README.md	/^Installation$/;"	s
Installation	plugged/vim-devicons/README.md	/^Installation$/;"	s
Installation	plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s
Installation	plugged/vim-javascript/README.md	/^## Installation$/;"	s
Installation	plugged/vim-repeat/README.markdown	/^## Installation$/;"	s
Installation	plugged/vim-smooth-scroll/README.md	/^## Installation$/;"	s
Installation	plugged/vim-snippets/README.md	/^Installation$/;"	s
Installation	plugged/vim-surround/README.markdown	/^## Installation$/;"	s
Installation	plugged/vim-vue/readme.md	/^## Installation$/;"	s
Installation	plugged/vim-wakatime/README.md	/^Installation$/;"	s
Integration	plugged/lightline-ale/README.md	/^## Integration$/;"	s
Integration with [Syntastic](https://github.com/scrooloose/syntastic) or [ALE](https://github.com/w0rp/ale)	plugged/vim-vue/readme.md	/^### Integration with [Syntastic](https:\/\/github.com\/scrooloose\/syntastic) or [ALE](https:\/\//;"	S
Integration with other plugins	plugged/vim-devicons/DEVELOPER.md	/^#### Integration with other plugins$/;"	t
Interpolation	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class Interpolation(object):$/;"	c
InterpolationDepthError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class InterpolationDepthError(InterpolationError):$/;"	c
InterpolationError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class InterpolationError(Error):$/;"	c
InterpolationMissingOptionError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class InterpolationMissingOptionError(InterpolationError):$/;"	c
InterpolationSyntaxError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class InterpolationSyntaxError(InterpolationError):$/;"	c
Intro	plugged/far.vim/README.md	/^## Intro$/;"	s
Introduction	plugged/lightline.vim/README.md	/^## Introduction$/;"	s
Introduction	plugged/nerdtree/README.markdown	/^Introduction$/;"	s
InvalidCodepoint	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^class InvalidCodepoint(IDNAError):$/;"	c
InvalidCodepointContext	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^class InvalidCodepointContext(IDNAError):$/;"	c
InvalidHeader	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class InvalidHeader(RequestException, ValueError):$/;"	c
InvalidHeader	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class InvalidHeader(HTTPError):$/;"	c
InvalidSchema	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class InvalidSchema(RequestException, ValueError):$/;"	c
InvalidTimeError	plugged/vim-wakatime/packages/wakatime/packages/pytz/exceptions.py	/^class InvalidTimeError(Exception):$/;"	c
InvalidURL	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class InvalidURL(RequestException, ValueError):$/;"	c
IoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^class IoLexer(RegexLexer):$/;"	c
IokeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class IokeLexer(RegexLexer):$/;"	c
IrcLogsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^class IrcLogsLexer(RegexLexer):$/;"	c
Is python3 required?	plugged/nvim-miniyank/README.md	/^## Is python3 required?$/;"	s
IsabelleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^class IsabelleLexer(RegexLexer):$/;"	c
It doesn't persist across reboots!	plugged/nvim-miniyank/README.md	/^## It doesn't persist across reboots!$/;"	s
It doesn't work!	plugged/nvim-miniyank/README.md	/^## It doesn't work!$/;"	s
Italic Comments	plugged/nord-vim/README.md	/^### Italic Comments$/;"	S
Italic Support	plugged/nord-vim/README.md	/^### Italic Support$/;"	S
Iterator	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    Iterator = object$/;"	v
Iterator	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    class Iterator(object):$/;"	c
Iterator	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    Iterator = object$/;"	v
Iterator	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    class Iterator(object):$/;"	c
J	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> J :<C-U>execute <SID>StageNext(v:count1)<CR>$/;"	m
JAPANESE	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    JAPANESE = 0x04$/;"	v	class:LanguageFilter
JB	plugged/ultisnips/test/constant.py	/^JB = '+'  # Jump backwards$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = '?'  # Jump forwards$/;"	v
JIS_CHAR_TO_FREQ_ORDER	plugged/vim-wakatime/packages/wakatime/packages/chardet/jisfreq.py	/^JIS_CHAR_TO_FREQ_ORDER = ($/;"	v
JIS_TABLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/jisfreq.py	/^JIS_TABLE_SIZE = 4368$/;"	v
JIS_TYPICAL_DISTRIBUTION_RATIO	plugged/vim-wakatime/packages/wakatime/packages/chardet/jisfreq.py	/^JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0$/;"	v
JLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^class JLexer(RegexLexer):$/;"	c
JSONArray	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^def JSONArray(state, scan_once, _w=WHITESPACE.match, _ws=WHITESPACE_STR):$/;"	f
JSONDecodeError	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^class JSONDecodeError(ValueError):$/;"	c
JSONDecoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^class JSONDecoder(object):$/;"	c
JSONEncoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^class JSONEncoder(object):$/;"	c
JSONEncoderForHTML	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^class JSONEncoderForHTML(JSONEncoder):$/;"	c
JSONLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/web.py	/^JSONLexer = JsonLexer  # for backwards compatibility with Pygments 1.5$/;"	v
JSONObject	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^def JSONObject(state, encoding, strict, scan_once, object_hook,$/;"	f
JSON_ALLOW_NAN	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ALLOW_NAN /;"	d	file:
JSON_ASCII_AS_STRING	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ASCII_AS_STRING /;"	d	file:
JSON_ASCII_Check	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_ASCII_Check /;"	d	file:
JSON_Accu	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^} JSON_Accu;$/;"	t	typeref:struct:__anondf9dcc210108	file:
JSON_Accu_Accumulate	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Accumulate(JSON_Accu *acc, PyObject *unicode)$/;"	f	typeref:typename:int	file:
JSON_Accu_Destroy	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Destroy(JSON_Accu *acc)$/;"	f	typeref:typename:void	file:
JSON_Accu_FinishAsList	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_FinishAsList(JSON_Accu *acc)$/;"	f	typeref:typename:PyObject *	file:
JSON_Accu_Init	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_Accu_Init(JSON_Accu *acc)$/;"	f	typeref:typename:int	file:
JSON_IGNORE_NAN	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_IGNORE_NAN /;"	d	file:
JSON_InternFromString	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_InternFromString /;"	d	file:
JSON_Intern_GET_SIZE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_Intern_GET_SIZE /;"	d	file:
JSON_NewEmptyUnicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_NewEmptyUnicode(/;"	d	file:
JSON_ParseEncoding	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_ParseEncoding(PyObject *encoding)$/;"	f	typeref:typename:PyObject *	file:
JSON_UNICHR	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define JSON_UNICHR /;"	d	file:
JSON_UnicodeFromChar	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^JSON_UnicodeFromChar(JSON_UNICHR c)$/;"	f	typeref:typename:PyObject *	file:
JS_IDENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^JS_IDENT = JS_IDENT_START + '(?:' + JS_IDENT_PART + ')*'$/;"	v
JS_IDENT_PART	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^JS_IDENT_PART = ('(?:[$' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl',$/;"	v
JS_IDENT_START	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^JS_IDENT_START = ('(?:[$_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Lo', 'Nl') +$/;"	v
JadeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^JadeLexer = PugLexer  # compat$/;"	v
JagsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^class JagsLexer(RegexLexer):$/;"	c
JapaneseContextAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^class JapaneseContextAnalysis(object):$/;"	c
JasminLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class JasminLexer(RegexLexer):$/;"	c
JavaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class JavaLexer(RegexLexer):$/;"	c
JavaParser	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^class JavaParser(TokenParser):$/;"	c
JavaScript	plugged/nord-vim/README.md	/^#### JavaScript$/;"	t
JavascriptDjangoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JavascriptDjangoLexer(DelegatingLexer):$/;"	c
JavascriptErbLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JavascriptErbLexer(DelegatingLexer):$/;"	c
JavascriptGenshiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JavascriptGenshiLexer(DelegatingLexer):$/;"	c
JavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class JavascriptLexer(RegexLexer):$/;"	c
JavascriptParser	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^class JavascriptParser(TokenParser):$/;"	c
JavascriptPhpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JavascriptPhpLexer(DelegatingLexer):$/;"	c
JavascriptSmartyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JavascriptSmartyLexer(DelegatingLexer):$/;"	c
JclLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class JclLexer(RegexLexer):$/;"	c
JpgImageFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class JpgImageFormatter(ImageFormatter):$/;"	c
JsgfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^class JsgfLexer(RegexLexer):$/;"	c
JsonBareObjectLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^class JsonBareObjectLexer(JsonLexer):$/;"	c
JsonFormatter	plugged/vim-wakatime/packages/wakatime/logger.py	/^class JsonFormatter(logging.Formatter):$/;"	c
JsonLdLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^class JsonLdLexer(JsonLexer):$/;"	c
JsonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^class JsonLexer(RegexLexer):$/;"	c
JsonParser	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^class JsonParser(TokenParser):$/;"	c
JspLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JspLexer(DelegatingLexer):$/;"	c
JspRootLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class JspRootLexer(RegexLexer):$/;"	c
JuliaConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^class JuliaConsoleLexer(Lexer):$/;"	c
JuliaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^class JuliaLexer(RegexLexer):$/;"	c
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JuttleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class JuttleLexer(RegexLexer):$/;"	c
K	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> K :<C-U>execute <SID>StagePrevious(v:count1)<CR>$/;"	m
KD	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^        KD = lambda s, d: hash_utf8("%s:%s" % (s, d))$/;"	f	member:HTTPDigestAuth.build_digest_header	file:
KEYWORD	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    KEYWORD = ('fn', 'do', 'end', 'after', 'else', 'rescue', 'catch')$/;"	v	class:ElixirLexer
KEYWORD	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^KEYWORD = Token.Name.Function$/;"	v
KEYWORDS	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^KEYWORDS = [$/;"	v
KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stan_builtins.py	/^KEYWORDS = ($/;"	v
KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^KEYWORDS = sorted(set(_KEYWORDS_FUTURE + _KEYWORDS_ODBC + _KEYWORDS_SERVER))$/;"	v
KEYWORDS_URL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    KEYWORDS_URL = SOURCE_URL + '\/doc\/src\/sgml\/keywords.sgml'$/;"	v
KEYWORD_OPERATOR	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    KEYWORD_OPERATOR = ('not', 'and', 'or', 'when', 'in')$/;"	v	class:ElixirLexer
KOI8R_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^KOI8R_char_to_order_map = ($/;"	v
KOREAN	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    KOREAN = 0x08$/;"	v	class:LanguageFilter
KalLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class KalLexer(RegexLexer):$/;"	c
KconfigLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class KconfigLexer(RegexLexer):$/;"	c
KeySched	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^    KeySched = None  # des_key_schedule$/;"	v	class:DES
Keyboard Shortcuts	plugged/ack.vim/README.md	/^### Keyboard Shortcuts$/;"	S
Keyword	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Keyword = Token.Keyword$/;"	v
KeywordCall	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class KeywordCall(Tokenizer):$/;"	c
KeywordCaseFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class KeywordCaseFilter(Filter):$/;"	c
KeywordSetting	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class KeywordSetting(TestCaseSetting):$/;"	c
KeywordTable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class KeywordTable(TestCaseTable):$/;"	c
Kind	plugged/nvim-miniyank/rplugin/python3/denite/kind/miniyank.py	/^class Kind(Base):$/;"	c
Known Issue	plugged/javascript-libraries-syntax.vim/README.md	/^Known Issue$/;"	s
Koi8rModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^Koi8rModel = {$/;"	v
KokaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class KokaLexer(RegexLexer):$/;"	c
KotlinLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class KotlinLexer(RegexLexer):$/;"	c
KotlinParser	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^class KotlinParser(TokenParser):$/;"	c
KqueueSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    class KqueueSelector(BaseSelector):$/;"	c
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
LAMBDA_LIST_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^LAMBDA_LIST_KEYWORDS = set(($/;"	v
LANGUAGES	plugged/vim-wakatime/packages/wakatime/language_priorities.py	/^LANGUAGES = {$/;"	v
LAck	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck          call ack#Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd       call ack#Ack('lgrepadd<bang>', <q-args>)$/;"	c
LAckHelp	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckHelp      call ack#AckHelp('lgrep<bang>', <q-args>)$/;"	c
LAckWindow	plugged/ack.vim/plugin/ack.vim	/^command! -bang -nargs=*                LAckWindow    call ack#AckWindow('lgrep<bang>', <q-args>)$/;"	c
LEXERDOC	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^LEXERDOC = '''$/;"	v
LEXERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^LEXERS = {$/;"	v
LEXER_ENTRY_POINT	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^LEXER_ENTRY_POINT = 'pygments.lexers'$/;"	v
LIKELY	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    LIKELY = 2$/;"	v	class:SequenceLikelihood
LINE_BREAK	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    LINE_BREAK = 254$/;"	v	class:CharacterCategory
LOGICAL_HEBREW_NAME	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    LOGICAL_HEBREW_NAME = "windows-1255"$/;"	v	class:HebrewProber
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LS	plugged/ultisnips/test/constant.py	/^LS = '@'  # List snippets$/;"	v
LSLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class LSLLexer(RegexLexer):$/;"	c
Language Plugins	plugged/nord-vim/README.md	/^### Language Plugins$/;"	S
Language Support	plugged/nord-vim/CHANGELOG.md	/^### Language Support$/;"	S
Language maintainers	plugged/vim-snippets/README.md	/^Language maintainers$/;"	s
Language-specific options	plugged/papercolor-theme/README.md	/^### Language-specific options$/;"	S
LanguageFilter	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class LanguageFilter(object):$/;"	c
Languages	plugged/nord-vim/README.md	/^## Languages$/;"	s
Languages and Plugins	plugged/papercolor-theme/README.md	/^### Languages and Plugins$/;"	S
LassoCssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class LassoCssLexer(DelegatingLexer):$/;"	c
LassoHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class LassoHtmlLexer(DelegatingLexer):$/;"	c
LassoJavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class LassoJavascriptLexer(DelegatingLexer):$/;"	c
LassoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class LassoLexer(RegexLexer):$/;"	c
LassoXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class LassoXmlLexer(DelegatingLexer):$/;"	c
LatexEmbeddedLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^class LatexEmbeddedLexer(Lexer):$/;"	c
LatexFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^class LatexFormatter(Formatter):$/;"	c
Latin1ClassModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^Latin1ClassModel = ($/;"	v
Latin1Prober	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^class Latin1Prober(CharSetProber):$/;"	c
Latin1_CharToClass	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^Latin1_CharToClass = ($/;"	v
Latin2HungarianModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhungarianmodel.py	/^Latin2HungarianModel = {$/;"	v
Latin2_HungarianCharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhungarianmodel.py	/^Latin2_HungarianCharToOrderMap = ($/;"	v
Latin5BulgarianModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langbulgarianmodel.py	/^Latin5BulgarianModel = {$/;"	v
Latin5CyrillicModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^Latin5CyrillicModel = {$/;"	v
Latin5TurkishModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langturkishmodel.py	/^Latin5TurkishModel = {$/;"	v
Latin5_BulgarianCharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langbulgarianmodel.py	/^Latin5_BulgarianCharToOrderMap = ($/;"	v
Latin5_TurkishCharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langturkishmodel.py	/^Latin5_TurkishCharToOrderMap = ($/;"	v
Latin7GreekModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langgreekmodel.py	/^Latin7GreekModel = {$/;"	v
Latin7_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langgreekmodel.py	/^Latin7_char_to_order_map = ($/;"	v
LazyDict	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^class LazyDict(DictMixin):$/;"	c
LazyList	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^        class LazyList(list):$/;"	c	member:LazyList.__new__	file:
LazyList	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^class LazyList(list):$/;"	c
LazySet	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^        class LazySet(set):$/;"	c	member:LazySet.__new__	file:
LazySet	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^class LazySet(set):$/;"	c
Leading Spaces	plugged/indentLine/README.md	/^### Leading Spaces$/;"	S
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable let b:indentLine_leadingSpaceEnabled = 0 | call <SID>LeadingSpa/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable let b:indentLine_leadingSpaceEnabled = 1 | call <SID>LeadingSpac/;"	c
LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeanLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^class LeanLexer(RegexLexer):$/;"	c
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
LegacyInterpolation	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class LegacyInterpolation(Interpolation):$/;"	c
LessCssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^class LessCssLexer(CssLexer):$/;"	c
Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class Lexer(object):$/;"	c
LexerContext	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class LexerContext(object):$/;"	c
LexerMeta	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class LexerMeta(type):$/;"	c
Libraries	plugged/javascript-libraries-syntax.vim/README.md	/^Libraries$/;"	s
License	plugged/ctrlp.vim/readme.md	/^## License$/;"	s
License	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">License<\/h2>$/;"	i
License	plugged/far.vim/README.md	/^## License$/;"	s
License	plugged/indentLine/README.md	/^## License$/;"	s
License	plugged/javascript-libraries-syntax.vim/README.md	/^License$/;"	s
License	plugged/lightline-ale/README.md	/^## License$/;"	s
License	plugged/lightline.vim/README.md	/^## License$/;"	s
License	plugged/vim-devicons/README.md	/^License$/;"	s
License	plugged/vim-fugitive/README.markdown	/^## License$/;"	s
License	plugged/vim-javascript/README.md	/^## License$/;"	s
License	plugged/vim-repeat/README.markdown	/^## License$/;"	s
License	plugged/vim-snippets/README.md	/^License$/;"	s
License	plugged/vim-surround/README.markdown	/^## License$/;"	s
LightlineFilename	config/08.lightline.vim	/^function! LightlineFilename()$/;"	f
LightlineFugitive	config/08.lightline.vim	/^function! LightlineFugitive()$/;"	f
LightlineModified	config/08.lightline.vim	/^function! LightlineModified()$/;"	f
LightlineReadonly	config/08.lightline.vim	/^function! LightlineReadonly()$/;"	f
LighttpdConfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class LighttpdConfLexer(RegexLexer):$/;"	c
LimboLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^class LimboLexer(RegexLexer):$/;"	c
Line number background	plugged/nord-vim/README.md	/^### Line number background$/;"	S
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator(object):$/;"	c
LiquidLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class LiquidLexer(RegexLexer):$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult($/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
Literal	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Literal = Token.Literal$/;"	v
Literals	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Literals = ('AppleScript', 'current application', 'false', 'linefeed',$/;"	v	class:AppleScriptLexer
LiterateAgdaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class LiterateAgdaLexer(LiterateLexer):$/;"	c
LiterateCryptolLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class LiterateCryptolLexer(LiterateLexer):$/;"	c
LiterateHaskellLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class LiterateHaskellLexer(LiterateLexer):$/;"	c
LiterateIdrisLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class LiterateIdrisLexer(LiterateLexer):$/;"	c
LiterateLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^class LiterateLexer(Lexer):$/;"	c
LiveScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class LiveScriptLexer(RegexLexer):$/;"	c
Ll	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Ll = u'a-z\\xb5\\xdf-\\xf6\\xf8-\\xff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u/;"	v
LlvmLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class LlvmLexer(RegexLexer):$/;"	c
Lm	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Lm = u'\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\/;"	v
Lo	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Lo = u'\\xaa\\xba\\u01bb\\u01c0-\\u01c3\\u0294\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u063f\\u06/;"	v
Local	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^Local = LocalTimezone()$/;"	v
LocalTimezone	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^class LocalTimezone(tzinfo):$/;"	c
LocationParseError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class LocationParseError(LocationValueError):$/;"	c
LocationValueError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class LocationValueError(ValueError, HTTPError):$/;"	c
Log	plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LogosLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^class LogosLexer(ObjectiveCppLexer):$/;"	c
LogtalkLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^class LogtalkLexer(RegexLexer):$/;"	c
LookupDict	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^class LookupDict(dict):$/;"	c
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
LovelaceStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^class LovelaceStyle(Style):$/;"	c
Lt	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Lt = u'\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\/;"	v
Lu	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Lu = u'A-Z\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\/;"	v
LuaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class LuaLexer(RegexLexer):$/;"	c
MACROS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^MACROS = set(($/;"	v
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAPPINGS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    MAPPINGS = dict((s, Keyword) for s in DECLARATIONS)$/;"	v	class:ShenLexer
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^            MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    MAXSIZE = sys.maxsize$/;"	v
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^            MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        MAXSIZE = int((1 << 31) - 1)$/;"	v
MAXSIZE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    MAXSIZE = sys.maxsize$/;"	v
MAX_FILE_SIZE_SUPPORTED	plugged/vim-wakatime/packages/wakatime/constants.py	/^MAX_FILE_SIZE_SUPPORTED = 2000000$/;"	v
MAX_INTERPOLATION_DEPTH	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^MAX_INTERPOLATION_DEPTH = 10$/;"	v
MAX_REL_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    MAX_REL_THRESHOLD = 1000$/;"	v	class:JapaneseContextAnalysis
MBCSGroupProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcsgroupprober.py	/^class MBCSGroupProber(CharSetGroupProber):$/;"	c
MEMBERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lasso_builtins.py	/^MEMBERS = {$/;"	v
MIC_PROVIDED	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    MIC_PROVIDED                = 0x2$/;"	v	class:AvFlags
MIDDLE_BLOCKS	plugged/ale/test/script/block-padding-checker	/^MIDDLE_BLOCKS = set(['else', 'elseif', 'catch', 'finally'])$/;"	v
MINIMUM_DATA_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    MINIMUM_DATA_THRESHOLD = 3$/;"	v	class:CharDistributionAnalysis
MINIMUM_DATA_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    MINIMUM_DATA_THRESHOLD = 4$/;"	v	class:JapaneseContextAnalysis
MINIMUM_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    MINIMUM_THRESHOLD = 0.20$/;"	v	class:UniversalDetector
MIN_EXPANSION	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define MIN_EXPANSION /;"	d	file:
MIN_FINAL_CHAR_DISTANCE	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    MIN_FINAL_CHAR_DISTANCE = 5$/;"	v	class:HebrewProber
MIN_MODEL_DISTANCE	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    MIN_MODEL_DISTANCE = 0.01$/;"	v	class:HebrewProber
MKFILES	plugged/javascript-libraries-syntax.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MODULEDOC	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^MODULEDOC = '''$/;"	v
MODULES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^MODULES = {'basic': ('_G',$/;"	v
MODULES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^MODULES = {'.NET': ('dotnet_load',),$/;"	v
MOOCodeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class MOOCodeLexer(RegexLexer):$/;"	c
MSDOSSessionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class MSDOSSessionLexer(ShellSessionBaseLexer):$/;"	c
MSV_AV_CHANNEL_BINDINGS	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_CHANNEL_BINDINGS     = 0x0a$/;"	v	class:TargetInfo
MSV_AV_DNS_COMPUTER_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_DNS_COMPUTER_NAME    = 0x03$/;"	v	class:TargetInfo
MSV_AV_DNS_DOMAIN_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_DNS_DOMAIN_NAME      = 0x04$/;"	v	class:TargetInfo
MSV_AV_DNS_TREE_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_DNS_TREE_NAME        = 0x05$/;"	v	class:TargetInfo
MSV_AV_EOL	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_EOL                  = 0x00$/;"	v	class:TargetInfo
MSV_AV_FLAGS	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_FLAGS                = 0x06$/;"	v	class:TargetInfo
MSV_AV_NB_COMPUTER_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_NB_COMPUTER_NAME     = 0x01$/;"	v	class:TargetInfo
MSV_AV_NB_DOMAIN_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_NB_DOMAIN_NAME       = 0x02$/;"	v	class:TargetInfo
MSV_AV_SINGLE_HOST	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_SINGLE_HOST          = 0x08$/;"	v	class:TargetInfo
MSV_AV_TARGET_NAME	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_TARGET_NAME          = 0x09$/;"	v	class:TargetInfo
MSV_AV_TIMESTAMP	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    MSV_AV_TIMESTAMP            = 0x07$/;"	v	class:TargetInfo
MacCyrillicModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^MacCyrillicModel = {$/;"	v
MachineState	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class MachineState(object):$/;"	c
MakefileLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^class MakefileLexer(Lexer):$/;"	c
MakoCssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MakoCssLexer(DelegatingLexer):$/;"	c
MakoHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MakoHtmlLexer(DelegatingLexer):$/;"	c
MakoJavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MakoJavascriptLexer(DelegatingLexer):$/;"	c
MakoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MakoLexer(RegexLexer):$/;"	c
MakoXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MakoXmlLexer(DelegatingLexer):$/;"	c
ManniStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/manni.py	/^class ManniStyle(Style):$/;"	c
Manual	plugged/nord-vim/README.md	/^#### Manual$/;"	t
Manual (not recommended)	plugged/ack.vim/README.md	/^#### Manual (not recommended)$/;"	t
MaqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class MaqlLexer(RegexLexer):$/;"	c
MarkdownLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MarkdownLexer(RegexLexer):$/;"	c
MaskLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class MaskLexer(RegexLexer):$/;"	c
MasonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MasonLexer(RegexLexer):$/;"	c
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MathematicaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^class MathematicaLexer(RegexLexer):$/;"	c
MatlabLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^class MatlabLexer(RegexLexer):$/;"	c
MatlabSessionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^class MatlabSessionLexer(Lexer):$/;"	c
MaxRetryError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class MaxRetryError(RequestError):$/;"	c
Mc	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Mc = u'\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0/;"	v
Me	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Me = u'\\u0488-\\u0489\\u20dd-\\u20e0\\u20e2-\\u20e4\\ua670-\\ua672'$/;"	v
Mercurial	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^class Mercurial(BaseProject):$/;"	c
MessageTypes	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^class MessageTypes(object):$/;"	c
MiniDLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^class MiniDLexer(CrocLexer):$/;"	c
MiniYank	plugged/nvim-miniyank/plugin/miniyank.vim	/^augroup MiniYank$/;"	a
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
MissingSchema	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class MissingSchema(RequestException, ValueError):$/;"	c
MissingSectionHeaderError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class MissingSectionHeaderError(ParsingError):$/;"	c
MixProject	plugged/ale/test/command_callback/elixir_paths/mix_project/mix.exs	/^defmodule Test.MixProject do$/;"	m
Mn	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Mn = u'\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7/;"	v
MockRequest	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^class MockRequest(object):$/;"	c
MockResponse	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^class MockResponse(object):$/;"	c
ModelicaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^class ModelicaLexer(RegexLexer):$/;"	c
Modified	plugged/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Modula2Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^class Modula2Lexer(RegexLexer):$/;"	c
Module_six_moves_urllib	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib(types.ModuleType):$/;"	c
Module_six_moves_urllib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib(types.ModuleType):$/;"	c
Module_six_moves_urllib_error	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib_error(_LazyModule):$/;"	c
Module_six_moves_urllib_error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib_error(_LazyModule):$/;"	c
Module_six_moves_urllib_parse	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib_parse(_LazyModule):$/;"	c
Module_six_moves_urllib_parse	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib_parse(_LazyModule):$/;"	c
Module_six_moves_urllib_request	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib_request(_LazyModule):$/;"	c
Module_six_moves_urllib_request	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib_request(_LazyModule):$/;"	c
Module_six_moves_urllib_response	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib_response(_LazyModule):$/;"	c
Module_six_moves_urllib_response	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib_response(_LazyModule):$/;"	c
Module_six_moves_urllib_robotparser	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class Module_six_moves_urllib_robotparser(_LazyModule):$/;"	c
Module_six_moves_urllib_robotparser	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class Module_six_moves_urllib_robotparser(_LazyModule):$/;"	c
MoinWikiLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MoinWikiLexer(RegexLexer):$/;"	c
MonkeyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^class MonkeyLexer(RegexLexer):$/;"	c
MonokaiStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/monokai.py	/^class MonokaiStyle(Style):$/;"	c
MonteLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^class MonteLexer(RegexLexer):$/;"	c
MoonScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class MoonScriptLexer(LuaLexer):$/;"	c
Mountain	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^Mountain = USTimeZone(-7, "Mountain", "MST", "MDT")$/;"	v
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MovedAttribute	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class MovedAttribute(_LazyDescr):$/;"	c
MovedAttribute	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class MovedAttribute(_LazyDescr):$/;"	c
MovedModule	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class MovedModule(_LazyDescr):$/;"	c
MovedModule	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class MovedModule(_LazyDescr):$/;"	c
MozPreprocCssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MozPreprocCssLexer(DelegatingLexer):$/;"	c
MozPreprocHashLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MozPreprocHashLexer(RegexLexer):$/;"	c
MozPreprocJavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MozPreprocJavascriptLexer(DelegatingLexer):$/;"	c
MozPreprocPercentLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MozPreprocPercentLexer(MozPreprocHashLexer):$/;"	c
MozPreprocXulLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class MozPreprocXulLexer(DelegatingLexer):$/;"	c
MqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class MqlLexer(CppLexer):$/;"	c
MscgenLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class MscgenLexer(RegexLexer):$/;"	c
MuPADLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^class MuPADLexer(RegexLexer):$/;"	c
MultiByteCharSetProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^class MultiByteCharSetProber(CharSetProber):$/;"	c
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose($/;"	c
Multiline Replacement	plugged/far.vim/README.md	/^### Multiline Replacement$/;"	S
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MurphyStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/murphy.py	/^class MurphyStyle(Style):$/;"	c
MxmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^class MxmlLexer(RegexLexer):$/;"	c
My syntax highlighting stops working randomly	plugged/vim-vue/readme.md	/^### My syntax highlighting stops working randomly$/;"	S
MySqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class MySqlLexer(RegexLexer):$/;"	c
MyghtyCssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MyghtyCssLexer(DelegatingLexer):$/;"	c
MyghtyHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MyghtyHtmlLexer(DelegatingLexer):$/;"	c
MyghtyJavascriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MyghtyJavascriptLexer(DelegatingLexer):$/;"	c
MyghtyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MyghtyLexer(RegexLexer):$/;"	c
MyghtyXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class MyghtyXmlLexer(DelegatingLexer):$/;"	c
NAME	plugged/javascript-libraries-syntax.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NAME	plugged/javascript-libraries-syntax.vim/config.mk	/^NAME=javascript-libraries-syntax.vim$/;"	m
NCLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^class NCLLexer(RegexLexer):$/;"	c
NEGATIVE	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    NEGATIVE = 0$/;"	v	class:SequenceLikelihood
NEGATIVE_SHORTCUT_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    NEGATIVE_SHORTCUT_THRESHOLD = 0.05$/;"	v	class:SingleByteCharSetProber
NERDTree	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeFind	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirror	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeQuitOnOpen	config/02.general.vim	/^let NERDTreeQuitOnOpen=1$/;"	v
NERDTreeRefreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NETRC_FILES	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^NETRC_FILES = ('.netrc', '_netrc')$/;"	v
NEVER	plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NONE	plugged/vim-buffergator/autoload/buffergator.vim	/^augroup NONE$/;"	a
NONE	plugged/vim-buffergator/plugin/buffergator.vim	/^augroup NONE$/;"	a
NONSPACECRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    NONSPACECRE = re.compile(r"\\S")$/;"	v	class:RawConfigParser
NON_CJK	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    NON_CJK = 0x10$/;"	v	class:LanguageFilter
NORMALIZABLE_SCHEMES	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^NORMALIZABLE_SCHEMES = ('http', 'https', None)$/;"	v
NORMAL_KAF	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    NORMAL_KAF = 0xeb$/;"	v	class:HebrewProber
NORMAL_MEM	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    NORMAL_MEM = 0xee$/;"	v	class:HebrewProber
NORMAL_NUN	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    NORMAL_NUN = 0xf0$/;"	v	class:HebrewProber
NORMAL_PE	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    NORMAL_PE = 0xf4$/;"	v	class:HebrewProber
NORMAL_TSADI	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    NORMAL_TSADI = 0xf6$/;"	v	class:HebrewProber
NOT_ME	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    NOT_ME = 2$/;"	v	class:ProbingState
NSISLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^class NSISLexer(RegexLexer):$/;"	c
NTLMConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^class NTLMConnectionPool(HTTPSConnectionPool):$/;"	c
NTLMSSP_ANOYNMOUS	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_ANOYNMOUS                               = 0x00000800$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_128	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_128                           = 0x20000000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_56	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_56                            = 0x80000000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_ALWAYS_SIGN	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_ALWAYS_SIGN                   = 0x00008000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_DATAGRAM	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_DATAGRAM                      = 0x00000040$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY      = 0x00080000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_IDENTITY	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_IDENTITY                      = 0x00100000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_KEY_EXCH	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_KEY_EXCH                      = 0x40000000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_LM_KEY	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_LM_KEY                        = 0x00000080$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_NTLM	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_NTLM                          = 0x00000200$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_OEM	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_OEM                           = 0x00000002$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED           = 0x00001000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED      = 0x00002000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_SEAL	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_SEAL                          = 0x00000020$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_SIGN	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_SIGN                          = 0x00000010$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_TARGET_INFO	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_TARGET_INFO                   = 0x00800000$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_UNICODE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_UNICODE                       = 0x00000001$/;"	v	class:NegotiateFlags
NTLMSSP_NEGOTIATE_VERSION	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_NEGOTIATE_VERSION                       = 0x02000000$/;"	v	class:NegotiateFlags
NTLMSSP_REQUEST_NON_NT_SESSION_KEY	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_REQUEST_NON_NT_SESSION_KEY              = 0x00400000$/;"	v	class:NegotiateFlags
NTLMSSP_REQUEST_TARGET	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_REQUEST_TARGET                          = 0x00000004$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R1                             = 0x10000000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R10	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R10                            = 0x00000008$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R2                             = 0x08000000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R3	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R3                             = 0x04000000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R4	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R4                             = 0x01000000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R5	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R5                             = 0x00200000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R6	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R6                             = 0x00040000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R7	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R7                             = 0x00004000$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R8	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R8                             = 0x00000400$/;"	v	class:NegotiateFlags
NTLMSSP_RESERVED_R9	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_RESERVED_R9                             = 0x00000100$/;"	v	class:NegotiateFlags
NTLMSSP_TARGET_TYPE_DOMAIN	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_TARGET_TYPE_DOMAIN                      = 0x00010000$/;"	v	class:NegotiateFlags
NTLMSSP_TARGET_TYPE_SERVER	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLMSSP_TARGET_TYPE_SERVER                      = 0x00020000$/;"	v	class:NegotiateFlags
NTLM_AUTHENTICATE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLM_AUTHENTICATE   = 0x3$/;"	v	class:MessageTypes
NTLM_CHALLENGE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLM_CHALLENGE      = 0x2$/;"	v	class:MessageTypes
NTLM_NEGOTIATE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    NTLM_NEGOTIATE      = 0x1$/;"	v	class:MessageTypes
NTLM_SIGNATURE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^NTLM_SIGNATURE = b'NTLMSSP\\0'$/;"	v
NUMBER_RE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^NUMBER_RE = re.compile($/;"	v
NUM_OF_CATEGORY	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    NUM_OF_CATEGORY = 6$/;"	v	class:JapaneseContextAnalysis
NaN	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^NaN, PosInf, NegInf = _floatconstants()$/;"	v
Name	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Name = Token.Name$/;"	v
NameHighlightFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class NameHighlightFilter(Filter):$/;"	c
Namespace	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class Namespace(_AttributeHolder):$/;"	c
NasmLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class NasmLexer(RegexLexer):$/;"	c
NasmObjdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class NasmObjdumpLexer(ObjdumpLexer):$/;"	c
NativeStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/native.py	/^class NativeStyle(Style):$/;"	c
Nd	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Nd = u'0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u/;"	v
Need help?	plugged/far.vim/README.md	/^#### Need help?$/;"	t
NegInf	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^NaN, PosInf, NegInf = _floatconstants()$/;"	v
NegotiateFlags	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^class NegotiateFlags(object):$/;"	c
NegotiateMessage	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^class NegotiateMessage(object):$/;"	c
NemerleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class NemerleLexer(RegexLexer):$/;"	c
NeoBundle	plugged/ack.vim/README.md	/^#### NeoBundle$/;"	t
NeoVim on Unix	plugged/ale/README.md	/^#### NeoVim on Unix$/;"	t
NeoVimLoggerHandler	plugged/far.vim/rplugin/python3/far/__init__.py	/^    class NeoVimLoggerHandler(logging.Handler):$/;"	c
Neovim	plugged/nord-vim/CHANGELOG.md	/^#### Neovim$/;"	t
Neovim-Async, Ack, Ag, Ripgrep support	plugged/far.vim/README.md	/^### Neovim-Async, Ack, Ag, Ripgrep support$/;"	S
NesCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class NesCLexer(CLexer):$/;"	c
NewConnectionError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class NewConnectionError(ConnectTimeoutError, PoolError):$/;"	c
NewLispLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class NewLispLexer(RegexLexer):$/;"	c
NewspeakLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^class NewspeakLexer(RegexLexer):$/;"	c
NginxConfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class NginxConfLexer(RegexLexer):$/;"	c
NimrodLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^class NimrodLexer(RegexLexer):$/;"	c
NitLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^class NitLexer(RegexLexer):$/;"	c
NixLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^class NixLexer(RegexLexer):$/;"	c
Nl	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Nl = u'\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6/;"	v
No	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^No = u'\\xb2-\\xb3\\xb9\\xbc-\\xbe\\u09f4-\\u09f9\\u0b72-\\u0b77\\u0bf0-\\u0bf2\\u0c78-\\u0c7e\\/;"	v
NoCertificateRetrievedWarning	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^class NoCertificateRetrievedWarning(Warning):$/;"	c
NoOptionError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class NoOptionError(Error):$/;"	c
NoSectionError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class NoSectionError(Error):$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonExistentTimeError	plugged/vim-wakatime/packages/wakatime/packages/pytz/exceptions.py	/^class NonExistentTimeError(InvalidTimeError):$/;"	c
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
NotYetImplemented	plugged/vim-wakatime/packages/wakatime/exceptions.py	/^class NotYetImplemented(Exception):$/;"	c
Note for developers of other plugins	plugged/lightline.vim/README.md	/^## Note for developers of other plugins$/;"	s
Ntlm	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^class Ntlm(object):$/;"	c
NuSMVLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^class NuSMVLexer(RegexLexer):$/;"	c
NullFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^class NullFormatter(Formatter):$/;"	c
NullHandler	plugged/vim-wakatime/packages/wakatime/packages/requests/__init__.py	/^    class NullHandler(logging.Handler):$/;"	c
NullHandler	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^    class NullHandler(logging.Handler):$/;"	c
NumPyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class NumPyLexer(PythonLexer):$/;"	c
Number	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Number = Literal.Number$/;"	v
Numbers Don't Belong	plugged/numbers.vim/README.md	/^Numbers Don't Belong    $/;"	s
NumbersDisable	plugged/numbers.vim/plugin/numbers.vim	/^command! -nargs=0 NumbersDisable call NumbersDisable()$/;"	c
NumbersDisable	plugged/numbers.vim/plugin/numbers.vim	/^function! NumbersDisable()$/;"	f
NumbersEnable	plugged/numbers.vim/plugin/numbers.vim	/^command! -nargs=0 NumbersEnable call NumbersEnable()$/;"	c
NumbersEnable	plugged/numbers.vim/plugin/numbers.vim	/^function! NumbersEnable()$/;"	f
NumbersOnOff	plugged/numbers.vim/plugin/numbers.vim	/^command! -nargs=0 NumbersOnOff call NumbersOnOff()$/;"	c
NumbersOnOff	plugged/numbers.vim/plugin/numbers.vim	/^function! NumbersOnOff()$/;"	f
NumbersRelativeOff	plugged/numbers.vim/plugin/numbers.vim	/^function! NumbersRelativeOff()$/;"	f
NumbersToggle	plugged/numbers.vim/plugin/numbers.vim	/^command! -nargs=0 NumbersToggle call NumbersToggle()$/;"	c
NumbersToggle	plugged/numbers.vim/plugin/numbers.vim	/^function! NumbersToggle()$/;"	f
O	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> O <NOP>$/;"	m
O	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> O           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
O	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> O           :call b:buffergator_catalog_viewer.visit_targe/;"	m
O	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> O    :<C-U>exe <SID>BlameCommit("tabedit")<CR>$/;"	m
O	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> O     :<C-U>exe <SID>GF("tabedit")<CR>$/;"	m
O	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> O     :<C-U>tab .,.+1Gblame<CR>$/;"	m
OLSEN_VERSION	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^OLSEN_VERSION = OLSON_VERSION # Old releases had this misspelling$/;"	v
OLSON_VERSION	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^OLSON_VERSION = '2017b'$/;"	v
ONE_CHAR_PROB	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    ONE_CHAR_PROB = 0.5$/;"	v	class:UTF8Prober
ONE_OR_MORE	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^ONE_OR_MORE = '+'$/;"	v
OPCODES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_csound_builtins.py	/^OPCODES = set(($/;"	v
OPENEDGEKEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_openedge_builtins.py	/^OPENEDGEKEYWORDS = ($/;"	v
OPERATORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^OPERATORS = ($/;"	v
OPERATORS1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    OPERATORS1 = ('<', '>', '+', '-', '*', '\/', '!', '^', '&')$/;"	v	class:ElixirLexer
OPERATORS2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    OPERATORS2 = ($/;"	v	class:ElixirLexer
OPERATORS3	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    OPERATORS3 = ($/;"	v	class:ElixirLexer
OPERATOR_END_RE	plugged/ale/test/script/block-padding-checker	/^OPERATOR_END_RE = re.compile(r'(&&|\\|\\||\\+|-|\\*\\| \/)$')$/;"	v
OPERATOR_WORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^OPERATOR_WORDS = ($/;"	v
OPTCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    OPTCRE = re.compile(_OPT_TMPL.format(delim="=|:"), re.VERBOSE)$/;"	v	class:RawConfigParser
OPTCRE_NV	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    OPTCRE_NV = re.compile(_OPT_NV_TMPL.format(delim="=|:"), re.VERBOSE)$/;"	v	class:RawConfigParser
OPTIONAL	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^OPTIONAL = '?'$/;"	v
OP_NO_COMPRESSION	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^    OP_NO_COMPRESSION = 0x20000$/;"	v
OP_NO_SSLv2	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^    OP_NO_SSLv2, OP_NO_SSLv3 = 0x1000000, 0x2000000$/;"	v
OP_NO_SSLv3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^    OP_NO_SSLv2, OP_NO_SSLv3 = 0x1000000, 0x2000000$/;"	v
ORANGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^ORANGE = "#f99b15"$/;"	v
ORANGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^ORANGE = "#f99b15"$/;"	v
ORANGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^ORANGE = '#ff8000'$/;"	v
OSStatus	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^OSStatus = c_int32$/;"	v
OTH	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^OTH = 1  # other$/;"	v
ObjdumpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class ObjdumpLexer(RegexLexer):$/;"	c
ObjectiveCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^class ObjectiveCLexer(objective(CLexer)):$/;"	c
ObjectiveCParser	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^class ObjectiveCParser(TokenParser):$/;"	c
ObjectiveCppLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^class ObjectiveCppLexer(objective(CppLexer)):$/;"	c
ObjectiveJLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class ObjectiveJLexer(RegexLexer):$/;"	c
OcamlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^class OcamlLexer(RegexLexer):$/;"	c
OctaveLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^class OctaveLexer(RegexLexer):$/;"	c
OdinLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^class OdinLexer(AtomsLexer):$/;"	c
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
Once CtrlP is open:	plugged/ctrlp.vim/readme.md	/^##### Once CtrlP is open:$/;"	T
OocLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^class OocLexer(RegexLexer):$/;"	c
OpaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^class OpaLexer(RegexLexer):$/;"	c
OpenBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
OpenEdgeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^class OpenEdgeLexer(RegexLexer):$/;"	c
OpenSSL	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^    OpenSSL = None$/;"	v
Opener	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    class Opener(FancyURLopener):$/;"	c
Operator	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Operator = Token.Operator$/;"	v
Operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Operators = ("and", "or", "is equal", "equals", "(is )?equal to", "is not",$/;"	v	class:AppleScriptLexer
OptionError	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^class OptionError(Exception):$/;"	c
Optional Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Optional Info$/;"	t
Optional: concerning jsx.	plugged/vim-javascript/ISSUE_TEMPLATE.md	/^#### Optional: concerning jsx.$/;"	t
OrderedDict	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^class OrderedDict(dict, DictMixin):$/;"	c
OrderedDict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^OrderedDict = _import_OrderedDict()$/;"	v
OrderedDict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^class OrderedDict(dict, DictMixin):$/;"	c
OrderedDict	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^class OrderedDict(dict):$/;"	c
Other	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Other = Token.Other$/;"	v
Our Pledge	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s
Our Responsibilities	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s
Our Standards	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s
Overriding highlighting	plugged/php.vim/README.md	/^### Overriding highlighting$/;"	S
P	config/03.remaps.vim	/^map P <Plug>(miniyank-autoPut)<Paste>$/;"	m
P	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> P :call far#close_preview_window()<cr>$/;"	m
P	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> P    :<C-U>exe <SID>BlameJump('^'.v:count1)<CR>$/;"	m
P	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> P     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
P	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line('.'),line('.')+v:count1-1)<C/;"	m
P	plugged/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line("'<"),line("'>"))<CR>$/;"	m
PARSER	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^PARSER = 'A...'$/;"	v
PATTERNS_AND_WEIGHTS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    PATTERNS_AND_WEIGHTS = ($/;"	v	class:RexxLexer
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PERCENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PERCENT = '%' + HEX + HEX$/;"	v	class:SparqlLexer
PERL6_BRACKETS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_BRACKETS = {$/;"	v	class:Perl6Lexer
PERL6_BUILTINS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_BUILTINS = ($/;"	v	class:Perl6Lexer
PERL6_BUILTIN_CLASSES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_BUILTIN_CLASSES = ($/;"	v	class:Perl6Lexer
PERL6_IDENTIFIER_RANGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_IDENTIFIER_RANGE = "['\\w:-]"$/;"	v	class:Perl6Lexer
PERL6_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_KEYWORDS = ($/;"	v	class:Perl6Lexer
PERL6_OPERATORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    PERL6_OPERATORS = ($/;"	v	class:Perl6Lexer
PERM_OP	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def PERM_OP(tup, n, m):$/;"	f
PHP_FUNCTION_RE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    PHP_FUNCTION_RE    = '<a href="function\\..*?\\.html">(.*?)<\/a>'$/;"	v
PHP_MANUAL_DIR	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_DIR     = '.\/php-chunked-xhtml\/'$/;"	v
PHP_MANUAL_URL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    PHP_MANUAL_URL     = 'http:\/\/us3.php.net\/distributions\/manual\/php_manual_en.tar.gz'$/;"	v
PHP_MODULE_RE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    PHP_MODULE_RE      = '<title>(.*?) Functions<\/title>'$/;"	v
PHP_REFERENCE_GLOB	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    PHP_REFERENCE_GLOB = 'ref.*'$/;"	v
PLPGSQL_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^PLPGSQL_KEYWORDS = ($/;"	v
PLX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PLX = '(?:' + PERCENT + ')|(?:' + PN_LOCAL_ESC + ')'$/;"	v	class:SparqlLexer
PN_CHARS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS = '[' + PN_CHARS_GRP + ']'$/;"	v	class:SparqlLexer
PN_CHARS_BASE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS_BASE = '[' + PN_CHARS_BASE_GRP + ']'$/;"	v	class:SparqlLexer
PN_CHARS_BASE_GRP	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS_BASE_GRP = (u'a-zA-Z'$/;"	v	class:SparqlLexer
PN_CHARS_GRP	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS_GRP = (PN_CHARS_U_GRP +$/;"	v	class:SparqlLexer
PN_CHARS_U	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS_U = '[' + PN_CHARS_U_GRP + ']'$/;"	v	class:SparqlLexer
PN_CHARS_U_GRP	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_CHARS_U_GRP = (PN_CHARS_BASE_GRP + '_')$/;"	v	class:SparqlLexer
PN_LOCAL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_LOCAL = ('(?:[' + PN_CHARS_U_GRP + ':0-9' + ']|' + PLX + ')' +$/;"	v	class:SparqlLexer
PN_LOCAL_ESC	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_LOCAL_ESC = r'\\\\' + PN_LOCAL_ESC_CHARS$/;"	v	class:SparqlLexer
PN_LOCAL_ESC_CHARS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_LOCAL_ESC_CHARS = '[' + PN_LOCAL_ESC_CHARS_GRP + ']'$/;"	v	class:SparqlLexer
PN_LOCAL_ESC_CHARS_GRP	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_LOCAL_ESC_CHARS_GRP = r' _~.\\-!$&"()*+,;=\/?#@%'$/;"	v	class:SparqlLexer
PN_PREFIX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    PN_PREFIX = PN_CHARS_BASE + '(?:[' + PN_CHARS_GRP + '.]*' + PN_CHARS + ')?'$/;"	v	class:SparqlLexer
POSITIVE	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    POSITIVE = 3$/;"	v	class:SequenceLikelihood
POSITIVE_SHORTCUT_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    POSITIVE_SHORTCUT_THRESHOLD = 0.95$/;"	v	class:SingleByteCharSetProber
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PRINTABLE_PROXY_TYPES	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^PRINTABLE_PROXY_TYPES = dict(zip(PROXY_TYPES.values(), PROXY_TYPES.keys()))$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PROXY_TYPES	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^PROXY_TYPES = {"SOCKS4": SOCKS4, "SOCKS5": SOCKS5, "HTTP": HTTP}$/;"	v
PROXY_TYPE_HTTP	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^PROXY_TYPE_HTTP = HTTP = 3$/;"	v
PROXY_TYPE_SOCKS4	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^PROXY_TYPE_SOCKS4 = SOCKS4 = 1$/;"	v
PROXY_TYPE_SOCKS5	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^PROXY_TYPE_SOCKS5 = SOCKS5 = 2$/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = ($/;"	v
PSEUDO_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^PSEUDO_TYPES = tuple(sorted(set(PSEUDO_TYPES) - set(map(str.lower, KEYWORDS))))$/;"	v
PSEUDO_VAR	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    PSEUDO_VAR = ('_', '__MODULE__', '__DIR__', '__ENV__', '__CALLER__')$/;"	v	class:ElixirLexer
PUNCTUATION	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    PUNCTUATION = ($/;"	v	class:ElixirLexer
PURE_ASCII	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    PURE_ASCII = 0$/;"	v	class:InputState
PURPLE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^PURPLE = "#815ba4"$/;"	v
PURPLE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^PURPLE = "#815ba4"$/;"	v
PURPLE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^PURPLE = '#5918bb'$/;"	v
PWD	plugged/javascript-libraries-syntax.vim/Makefile	/^PWD=`pwd`$/;"	m
PY2	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    PY2 = True$/;"	v
PY2	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^PY2 = sys.version_info[0] == 2$/;"	v
PY2	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^PY2 = sys.version_info[0] == 2$/;"	v
PY2	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^PY2 = sys.version_info[0] == 2$/;"	v
PY2_UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY2_UNUSED /;"	d	file:
PY2_UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY2_UNUSED$/;"	d	file:
PY3	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    PY3 = False$/;"	v
PY3	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    PY3 = True$/;"	v
PY3	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^PY3 = sys.version_info[0] == 3$/;"	v
PY3	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    PY3 = False$/;"	v
PY3	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^PY3 = sys.version_info[0] == 3$/;"	v
PY3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^PY3 = sys.version_info[0] == 3$/;"	v
PY34	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^PY34 = sys.version_info[0:2] >= (3, 4)$/;"	v
PY34	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^PY34 = sys.version_info[0:2] >= (3, 4)$/;"	v
PY3_UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY3_UNUSED /;"	d	file:
PY3_UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY3_UNUSED$/;"	d	file:
PYTHON3	plugged/ultisnips/test/constant.py	/^PYTHON3 = sys.version_info >= (3, 0)$/;"	v
PYTHON3	plugged/ultisnips/test/test_Plugin.py	/^PYTHON3 = sys.version_info >= (3, 0)$/;"	v
PY_SSIZE_T_MAX	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY_SSIZE_T_MAX /;"	d	file:
PY_SSIZE_T_MIN	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PY_SSIZE_T_MIN /;"	d	file:
Pacific	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^Pacific  = USTimeZone(-8, "Pacific",  "PST", "PDT")$/;"	v
PacmanConfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class PacmanConfLexer(RegexLexer):$/;"	c
PanLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class PanLexer(RegexLexer):$/;"	c
PaperColor	plugged/papercolor-theme/colors/PaperColor.vim	/^command! -nargs=0 PaperColor :call g:PaperColor()$/;"	c
PaperColor	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! g:PaperColor()$/;"	f
PaperColor Theme	plugged/papercolor-theme/README.md	/^PaperColor Theme$/;"	c
PaperColor light	plugged/lightline.vim/README.md	/^### PaperColor light$/;"	S
ParaSailLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^class ParaSailLexer(RegexLexer):$/;"	c
ParaisoDarkStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^class ParaisoDarkStyle(Style):$/;"	c
ParaisoLightStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^class ParaisoLightStyle(Style):$/;"	c
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
ParsingError	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class ParsingError(Error):$/;"	c
PastieStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/pastie.py	/^class PastieStyle(Style):$/;"	c
Patched font	plugged/indentLine/README.md	/^### Patched font$/;"	S
Pathogen	plugged/ack.vim/README.md	/^#### Pathogen$/;"	t
PawnLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^class PawnLexer(RegexLexer):$/;"	c
Pc	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Pc = u'_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f'$/;"	v
Pd	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Pd = u'\\\\-\\u058a\\u05be\\u1400\\u1806\\u2010-\\u2015\\u2e17\\u2e1a\\u2e3a-\\u2e3b\\u301c\\u30/;"	v
Pe	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Pe = u')\\\\]}\\u0f3b\\u0f3d\\u169c\\u2046\\u207e\\u208e\\u2309\\u230b\\u232a\\u2769\\u276b\\u27/;"	v
Perl6Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^class Perl6Lexer(ExtendedRegexLexer):$/;"	c
PerlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^class PerlLexer(RegexLexer):$/;"	c
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PerldocStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/perldoc.py	/^class PerldocStyle(Style):$/;"	c
Pf	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Pf = u'\\xbb\\u2019\\u201d\\u203a\\u2e03\\u2e05\\u2e0a\\u2e0d\\u2e1d\\u2e21'$/;"	v
PhpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^class PhpLexer(RegexLexer):$/;"	c
PhpParser	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^class PhpParser(TokenParser):$/;"	c
Pi	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Pi = u'\\xab\\u2018\\u201b-\\u201c\\u201f\\u2039\\u2e02\\u2e04\\u2e09\\u2e0c\\u2e1c\\u2e20'$/;"	v
PigLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class PigLexer(RegexLexer):$/;"	c
PikeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class PikeLexer(CppLexer):$/;"	c
PilNotAvailable	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^class PilNotAvailable(ImportError):$/;"	c
PkgConfigLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class PkgConfigLexer(RegexLexer):$/;"	c
PlPgsqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class PlPgsqlLexer(PostgresBase, RegexLexer):$/;"	c
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^### Plugin Support$/;"	S
Plugin Support	plugged/nord-vim/CHANGELOG.md	/^#### Plugin Support$/;"	t
Plugin Support	plugged/nord-vim/README.md	/^## Plugin Support$/;"	s
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Po	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Po = u"!-#%-'*,.-\/:-;?-@\\\\\\\\\\xa1\\xa7\\xb6-\\xb7\\xbf\\u037e\\u0387\\u055a-\\u055f\\u0589\\/;"	v
PollSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    class PollSelector(BaseSelector):$/;"	c
PoolError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class PoolError(HTTPError):$/;"	c
PoolKey	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^PoolKey = collections.namedtuple('PoolKey', _key_fields)$/;"	v
PoolManager	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^class PoolManager(RequestMethods):$/;"	c
Popen	plugged/vim-wakatime/packages/wakatime/compat.py	/^class Popen(subprocess.Popen):$/;"	c
Popen	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^    class Popen(subprocess.Popen):$/;"	c
PosInf	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^NaN, PosInf, NegInf = _floatconstants()$/;"	v
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position(object):$/;"	c
Possible Fix	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Possible Fix$/;"	S
Possibly FAQ	plugged/ack.vim/README.md	/^## Possibly FAQ$/;"	s
PostScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^class PostScriptLexer(RegexLexer):$/;"	c
PostgresBase	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class PostgresBase(object):$/;"	c
PostgresConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class PostgresConsoleLexer(Lexer):$/;"	c
PostgresLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class PostgresLexer(PostgresBase, RegexLexer):$/;"	c
PovrayLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^class PovrayLexer(RegexLexer):$/;"	c
PowerShellLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class PowerShellLexer(RegexLexer):$/;"	c
PowerShellSessionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class PowerShellSessionLexer(ShellSessionBaseLexer):$/;"	c
PraatLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^class PraatLexer(RegexLexer):$/;"	c
PreparedRequest	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):$/;"	c
Priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    Priority = Generic.Heading$/;"	v	class:TodotxtLexer
ProbingState	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class ProbingState(object):$/;"	c
Process	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Process$/;"	S
ProfilingRegexLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class ProfilingRegexLexer(RegexLexer):$/;"	c
ProfilingRegexLexerMeta	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class ProfilingRegexLexerMeta(RegexLexerMeta):$/;"	c
Project	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    Project = Generic.Error$/;"	v	class:TodotxtLexer
Project Initialization	plugged/nord-vim/CHANGELOG.md	/^# Project Initialization$/;"	c
ProjectFile	plugged/vim-wakatime/packages/wakatime/projects/projectfile.py	/^class ProjectFile(BaseProject):$/;"	c
ProjectMap	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^class ProjectMap(BaseProject):$/;"	c
Projects of interest	plugged/php.vim/README.md	/^### Projects of interest$/;"	S
PrologLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^class PrologLexer(RegexLexer):$/;"	c
Promotion	plugged/vim-devicons/README.md	/^### Promotion$/;"	S
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR($/;"	c
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PropertiesLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class PropertiesLexer(RegexLexer):$/;"	c
ProtoBufLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class ProtoBufLexer(RegexLexer):$/;"	c
ProtocolError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ProtocolError(HTTPError):$/;"	c
ProxyConnectionError	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class ProxyConnectionError(ProxyError): pass$/;"	c
ProxyError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ProxyError(ConnectionError):$/;"	c
ProxyError	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class ProxyError(IOError):$/;"	c
ProxyError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ProxyError(HTTPError):$/;"	c
ProxyManager	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^class ProxyManager(PoolManager):$/;"	c
ProxySchemeUnknown	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ProxySchemeUnknown(AssertionError, ValueError):$/;"	c
Ps	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Ps = u'(\\\\[{\\u0f3a\\u0f3c\\u169b\\u201a\\u201e\\u2045\\u207d\\u208d\\u2308\\u230a\\u2329\\u27/;"	v
PsqlRegexLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class PsqlRegexLexer(PostgresBase, RegexLexer):$/;"	c
Public Methods	plugged/vim-devicons/DEVELOPER.md	/^#### Public Methods$/;"	t
PugLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class PugLexer(ExtendedRegexLexer):$/;"	c
Punctuation	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Punctuation = Token.Punctuation$/;"	v
PuppetLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class PuppetLexer(RegexLexer):$/;"	c
Pushing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s
PyEncoderObject	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^} PyEncoderObject;$/;"	t	typeref:struct:_PyEncoderObject	file:
PyEncoderType	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^PyTypeObject PyEncoderType = {$/;"	v	typeref:typename:PyTypeObject	file:
PyEncoderType	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static PyTypeObject PyEncoderType;$/;"	v	typeref:typename:PyTypeObject	file:
PyEncoder_Check	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyEncoder_Check(/;"	d	file:
PyEncoder_CheckExact	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyEncoder_CheckExact(/;"	d	file:
PyInit__speedups	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^PyInit__speedups(void)$/;"	f	typeref:typename:PyMODINIT_FUNC
PyInt_AsSsize_t	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_AsSsize_t /;"	d	file:
PyInt_Check	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_Check(/;"	d	file:
PyInt_CheckExact	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_CheckExact(/;"	d	file:
PyInt_FromSsize_t	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_FromSsize_t /;"	d	file:
PyInt_FromString	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_FromString /;"	d	file:
PyInt_Type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyInt_Type /;"	d	file:
PyOS_string_to_double	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyOS_string_to_double /;"	d	file:
PyOpenSSLContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^class PyOpenSSLContext(object):$/;"	c
PyPyLogLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^class PyPyLogLexer(RegexLexer):$/;"	c
PyScannerObject	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^} PyScannerObject;$/;"	t	typeref:struct:_PyScannerObject	file:
PyScannerType	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^PyTypeObject PyScannerType = {$/;"	v	typeref:typename:PyTypeObject	file:
PyScannerType	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static PyTypeObject PyScannerType;$/;"	v	typeref:typename:PyTypeObject	file:
PyScanner_Check	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyScanner_Check(/;"	d	file:
PyScanner_CheckExact	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyScanner_CheckExact(/;"	d	file:
PyString_AS_STRING	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_AS_STRING /;"	d	file:
PyString_Check	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_Check /;"	d	file:
PyString_FromStringAndSize	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_FromStringAndSize /;"	d	file:
PyString_GET_SIZE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyString_GET_SIZE /;"	d	file:
PyUnicode_DATA	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_DATA(/;"	d	file:
PyUnicode_GetLength	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_GetLength /;"	d	file:
PyUnicode_KIND	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_KIND(/;"	d	file:
PyUnicode_READ	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_READ(/;"	d	file:
PyUnicode_READY	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyUnicode_READY(/;"	d	file:
PyVarObject_HEAD_INIT	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define PyVarObject_HEAD_INIT(/;"	d	file:
Py_IS_FINITE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_IS_FINITE(/;"	d	file:
Py_SIZE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_SIZE(/;"	d	file:
Py_TYPE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define Py_TYPE(/;"	d	file:
Py_ssize_t	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^typedef int Py_ssize_t;$/;"	t	typeref:typename:int	file:
PygmentsDoc	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^class PygmentsDoc(Directive):$/;"	c
Python3Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class Python3Lexer(RegexLexer):$/;"	c
Python3TracebackLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class Python3TracebackLexer(RegexLexer):$/;"	c
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class PythonConsoleLexer(Lexer):$/;"	c
PythonLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class PythonLexer(RegexLexer):$/;"	c
PythonParser	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^class PythonParser(TokenParser):$/;"	c
PythonTracebackLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^class PythonTracebackLexer(RegexLexer):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_WeirdScoping_Error	plugged/ultisnips/test/test_Interpolation.py	/^class Python_WeirdScoping_Error(_VimTest):$/;"	c
QBasicLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^class QBasicLexer(RegexLexer):$/;"	c
QVToLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^class QVToLexer(RegexLexer):$/;"	c
QmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^class QmlLexer(RegexLexer):$/;"	c
Queue	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^class Queue(object):$/;"	c
QueueCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    QueueCls = queue.LifoQueue$/;"	v	class:ConnectionPool
Quick Start	plugged/ultisnips/README.md	/^Quick Start$/;"	s
Quick Start	plugged/vim-smooth-scroll/README.md	/^## Quick Start$/;"	s
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
R	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> R :<C-U>exe <SID>ReloadStatus()<CR>$/;"	m
RConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^class RConsoleLexer(Lexer):$/;"	c
README_FILES	plugged/javascript-libraries-syntax.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
RECENT_DATE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^RECENT_DATE = datetime.date(2016, 1, 1)$/;"	v
RECORD_FILE	plugged/javascript-libraries-syntax.vim/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	plugged/javascript-libraries-syntax.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
RED	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^RED = "#ef6155"$/;"	v
RED	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^RED = "#ef6155"$/;"	v
RED	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^RED = '#cc0000'$/;"	v
REDIRECT_STATI	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^REDIRECT_STATI = ($/;"	v
REDIRECT_STATUSES	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    REDIRECT_STATUSES = [301, 302, 303, 307, 308]$/;"	v	class:HTTPResponse
RED_BRIGHT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^RED_BRIGHT = '#ff0000'$/;"	v
RED_DARK	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^RED_DARK = '#c5060b'$/;"	v
RED_LIGHT	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^RED_LIGHT = '#ffcccc'$/;"	v
REMAINDER	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^REMAINDER = '...'$/;"	v
RESERVED	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stan_builtins.py	/^RESERVED = ($/;"	v
RETRY_AFTER_STATUS_CODES	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    RETRY_AFTER_STATUS_CODES = frozenset([413, 429, 503])$/;"	v	class:Retry
REV_CONTROL_PLUGINS	plugged/vim-wakatime/packages/wakatime/project.py	/^REV_CONTROL_PLUGINS = [$/;"	v
RLock	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    class RLock:$/;"	c
RNCCompactLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^class RNCCompactLexer(RegexLexer):$/;"	c
RPMSpecLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^class RPMSpecLexer(RegexLexer):$/;"	c
RUBY_OPERATORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^RUBY_OPERATORS = ($/;"	v
RUN_TESTS	plugged/ale/run-tests.bat	/^:RUN_TESTS$/;"	l
RacketLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class RacketLexer(RegexLexer):$/;"	c
RagelCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelCLexer(DelegatingLexer):$/;"	c
RagelCppLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelCppLexer(DelegatingLexer):$/;"	c
RagelDLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelDLexer(DelegatingLexer):$/;"	c
RagelEmbeddedLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelEmbeddedLexer(RegexLexer):$/;"	c
RagelJavaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelJavaLexer(DelegatingLexer):$/;"	c
RagelLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelLexer(RegexLexer):$/;"	c
RagelObjectiveCLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelObjectiveCLexer(DelegatingLexer):$/;"	c
RagelRubyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class RagelRubyLexer(DelegatingLexer):$/;"	c
RainbowDashStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^class RainbowDashStyle(Style):$/;"	c
RaiseOnErrorTokenFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class RaiseOnErrorTokenFilter(Filter):$/;"	c
Random	plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RawConfigParser	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class RawConfigParser(MutableMapping):$/;"	c
RawDescriptionHelpFormatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class RawDescriptionHelpFormatter(HelpFormatter):$/;"	c
RawTextHelpFormatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class RawTextHelpFormatter(RawDescriptionHelpFormatter):$/;"	c
RawTokenFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^class RawTokenFormatter(Formatter):$/;"	c
RawTokenLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^class RawTokenLexer(Lexer):$/;"	c
RdLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^class RdLexer(RegexLexer):$/;"	c
ReadBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
ReadTimeout	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class ReadTimeout(Timeout):$/;"	c
ReadTimeoutError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ReadTimeoutError(TimeoutError, RequestError):$/;"	c
RebolLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^class RebolLexer(RegexLexer):$/;"	c
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
RecentlyUsedContainer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^class RecentlyUsedContainer(MutableMapping):$/;"	c
RedLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^class RedLexer(RegexLexer):$/;"	c
RedcodeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^class RedcodeLexer(RegexLexer):$/;"	c
Refar	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#RefarComplete -nargs=* -range=-1 Refar$/;"	c
Refar	plugged/far.vim/plugin/far.vim	/^function! Refar(rngmode, rngline1, rngline2, ...) abort "{{{$/;"	f
References	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    References = ('(in )?back of', '(in )?front of', '[0-9]+(st|nd|rd|th)',$/;"	v	class:AppleScriptLexer
RegeditLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class RegeditLexer(RegexLexer):$/;"	c
RegexLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class RegexLexer(Lexer):$/;"	c
RegexLexerMeta	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class RegexLexerMeta(LexerMeta):$/;"	c
Related Projects	plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related Projects Based On PaperColor	plugged/papercolor-theme/README.md	/^# Related Projects Based On PaperColor$/;"	c
Related repositories	plugged/vim-snippets/README.md	/^Related repositories$/;"	s
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
Repository	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Repository<\/h2>$/;"	i
Reproducing Bugs	plugged/ultisnips/CONTRIBUTING.md	/^# Reproducing Bugs$/;"	c
Reproducing the bug	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## Reproducing the bug$/;"	s
Request	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^class Request(RequestHooksMixin):$/;"	c
RequestEncodingMixin	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^class RequestEncodingMixin(object):$/;"	c
RequestError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class RequestError(PoolError):$/;"	c
RequestException	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class RequestException(IOError):$/;"	c
RequestField	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^class RequestField(object):$/;"	c
RequestHistory	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^RequestHistory = namedtuple('RequestHistory', ["method", "url", "error",$/;"	v
RequestHooksMixin	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^class RequestHooksMixin(object):$/;"	c
RequestMethods	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^class RequestMethods(object):$/;"	c
RequestsCookieJar	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^class RequestsCookieJar(cookielib.CookieJar, collections.MutableMapping):$/;"	c
RequestsDependencyWarning	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class RequestsDependencyWarning(RequestsWarning):$/;"	c
RequestsWarning	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class RequestsWarning(Warning):$/;"	c
Required Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Required Info$/;"	t
Requirements	plugged/indentLine/README.md	/^## Requirements$/;"	s
Requirements	plugged/numbers.vim/README.md	/^Requirements$/;"	s
Requirements	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Requirements$/;"	t
Requirements (please check off with 'x')	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Requirements (please check off with 'x')$/;"	t
Reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    Reserved = ('but', 'put', 'returning', 'the')$/;"	v	class:AppleScriptLexer
ResetNumbers	plugged/numbers.vim/plugin/numbers.vim	/^function! ResetNumbers()$/;"	f
ResourceLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^class ResourceLexer(RegexLexer):$/;"	c
Response	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^class Response(object):$/;"	c
ResponseCls	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    ResponseCls = HTTPResponse$/;"	v	class:HTTPConnectionPool
ResponseError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ResponseError(HTTPError):$/;"	c
ResponseNotChunked	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class ResponseNotChunked(ProtocolError, ValueError):$/;"	c
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
Retry	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^class Retry(object):$/;"	c
RetryError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class RetryError(RequestException):$/;"	c
RevealBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
RexxLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^class RexxLexer(RegexLexer):$/;"	c
RhtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class RhtmlLexer(DelegatingLexer):$/;"	c
RoboconfGraphLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^class RoboconfGraphLexer(RegexLexer):$/;"	c
RoboconfInstancesLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^class RoboconfInstancesLexer(RegexLexer):$/;"	c
RobotFrameworkLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class RobotFrameworkLexer(Lexer):$/;"	c
RowSplitter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class RowSplitter(object):$/;"	c
RowTokenizer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class RowTokenizer(object):$/;"	c
RqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class RqlLexer(RegexLexer):$/;"	c
RrtStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rrt.py	/^class RrtStyle(Style):$/;"	c
RslLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class RslLexer(RegexLexer):$/;"	c
RstLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class RstLexer(RegexLexer):$/;"	c
RtfFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^class RtfFormatter(Formatter):$/;"	c
RtsLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^class RtsLexer(RegexLexer):$/;"	c
RubyConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^class RubyConsoleLexer(Lexer):$/;"	c
RubyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^class RubyLexer(ExtendedRegexLexer):$/;"	c
Run these commands in the "Git for Windows" Bash terminal	plugged/ale/README.md	/^# Run these commands in the "Git for Windows" Bash terminal$/;"	c
RunTest	plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
Running the test suite.	plugged/ultisnips/CONTRIBUTING.md	/^### Running the test suite.$/;"	S
Running using docker.	plugged/ultisnips/CONTRIBUTING.md	/^#### Running using docker.$/;"	t
RussianLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^RussianLangModel = ($/;"	v
RustLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^class RustLexer(RegexLexer):$/;"	c
RustParser	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^class RustParser(TokenParser):$/;"	c
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> S           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
S	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> S     :<C-U>echoerr 'Use gO'<CR>$/;"	m
S	plugged/vim-surround/plugin/surround.vim	/^  xmap S   <Plug>VSurround$/;"	m
SAME_INDENTATION_SET	plugged/ale/test/script/block-padding-checker	/^SAME_INDENTATION_SET = set(['\\\\'])$/;"	v
SAMPLE_SIZE	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    SAMPLE_SIZE = 64$/;"	v	class:SingleByteCharSetProber
SASLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^class SASLexer(RegexLexer):$/;"	c
SBCSGroupProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcsgroupprober.py	/^class SBCSGroupProber(CharSetGroupProber):$/;"	c
SB_ENOUGH_REL_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    SB_ENOUGH_REL_THRESHOLD = 1024  #  0.25 * SAMPLE_SIZE^2$/;"	v	class:SingleByteCharSetProber
SECTCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    SECTCRE = re.compile(_SECT_TMPL, re.VERBOSE)$/;"	v	class:RawConfigParser
SELECTION	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^SELECTION = "#4f424c"$/;"	v
SELECTION	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^SELECTION = "#a39e9b"$/;"	v
SEPARATOR	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^SEPARATOR = Token.Punctuation$/;"	v
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SERVER_SEALING	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    SERVER_SEALING = b"session key to server-to-client sealing key magic constant\\0"$/;"	v	class:SignSealConstants
SERVER_SIGNING	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    SERVER_SIGNING = b"session key to server-to-client signing key magic constant\\0"$/;"	v	class:SignSealConstants
SETTING	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^SETTING = Token.Keyword.Namespace$/;"	v
SHELL	plugged/javascript-libraries-syntax.vim/Makefile	/^SHELL=bash$/;"	m
SHORTCUT_THRESHOLD	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    SHORTCUT_THRESHOLD = 0.95$/;"	v	class:CharSetProber
SHOW_RESULTS	plugged/ale/run-tests.bat	/^:SHOW_RESULTS$/;"	l
SJISContextAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^class SJISContextAnalysis(JapaneseContextAnalysis):$/;"	c
SJISDistributionAnalysis	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^class SJISDistributionAnalysis(CharDistributionAnalysis):$/;"	c
SJISProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^class SJISProber(MultiByteCharSetProber):$/;"	c
SJIS_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^SJIS_CHAR_LEN_TABLE = (0, 1, 1, 2, 0, 0)$/;"	v
SJIS_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^SJIS_CLS = ($/;"	v
SJIS_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^SJIS_SM_MODEL = {'class_table': SJIS_CLS,$/;"	v
SJIS_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^SJIS_ST = ($/;"	v
SLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^class SLexer(RegexLexer):$/;"	c
SMLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^class SMLLexer(RegexLexer):$/;"	c
SM_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    SM_TYPES = set(('Action', 'bool', 'Float', 'Plugin', 'String', 'any',$/;"	v	class:SourcePawnLexer
SNIMissingWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class SNIMissingWarning(HTTPWarning):$/;"	c
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SOCKS4Error	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class SOCKS4Error(ProxyError): pass$/;"	c
SOCKS4_ERRORS	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^SOCKS4_ERRORS = { 0x5B: "Request rejected or failed",$/;"	v
SOCKS5AuthError	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class SOCKS5AuthError(ProxyError): pass$/;"	c
SOCKS5Error	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class SOCKS5Error(ProxyError): pass$/;"	c
SOCKS5_ERRORS	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^SOCKS5_ERRORS = { 0x01: "General SOCKS server failure",$/;"	v
SOCKSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^class SOCKSConnection(HTTPConnection):$/;"	c
SOCKSHTTPConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^class SOCKSHTTPConnectionPool(HTTPConnectionPool):$/;"	c
SOCKSHTTPSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^class SOCKSHTTPSConnection(SOCKSConnection, HTTPSConnection):$/;"	c
SOCKSHTTPSConnectionPool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^class SOCKSHTTPSConnectionPool(HTTPSConnectionPool):$/;"	c
SOCKSProxyManager	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def SOCKSProxyManager(*args, **kwargs):$/;"	f
SOCKSProxyManager	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^class SOCKSProxyManager(PoolManager):$/;"	c
SOURCE_URL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    SOURCE_URL = 'https:\/\/github.com\/postgres\/postgres\/raw\/master'$/;"	v
SPECIAL_FORMS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cl_builtins.py	/^SPECIAL_FORMS = set(($/;"	v
SPECIAL_FORMS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    SPECIAL_FORMS = ($/;"	v	class:ShenLexer
SPECIFIC_ERROR	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    SPECIFIC_ERROR = 'too many {status_code} error responses'$/;"	v	class:ResponseError
SSLCipherSuite	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLCipherSuite = c_uint32$/;"	v
SSLConnectionRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLConnectionRef = c_uint32$/;"	v
SSLConnectionType	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLConnectionType = c_uint32$/;"	v
SSLContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^    class SSLContext(object):  # Platform-specific: Python 2 & 3.1$/;"	c
SSLContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^SSLContext = None$/;"	v
SSLContextRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLContextRef = POINTER(c_void_p)$/;"	v
SSLError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class SSLError(ConnectionError):$/;"	c
SSLError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class SSLError(HTTPError):$/;"	c
SSLProtocol	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLProtocol = c_uint32$/;"	v
SSLProtocolSide	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLProtocolSide = c_uint32$/;"	v
SSLReadFunc	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    SSLReadFunc = CFUNCTYPE(OSStatus, SSLConnectionRef, c_void_p, POINTER(c_size_t))$/;"	v
SSLSessionOption	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SSLSessionOption = c_uint32$/;"	v
SSLWriteFunc	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    SSLWriteFunc = CFUNCTYPE(OSStatus, SSLConnectionRef, POINTER(c_byte), POINTER(c_size_t))$/;"	v
SSL_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^SSL_KEYWORDS = ('key_file', 'cert_file', 'cert_reqs', 'ca_certs',$/;"	v
SSL_WRITE_BLOCKSIZE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^SSL_WRITE_BLOCKSIZE = 16384$/;"	v
SSL_WRITE_BLOCKSIZE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^SSL_WRITE_BLOCKSIZE = 16384$/;"	v
STANDARD_TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^STANDARD_TYPES = {$/;"	v
START	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    START = 0$/;"	v	class:MachineState
START_BLOCKS	plugged/ale/test/script/block-padding-checker	/^START_BLOCKS = set(['if', 'for', 'while', 'try', 'function'])$/;"	v
STDOFFSET	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^STDOFFSET = timedelta(seconds = -_time.timezone)$/;"	v
STRINGCHUNK	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^STRINGCHUNK = re.compile(r'(.*?)(["\\\\\\x00-\\x1f])', FLAGS)$/;"	v
STYLES	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^STYLES = {$/;"	v
STYLE_ENTRY_POINT	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^STYLE_ENTRY_POINT = 'pygments.styles'$/;"	v
STYLE_MAP	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/__init__.py	/^STYLE_MAP = {$/;"	v
STYLE_TEMPLATE	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^STYLE_TEMPLATE = r'''$/;"	v
SUCCESS	plugged/vim-wakatime/packages/wakatime/constants.py	/^SUCCESS = 0$/;"	v
SUPPRESS	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^SUPPRESS = '==SUPPRESS=='$/;"	v
SURE_NO	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    SURE_NO = 0.01$/;"	v	class:CharDistributionAnalysis
SURE_YES	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    SURE_YES = 0.99$/;"	v	class:CharDistributionAnalysis
SYMBOL	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    SYMBOL = 253$/;"	v	class:CharacterCategory
SYNTAX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^SYNTAX = Token.Punctuation$/;"	v
S_CHAR	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define S_CHAR(/;"	d	file:
SafeConfigParser	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class SafeConfigParser(ConfigParser):$/;"	c
SasStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/sas.py	/^class SasStyle(Style):$/;"	c
SassLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^class SassLexer(ExtendedRegexLexer):$/;"	c
Sc	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Sc = u'$\\xa2-\\xa5\\u058f\\u060b\\u09f2-\\u09f3\\u09fb\\u0af1\\u0bf9\\u0e3f\\u17db\\u20a0-\\u20/;"	v
ScalaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class ScalaLexer(RegexLexer):$/;"	c
ScalaParser	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^class ScalaParser(TokenParser):$/;"	c
ScamlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class ScamlLexer(ExtendedRegexLexer):$/;"	c
Scanner	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^class Scanner(object):$/;"	c
SchemeLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class SchemeLexer(RegexLexer):$/;"	c
ScilabLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^class ScilabLexer(RegexLexer):$/;"	c
Scope	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Scope$/;"	s
Screen Shots	plugged/vim-wakatime/README.md	/^Screen Shots$/;"	s
Screencasts	plugged/ultisnips/README.md	/^Screencasts$/;"	s
Screencasts	plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s
Screenshot(s)	plugged/nerdtree/.github/ISSUE_TEMPLATE.md	/^### Screenshot(s)$/;"	S
Screenshots	plugged/indentLine/README.md	/^## Screenshots$/;"	s
Screenshots	plugged/papercolor-theme/README.md	/^## Screenshots$/;"	s
Screenshots (if appropriate or helpful)	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Screenshots (if appropriate or helpful)$/;"	t
ScssLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^class ScssLexer(RegexLexer):$/;"	c
SecCertificateRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecCertificateRef = POINTER(c_void_p)$/;"	v
SecExternalFormat	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecExternalFormat = c_uint32$/;"	v
SecExternalItemType	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecExternalItemType = c_uint32$/;"	v
SecIdentityRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecIdentityRef = POINTER(c_void_p)$/;"	v
SecItemImportExportFlags	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecItemImportExportFlags = c_uint32$/;"	v
SecItemImportExportKeyParameters	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecItemImportExportKeyParameters = c_void_p$/;"	v
SecKeychainRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecKeychainRef = POINTER(c_void_p)$/;"	v
SecTrustOptionFlags	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecTrustOptionFlags = c_uint32$/;"	v
SecTrustRef	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecTrustRef = POINTER(c_void_p)$/;"	v
SecTrustResultType	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^SecTrustResultType = c_uint32$/;"	v
SectionProxy	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^class SectionProxy(MutableMapping):$/;"	c
SecureTransportContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^class SecureTransportContext(object):$/;"	c
Security	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^Security = CDLL(security_path, use_errno=True)$/;"	v
SecurityConst	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^class SecurityConst(object):$/;"	c
SecurityWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class SecurityWarning(HTTPWarning):$/;"	c
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectSelector	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    class SelectSelector(BaseSelector):$/;"	c
SelectorError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^class SelectorError(Exception):$/;"	c
SelectorKey	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^SelectorKey = namedtuple('SelectorKey', ['fileobj', 'fd', 'events', 'data'])$/;"	v
Self promotion	plugged/indentLine/README.md	/^## Self promotion$/;"	s
Self-Promotion	plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s
Self-Promotion	plugged/vim-repeat/README.markdown	/^## Self-Promotion$/;"	s
Self-Promotion	plugged/vim-surround/README.markdown	/^## Self-Promotion$/;"	s
SequenceLikelihood	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^class SequenceLikelihood(object):$/;"	c
Session	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^class Session(SessionRedirectMixin):$/;"	c
SessionCache	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^class SessionCache(object):$/;"	c
SessionRedirectMixin	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^class SessionRedirectMixin(object):$/;"	c
SessionSecurity	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^class SessionSecurity(object):$/;"	c
SetNumbers	plugged/numbers.vim/plugin/numbers.vim	/^function! SetNumbers()$/;"	f
SetRelative	plugged/numbers.vim/plugin/numbers.vim	/^function! SetRelative()$/;"	f
SetUp	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Setting	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class Setting(Tokenizer):$/;"	c
SettingTable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class SettingTable(_Table):$/;"	c
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShellSessionBaseLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class ShellSessionBaseLexer(Lexer):$/;"	c
ShenLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class ShenLexer(RegexLexer):$/;"	c
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SignSealConstants	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^class SignSealConstants(object):$/;"	c
SilverLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^class SilverLexer(RegexLexer):$/;"	c
Simple function call	plugged/vim-devicons/DEVELOPER.md	/^##### Simple function call$/;"	T
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SingleByteCharSetProber	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^class SingleByteCharSetProber(CharSetProber):$/;"	c
Sk	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Sk = u'\\\\^`\\xa8\\xaf\\xb4\\xb8\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u/;"	v
SkipHeartbeat	plugged/vim-wakatime/packages/wakatime/exceptions.py	/^class SkipHeartbeat(Exception):$/;"	c
SlimLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^class SlimLexer(ExtendedRegexLexer):$/;"	c
Sm	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Sm = u'+<->|~\\xac\\xb1\\xd7\\xf7\\u03f6\\u0606-\\u0608\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u2/;"	v
SmaliLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^class SmaliLexer(RegexLexer):$/;"	c
SmalltalkLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^class SmalltalkLexer(RegexLexer):$/;"	c
SmartyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class SmartyLexer(RegexLexer):$/;"	c
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
Snippet engines supporting vim-snippets	plugged/vim-snippets/README.md	/^Snippet engines supporting vim-snippets$/;"	s
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^class SnippetDefinition(object):$/;"	c
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^class SnippetDictionary(object):$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix2($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix3($/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^class SnippetSource(object):$/;"	c
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Snippets	plugged/php.vim/README.md	/^#### Snippets$/;"	t
SnobolLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^class SnobolLexer(RegexLexer):$/;"	c
SnowballLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class SnowballLexer(ExtendedRegexLexer):$/;"	c
So	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^So = u'\\xa6\\xa9\\xae\\xb0\\u0482\\u060e-\\u060f\\u06de\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0/;"	v
SocketError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^from socket import timeout, error as SocketError$/;"	x
SocketError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^from socket import error as SocketError$/;"	x
SocketTimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketTimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketTimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^from socket import error as SocketError, timeout as SocketTimeout$/;"	x
SocketTimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^from socket import timeout as SocketTimeout$/;"	x
Source	plugged/nvim-miniyank/rplugin/python3/denite/source/miniyank.py	/^class Source(Base):$/;"	c
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
SourcePawnLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^class SourcePawnLexer(RegexLexer):$/;"	c
SourcesListLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^class SourcesListLexer(RegexLexer):$/;"	c
SparqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^class SparqlLexer(RegexLexer):$/;"	c
Spirit of this plugin	plugged/lightline.vim/README.md	/^## Spirit of this plugin$/;"	s
SqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class SqlLexer(RegexLexer):$/;"	c
SqliteConsoleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class SqliteConsoleLexer(Lexer):$/;"	c
SquidConfLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class SquidConfLexer(RegexLexer):$/;"	c
SspLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class SspLexer(DelegatingLexer):$/;"	c
StanLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^class StanLexer(RegexLexer):$/;"	c
Standard	plugged/papercolor-theme/DESIGN.md	/^## Standard$/;"	s
StataLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^class StataLexer(RegexLexer):$/;"	c
StataStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/stata.py	/^class StataStyle(Style):$/;"	c
StaticTzInfo	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^class StaticTzInfo(BaseTzInfo):$/;"	c
Status line	plugged/vim-devicons/DEVELOPER.md	/^##### Status line$/;"	T
StoreWithoutQuotes	plugged/vim-wakatime/packages/wakatime/arguments.py	/^class StoreWithoutQuotes(argparse.Action):$/;"	c
StreamConsumedError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class StreamConsumedError(RequestException, TypeError):$/;"	c
StreamReader	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^class StreamReader(Codec, codecs.StreamReader):$/;"	c
StreamWriter	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^class StreamWriter(Codec, codecs.StreamWriter):$/;"	c
String	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^String = Literal.String$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    StringIO = StringIO.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    StringIO = BytesIO = StringIO.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    StringIO = io.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    import cStringIO as StringIO$/;"	I
StringIO	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    StringIO = BytesIO = StringIO.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    StringIO = io.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    StringIO = BytesIO = StringIO.StringIO$/;"	v
StringIO	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    StringIO = io.StringIO$/;"	v
StudioClasses	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    StudioClasses = ('action cell', 'alert reply', 'application', 'box',$/;"	v	class:AppleScriptLexer
StudioCommands	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    StudioCommands = ('animate', 'append', 'call method', 'center',$/;"	v	class:AppleScriptLexer
StudioEvents	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    StudioEvents = ('accept outline drop', 'accept table drop', 'action',$/;"	v	class:AppleScriptLexer
StudioProperties	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    StudioProperties = ('accepts arrow key', 'action method', 'active',$/;"	v	class:AppleScriptLexer
Style	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^class Style(object):$/;"	c
StyleMeta	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^class StyleMeta(type):$/;"	c
SubjectAltNameWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class SubjectAltNameWarning(SecurityWarning):$/;"	c
Subversion	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^class Subversion(BaseProject):$/;"	c
Summary	plugged/vim-buffergator/README.md	/^Summary$/;"	c
SuperColliderLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^class SuperColliderLexer(RegexLexer):$/;"	c
SvgFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^class SvgFormatter(Formatter):$/;"	c
SwiftLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^class SwiftLexer(RegexLexer):$/;"	c
SwiftParser	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^class SwiftParser(TokenParser):$/;"	c
SwigLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class SwigLexer(CppLexer):$/;"	c
SynFold	plugged/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	plugged/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	plugged/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	plugged/php.vim/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
Syntax	plugged/nord-vim/CHANGELOG.md	/^### Syntax$/;"	S
Syntax	plugged/nord-vim/CHANGELOG.md	/^#### Syntax$/;"	t
Syntax Highlighting Plugins Target	plugged/papercolor-theme/README.md	/^## Syntax Highlighting Plugins Target$/;"	s
SystemTimeWarning	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class SystemTimeWarning(SecurityWarning):$/;"	c
SystemVerilogLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^class SystemVerilogLexer(RegexLexer):$/;"	c
T	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> T :call far#change_exclude_all(-1)<cr>$/;"	m
T	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> T           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
T	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> T           :call b:buffergator_catalog_viewer.visit_targe/;"	m
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TAPLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^class TAPLexer(RegexLexer):$/;"	c
TAR	plugged/javascript-libraries-syntax.vim/Makefile	/^TAR=tar czvf$/;"	m
TC_KW_NAME	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^TC_KW_NAME = Token.Generic.Subheading$/;"	v
TComment	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#complete#Args TComment$/;"	c
TCommentAs	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -complete=customlist,tcomment#complete#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#complete#Args TCommentBlock$/;"	c
TCommentInline	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#complete#Args TCommentInline$/;"	c
TCommentMaybeInline	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#complete#Args TCommentMaybeInl/;"	c
TCommentRight	plugged/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#complete#Args TCommentRight$/;"	c
TERMINAL_COLORS	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^TERMINAL_COLORS = {$/;"	v
TERMINATORS	plugged/ale/test/script/block-padding-checker	/^TERMINATORS = set(['return', 'throw'])$/;"	v
TESTCASE_AFTER	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^TESTCASE_AFTER = u'''\\$/;"	v
TESTCASE_BEFORE	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^TESTCASE_BEFORE = u'''\\$/;"	v
TIS620CharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langthaimodel.py	/^TIS620CharToOrderMap = ($/;"	v
TIS620ThaiModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langthaimodel.py	/^TIS620ThaiModel = {$/;"	v
TLS_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_AES_128_GCM_SHA256 = 0x1301$/;"	v	class:SecurityConst
TLS_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_AES_256_GCM_SHA384 = 0x1302$/;"	v	class:SecurityConst
TLS_CHACHA20_POLY1305_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_CHACHA20_POLY1305_SHA256 = 0x1303$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_128_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_128_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_256_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_256_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A$/;"	v	class:SecurityConst
TLS_DHE_DSS_WITH_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_128_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_256_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B$/;"	v	class:SecurityConst
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024$/;"	v	class:SecurityConst
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028$/;"	v	class:SecurityConst
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_128_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_128_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_128_GCM_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_256_CBC_SHA	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_256_CBC_SHA256	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D$/;"	v	class:SecurityConst
TLS_RSA_WITH_AES_256_GCM_SHA384	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D$/;"	v	class:SecurityConst
TURBO_PASCAL_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    TURBO_PASCAL_KEYWORDS = ($/;"	v	class:DelphiLexer
TURQUOISE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^TURQUOISE = '#318495'$/;"	v
TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stan_builtins.py	/^TYPES = ($/;"	v
TYPES	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^TYPES = ($/;"	v
TabSize2	config/05.functions.vim	/^function TabSize2()$/;"	f
TabSize4	config/05.functions.vim	/^function TabSize4()$/;"	f
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult($/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite($/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
Table Of Contents	plugged/lightline-ale/README.md	/^## Table Of Contents$/;"	s
Table of Contents	plugged/ale/README.md	/^## Table of Contents$/;"	s
Table of contents	plugged/coc.nvim/Readme.md	/^## Table of contents$/;"	s
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult($/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
Tads3Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^class Tads3Lexer(RegexLexer):$/;"	c
TangoStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/tango.py	/^class TangoStyle(Style):$/;"	c
TargetInfo	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^class TargetInfo(object):$/;"	c
Tasks	plugged/nord-vim/CHANGELOG.md	/^## Tasks$/;"	s
TasmLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^class TasmLexer(RegexLexer):$/;"	c
TclLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^class TclLexer(RegexLexer):$/;"	c
TcshLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class TcshLexer(RegexLexer):$/;"	c
TcshSessionLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^class TcshSessionLexer(ShellSessionBaseLexer):$/;"	c
TeaLangLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class TeaLangLexer(RegexLexer):$/;"	c
TeaTemplateLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class TeaTemplateLexer(DelegatingLexer):$/;"	c
TeaTemplateRootLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class TeaTemplateRootLexer(RegexLexer):$/;"	c
TearDown	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager(object):$/;"	c
TemplatedKeywordCall	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class TemplatedKeywordCall(Tokenizer):$/;"	c
TermcapLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class TermcapLexer(RegexLexer):$/;"	c
Terminal256Formatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^class Terminal256Formatter(Formatter):$/;"	c
TerminalFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^class TerminalFormatter(Formatter):$/;"	c
TerminalTrueColorFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^class TerminalTrueColorFormatter(Terminal256Formatter):$/;"	c
TerminfoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class TerminfoLexer(RegexLexer):$/;"	c
TerraformLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^class TerraformLexer(RegexLexer):$/;"	c
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCaseSetting	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class TestCaseSetting(Setting):$/;"	c
TestCaseTable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class TestCaseTable(_Table):$/;"	c
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
Test_add_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_edit_file_with_same_name_as_a_branch	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_encoding	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_leading_dash	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_follow_symlink	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hunk_outside_noop	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_inner_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_remove_first_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_undo_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
TestcaseFormatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^class TestcaseFormatter(Formatter):$/;"	c
Testing	plugged/ultisnips/CONTRIBUTING.md	/^## Testing$/;"	s
Testing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s
TexLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^class TexLexer(RegexLexer):$/;"	c
Text	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Text = Token.Text$/;"	v
TextLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^class TextLexer(Lexer):$/;"	c
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
ThaiLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langthaimodel.py	/^ThaiLangModel = ($/;"	v
The NERDTree	plugged/nerdtree/README.markdown	/^The NERDTree$/;"	c
The Plugin	plugged/ack.vim/README.md	/^### The Plugin$/;"	S
Theme Options	plugged/papercolor-theme/README.md	/^### Theme Options$/;"	S
Things to consider when contributing	plugged/vim-snippets/README.md	/^Things to consider when contributing$/;"	s
Things to keep in mind	plugged/vim-devicons/CONTRIBUTING.md	/^## Things to keep in mind$/;"	s
This function will clean up first placeholder when this is empty.	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# This function will clean up first placeholder when this is empty.$/;"	c
This function will jump to next placeholder when first is empty.	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# This function will jump to next placeholder when first is empty.$/;"	c
ThriftLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class ThriftLexer(RegexLexer):$/;"	c
Throttling of big unnamed deletes	plugged/nvim-miniyank/README.md	/^# Throttling of big unnamed deletes$/;"	c
Timeout	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class Timeout(RequestException):$/;"	c
Timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^class Timeout(object):$/;"	c
TimeoutError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class TimeoutError(HTTPError):$/;"	c
TimeoutSauce	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^from urllib3.util import Timeout as TimeoutSauce$/;"	x
TimeoutStateError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class TimeoutStateError(HTTPError):$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/commentmode.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/cursor.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/syntax.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/textobject.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/type.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
Tlibtrace	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^    command! -nargs=+ -bang Tlibtrace :$/;"	c
ToASCII	plugged/vim-wakatime/packages/wakatime/packages/idna/compat.py	/^def ToASCII(label):$/;"	f
ToUnicode	plugged/vim-wakatime/packages/wakatime/packages/idna/compat.py	/^def ToUnicode(label):$/;"	f
Todo	plugged/javascript-libraries-syntax.vim/README.md	/^Todo$/;"	s
TodotxtLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^class TodotxtLexer(RegexLexer):$/;"	c
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class Token(object):$/;"	c
Token	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Token = _TokenType()$/;"	v
TokenMergeFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class TokenMergeFilter(Filter):$/;"	c
TokenParser	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^class TokenParser(object):$/;"	c
Tokenizer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class Tokenizer(object):$/;"	c
TooManyRedirects	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class TooManyRedirects(RequestException):$/;"	c
TracStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/trac.py	/^class TracStyle(Style):$/;"	c
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
TransactSqlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class TransactSqlLexer(RegexLexer):$/;"	c
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR($/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR($/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult($/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TreetopBaseLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class TreetopBaseLexer(RegexLexer):$/;"	c
TreetopLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^class TreetopLexer(DelegatingLexer):$/;"	c
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
Troubleshooting	plugged/far.vim/README.md	/^## Troubleshooting$/;"	s
Troubleshooting	plugged/vim-devicons/README.md	/^Troubleshooting$/;"	s
Troubleshooting	plugged/vim-wakatime/README.md	/^Troubleshooting$/;"	s
TurkishLangModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langturkishmodel.py	/^TurkishLangModel = ($/;"	v
TurtleLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^class TurtleLexer(RegexLexer):$/;"	c
TwigHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class TwigHtmlLexer(DelegatingLexer):$/;"	c
TwigLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class TwigLexer(RegexLexer):$/;"	c
TypeScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^class TypeScriptLexer(RegexLexer):$/;"	c
TypeScriptParser	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^class TypeScriptParser(JavascriptParser):$/;"	c
TypoScriptCssDataLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^class TypoScriptCssDataLexer(RegexLexer):$/;"	c
TypoScriptHtmlDataLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^class TypoScriptHtmlDataLexer(RegexLexer):$/;"	c
TypoScriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^class TypoScriptLexer(RegexLexer):$/;"	c
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> U :<C-U>echoerr 'Changed to X'<CR>$/;"	m
U	plugged/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
U32	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^class U32:$/;"	c
UCS2BE_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2BE_CHAR_LEN_TABLE = (2, 2, 2, 0, 2, 2)$/;"	v
UCS2BE_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2BE_CLS = ($/;"	v
UCS2BE_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2BE_SM_MODEL = {'class_table': UCS2BE_CLS,$/;"	v
UCS2BE_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2BE_ST  = ($/;"	v
UCS2LE_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2LE_CHAR_LEN_TABLE = (2, 2, 2, 2, 2, 2)$/;"	v
UCS2LE_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2LE_CLS = ($/;"	v
UCS2LE_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2LE_SM_MODEL = {'class_table': UCS2LE_CLS,$/;"	v
UCS2LE_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UCS2LE_ST = ($/;"	v
UDF	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^UDF = 0  # undefined$/;"	v
UI	plugged/nord-vim/CHANGELOG.md	/^### UI$/;"	S
UI	plugged/nord-vim/CHANGELOG.md	/^#### UI$/;"	t
UI Plugins	plugged/nord-vim/README.md	/^### UI Plugins$/;"	S
UNDEFINED	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    UNDEFINED = 255$/;"	v	class:CharacterCategory
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UNKNOWN_ERROR	plugged/vim-wakatime/packages/wakatime/constants.py	/^UNKNOWN_ERROR = 105$/;"	v
UNLIKELY	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    UNLIKELY = 1$/;"	v	class:SequenceLikelihood
UNRESERVED_SET	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^UNRESERVED_SET = frozenset($/;"	v
UNTRUSTED_SPN_SOURCE	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/constants.py	/^    UNTRUSTED_SPN_SOURCE        = 0x4$/;"	v	class:AvFlags
UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define UNUSED /;"	d	file:
UNUSED	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define UNUSED$/;"	d	file:
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
URLRequired	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class URLRequired(RequestException):$/;"	c
USAGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^USAGE = """\\$/;"	v
USTimeZone	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^class USTimeZone(tzinfo):$/;"	c
UTC	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^UTC = utc = UTC()  # UTC is a singleton$/;"	v
UTC	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^class UTC(datetime.tzinfo):$/;"	c
UTF8Prober	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^class UTF8Prober(CharSetProber):$/;"	c
UTF8_CHAR_LEN_TABLE	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UTF8_CHAR_LEN_TABLE = (0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6)$/;"	v
UTF8_CLS	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UTF8_CLS = ($/;"	v
UTF8_SM_MODEL	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UTF8_SM_MODEL = {'class_table': UTF8_CLS,$/;"	v
UTF8_ST	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcssm.py	/^UTF8_ST = ($/;"	v
UltiSnips	plugged/ultisnips/README.md	/^UltiSnips$/;"	c
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes)$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, prior/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...)$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved()$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...)$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet()$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump()$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos)$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards()$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards()$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer()$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode()$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets()$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets()$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...)$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange()$/;"	f
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys()$/;"	f
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
Uncenter	plugged/numbers.vim/plugin/numbers.vim	/^function! Uncenter()$/;"	f
UnclosingTextIOWrapper	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    class UnclosingTextIOWrapper(TextIOWrapper):$/;"	c
Underline Support	plugged/nord-vim/README.md	/^### Underline Support$/;"	S
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
Uniform Status Lines	plugged/nord-vim/README.md	/^### Uniform Status Lines$/;"	S
Uniform `diff` Background	plugged/nord-vim/README.md	/^### Uniform `diff` Background$/;"	S
Uninstalling	plugged/vim-wakatime/README.md	/^Uninstalling$/;"	s
UniversalDetector	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^class UniversalDetector(object):$/;"	c
UnknownParser	plugged/vim-wakatime/packages/wakatime/dependencies/unknown.py	/^class UnknownParser(TokenParser):$/;"	c
UnknownTable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class UnknownTable(_Table):$/;"	c
UnknownTimeZoneError	plugged/vim-wakatime/packages/wakatime/packages/pytz/exceptions.py	/^class UnknownTimeZoneError(KeyError):$/;"	c
UnknownVariable	plugged/ultisnips/utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UnrewindableBodyError	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^class UnrewindableBodyError(RequestException):$/;"	c
UnrewindableBodyError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^class UnrewindableBodyError(HTTPError):$/;"	c
UnsupportedVariableExpression	plugged/ultisnips/utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
UnverifiedHTTPSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    UnverifiedHTTPSConnection = HTTPSConnection$/;"	v
Update `config.yml`	plugged/vim-vue/.circleci/README.md	/^## Update `config.yml`$/;"	s
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
UrbiscriptLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^class UrbiscriptLexer(ExtendedRegexLexer):$/;"	c
Url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^class Url(namedtuple('Url', url_attrs)):$/;"	c
Usage	plugged/ack.vim/README.md	/^## Usage$/;"	s
Usage	plugged/far.vim/README.md	/^## Usage$/;"	s
Usage	plugged/numbers.vim/README.md	/^Usage$/;"	s
Usage	plugged/nvim-miniyank/README.md	/^# Usage$/;"	c
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
User-config Options	plugged/papercolor-theme/README.md	/^## User-config Options$/;"	s
Using icons as indicators	plugged/lightline-ale/README.md	/^### Using icons as indicators$/;"	S
VADER_OUTPUT_FILE	plugged/ale/run-tests.bat	/^set VADER_OUTPUT_FILE=%~dp0\\vader_output$/;"	v
VARIABLE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^VARIABLE = Token.Name.Variable$/;"	v
VARNAME	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    VARNAME = u'[0-9' + PN_CHARS_U_GRP + '][' + PN_CHARS_U_GRP + \\$/;"	v	class:SparqlLexer
VCLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^class VCLLexer(RegexLexer):$/;"	c
VCLSnippetLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^class VCLSnippetLexer(VCLLexer):$/;"	c
VCTreeStatusLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^class VCTreeStatusLexer(RegexLexer):$/;"	c
VERSION	plugged/javascript-libraries-syntax.vim/Makefile	/^VERSION=0.1$/;"	m
VERSION	plugged/javascript-libraries-syntax.vim/config.mk	/^VERSION=0.6$/;"	m
VERSION	plugged/vim-wakatime/packages/wakatime/packages/chardet/version.py	/^VERSION = __version__.split('.')$/;"	v
VERSION	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^VERSION = '2017.2'  # Switching to pip compatible version numbering.$/;"	v
VGLLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^class VGLLexer(RegexLexer):$/;"	c
VIMRUNTIME	plugged/javascript-libraries-syntax.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
VISUAL_HEBREW_NAME	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    VISUAL_HEBREW_NAME = "ISO-8859-8"$/;"	v	class:HebrewProber
ValaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^class ValaLexer(RegexLexer):$/;"	c
Variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class Variable(Tokenizer):$/;"	c
VariableSplitter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class VariableSplitter:$/;"	c
VariableTable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class VariableTable(_Table):$/;"	c
VariableTokenizer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class VariableTokenizer(object):$/;"	c
VbNetAspxLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class VbNetAspxLexer(DelegatingLexer):$/;"	c
VbNetLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^class VbNetLexer(RegexLexer):$/;"	c
VelocityHtmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class VelocityHtmlLexer(DelegatingLexer):$/;"	c
VelocityLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class VelocityLexer(RegexLexer):$/;"	c
VelocityXmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class VelocityXmlLexer(DelegatingLexer):$/;"	c
Vendor Snippets	plugged/vim-snippets/README.md	/^Vendor Snippets$/;"	s
VerifiedHTTPSConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^class VerifiedHTTPSConnection(HTTPSConnection):$/;"	c
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
VerilogLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^class VerilogLexer(RegexLexer):$/;"	c
Version 0.1	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.1$/;"	S
Version 0.2	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.2$/;"	S
Version 0.3	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3$/;"	S
Version 0.3.1	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.1$/;"	S
Version 0.3.2	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.2$/;"	S
Version 0.3.3	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.3$/;"	S
Version 0.3.4	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.4$/;"	S
Version 0.3.5	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.5$/;"	S
Version 0.3.6	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.3.6$/;"	S
Version 0.4	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.4$/;"	S
Version 0.5	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.5$/;"	S
Version 0.6	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.6$/;"	S
Version 0.7	plugged/javascript-libraries-syntax.vim/README.md	/^### Version 0.7$/;"	S
Versions / dialects / ..	plugged/vim-snippets/README.md	/^Versions \/ dialects \/ ..$/;"	c
Vertical bars	plugged/indentLine/README.md	/^### Vertical bars$/;"	S
VhdlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^class VhdlLexer(RegexLexer):$/;"	c
Via plugin/runtimepath manager	plugged/nord-vim/README.md	/^#### Via plugin\/runtimepath manager$/;"	t
Vim 7.4	plugged/numbers.vim/README.md	/^Vim 7.4$/;"	s
Vim 8 on Unix	plugged/ale/README.md	/^#### Vim 8 on Unix$/;"	t
Vim 8 on Windows	plugged/ale/README.md	/^#### Vim 8 on Windows$/;"	t
Vim syntax highlighting extras	plugged/vim-syntax-extra/README.md	/^Vim syntax highlighting extras$/;"	c
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(_vim.VimBuffer):$/;"	c
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^class VimLexer(RegexLexer):$/;"	c
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState(object):$/;"	c
VimStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vim.py	/^class VimStyle(Style):$/;"	c
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
Vimrc Settings:	plugged/vim-wakatime/README.md	/^#### Vimrc Settings:$/;"	t
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
VisibleWhitespaceFilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^class VisibleWhitespaceFilter(Filter):$/;"	c
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver(object):$/;"	c
VisualStudioStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vs.py	/^class VisualStudioStyle(Style):$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
Vundle	plugged/ack.vim/README.md	/^#### Vundle$/;"	t
WDiffLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^class WDiffLexer(RegexLexer):$/;"	c
WGET_OPT	plugged/javascript-libraries-syntax.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
WHITE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^WHITE = '#ffffff'$/;"	v
WHITESPACE	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^WHITESPACE = re.compile(r'[ \\t\\n\\r]*', FLAGS)$/;"	v
WHITESPACE_AFTER_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_AFTER_SET = END_BLOCKS$/;"	v
WHITESPACE_BEFORE_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_BEFORE_SET = START_BLOCKS | TERMINATORS$/;"	v
WHITESPACE_FORBIDDEN_AFTER_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_FORBIDDEN_AFTER_SET = START_BLOCKS | MIDDLE_BLOCKS$/;"	v
WHITESPACE_FORBIDDEN_BEFORE_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_FORBIDDEN_BEFORE_SET = END_BLOCKS | MIDDLE_BLOCKS$/;"	v
WHITESPACE_STR	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^WHITESPACE_STR = ' \\t\\n\\r'$/;"	v
WIN1255_CHAR_TO_ORDER_MAP	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhebrewmodel.py	/^WIN1255_CHAR_TO_ORDER_MAP = ($/;"	v
WINDOWS_DRIVE_PATTERN	plugged/vim-wakatime/packages/wakatime/utils.py	/^WINDOWS_DRIVE_PATTERN = re.compile(r'^[a-z]:\/')$/;"	v
WINDOWS_NETWORK_MOUNT_PATTERN	plugged/vim-wakatime/packages/wakatime/utils.py	/^WINDOWS_NETWORK_MOUNT_PATTERN = re.compile(r'^\\\\{2}[a-z]+', re.IGNORECASE)$/;"	v
WIN_BYTE_DETECTOR	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    WIN_BYTE_DETECTOR = re.compile(b'[\\x80-\\x9F]')$/;"	v	class:UniversalDetector
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ['+', '^', '%', '~', '[', ']', '<', '>', '(', ')']$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
Wakatime	plugged/vim-wakatime/plugin/wakatime.vim	/^    augroup Wakatime$/;"	a
Want to buy me a coffee?	plugged/vim-blade/README.md	/^Want to buy me a coffee?$/;"	s
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
What are the relevant tickets (if any)?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What are the relevant tickets (if any)?$/;"	t
What can you do with UltiSnips?	plugged/ultisnips/README.md	/^What can you do with UltiSnips?$/;"	s
What does this Pull Request (PR) do?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What does this Pull Request (PR) do?$/;"	t
What went wrong	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## What went wrong$/;"	s
What's the difference from ag.vim?	plugged/ack.vim/README.md	/^#### What's the difference from ag.vim?$/;"	t
What?	plugged/vim-gutentags/README.md	/^## What?$/;"	s
Whats	plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Whats<\/h2>$/;"	i
Where is Jade?	plugged/vim-vue/readme.md	/^### Where is Jade?$/;"	S
WhileyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^class WhileyLexer(RegexLexer):$/;"	c
Whitespace	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^Whitespace = Text.Whitespace$/;"	v
Why yet another clone of powerline?	plugged/lightline.vim/README.md	/^## Why yet another clone of powerline?$/;"	s
Why?	plugged/coc.nvim/Readme.md	/^## Why?$/;"	s
Why?	plugged/vim-gutentags/README.md	/^## Why?$/;"	s
Win1250HungarianModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhungarianmodel.py	/^Win1250HungarianModel = {$/;"	v
Win1251BulgarianModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langbulgarianmodel.py	/^Win1251BulgarianModel = {$/;"	v
Win1251CyrillicModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^Win1251CyrillicModel = {$/;"	v
Win1253GreekModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langgreekmodel.py	/^Win1253GreekModel = {$/;"	v
Win1255HebrewModel	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhebrewmodel.py	/^Win1255HebrewModel = {$/;"	v
WrappedSocket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^class WrappedSocket(object):$/;"	c
WrappedSocket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^class WrappedSocket(object):$/;"	c
WriteBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> X :call far#change_exclude_all(1)<cr>$/;"	m
X	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> X           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
X	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> X           :call b:buffergator_catalog_viewer.delete_targ/;"	m
X	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> X :<C-U>execute <SID>StageDelete(line('.'),v:count)<CR>$/;"	m
X	plugged/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> X :<C-U>execute <SID>StageDelete(line("'<"),line("'>")-line("'<")/;"	m
X	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        class X(object):$/;"	c
X	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        class X(object):$/;"	c
X10Lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^class X10Lexer(RegexLexer):$/;"	c
XQueryLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^class XQueryLexer(ExtendedRegexLexer):$/;"	c
XcodeStyle	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/xcode.py	/^class XcodeStyle(Style):$/;"	c
XmlDjangoLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class XmlDjangoLexer(DelegatingLexer):$/;"	c
XmlErbLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class XmlErbLexer(DelegatingLexer):$/;"	c
XmlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class XmlLexer(RegexLexer):$/;"	c
XmlPhpLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class XmlPhpLexer(DelegatingLexer):$/;"	c
XmlSmartyLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class XmlSmartyLexer(DelegatingLexer):$/;"	c
XorgLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^class XorgLexer(RegexLexer):$/;"	c
XsltLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^class XsltLexer(XmlLexer):$/;"	c
XtendLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^class XtendLexer(RegexLexer):$/;"	c
XtlangLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^class XtlangLexer(RegexLexer):$/;"	c
YELLOW	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^YELLOW = "#fec418"$/;"	v
YELLOW	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^YELLOW = "#fec418"$/;"	v
YamlJinjaLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^class YamlJinjaLexer(DelegatingLexer):$/;"	c
YamlLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^class YamlLexer(ExtendedRegexLexer):$/;"	c
YamlLexerContext	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^class YamlLexerContext(LexerContext):$/;"	c
ZERO	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^ZERO = datetime.timedelta(0)$/;"	v
ZERO_OR_MORE	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^ZERO_OR_MORE = '*'$/;"	v
ZephirLexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^class ZephirLexer(RegexLexer):$/;"	c
Zl	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Zl = u'\\u2028'$/;"	v
Zp	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Zp = u'\\u2029'$/;"	v
Zs	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^Zs = u' \\xa0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000'$/;"	v
[0xC0]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC0] = function () return nil end,$/;"	f
[0xC2]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC2] = function () return false end,$/;"	f
[0xC3]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC3] = function () return true end,$/;"	f
[0xC4]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC4] = function (c) return unpack_str(c, unpack_uint8(c)) end,    -- bin8$/;"	f
[0xC5]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC5] = function (c) return unpack_str(c, unpack_uint16(c)) end,   -- bin16$/;"	f
[0xC6]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC6] = function (c) return unpack_str(c, unpack_uint32(c)) end,   -- bin32$/;"	f
[0xC7]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC7] = function (c) return unpack_ext(c, unpack_uint8(c), unpack_int8(c)) end,$/;"	f
[0xC8]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC8] = function (c) return unpack_ext(c, unpack_uint16(c), unpack_int8(c)) end,$/;"	f
[0xC9]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xC9] = function (c) return unpack_ext(c, unpack_uint32(c), unpack_int8(c)) end,$/;"	f
[0xD4]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD4] = function (c) return unpack_ext(c, 1, unpack_int8(c)) end,$/;"	f
[0xD5]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD5] = function (c) return unpack_ext(c, 2, unpack_int8(c)) end,$/;"	f
[0xD6]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD6] = function (c) return unpack_ext(c, 4, unpack_int8(c)) end,$/;"	f
[0xD7]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD7] = function (c) return unpack_ext(c, 8, unpack_int8(c)) end,$/;"	f
[0xD8]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD8] = function (c) return unpack_ext(c, 16, unpack_int8(c)) end,$/;"	f
[0xD9]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xD9] = function (c) return unpack_str(c, unpack_uint8(c)) end,$/;"	f
[0xDA]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDA] = function (c) return unpack_str(c, unpack_uint16(c)) end,$/;"	f
[0xDB]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDB] = function (c) return unpack_str(c, unpack_uint32(c)) end,$/;"	f
[0xDC]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDC] = function (c) return unpack_array(c, unpack_uint16(c)) end,$/;"	f
[0xDD]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDD] = function (c) return unpack_array(c, unpack_uint32(c)) end,$/;"	f
[0xDE]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDE] = function (c) return unpack_map(c, unpack_uint16(c)) end,$/;"	f
[0xDF]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    [0xDF] = function (c) return unpack_map(c, unpack_uint32(c)) end,$/;"	f
[Code of Conduct](CODE_OF_CONDUCT.md)	plugged/vim-devicons/README.md	/^### [Code of Conduct](CODE_OF_CONDUCT.md)$/;"	S
[Contributing Guide](CONTRIBUTING.md)	plugged/vim-devicons/README.md	/^### [Contributing Guide](CONTRIBUTING.md)$/;"	S
[NERDCommenter](https://github.com/scrooloose/nerdcommenter)	plugged/vim-vue/readme.md	/^#### [NERDCommenter](https:\/\/github.com\/scrooloose\/nerdcommenter)$/;"	t
[NeoBundle](https://github.com/Shougo/neobundle.vim)	plugged/lightline.vim/README.md	/^### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S
[Pathogen](https://github.com/tpope/vim-pathogen)	plugged/lightline.vim/README.md	/^### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S
[Vundle](https://github.com/VundleVim/Vundle.vim)	plugged/lightline.vim/README.md	/^### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	S
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	plugged/vim-vue/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')</;"	m
[]	plugged/vim-vue/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW'/;"	m
[apt-vim](https://github.com/egalpin/apt-vim)	plugged/nerdtree/README.markdown	/^#### [apt-vim](https:\/\/github.com\/egalpin\/apt-vim)$/;"	t
[b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> [b :BuffergatorMruCyclePrev<CR>$/;"	m
[b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> [b :bp<CR>$/;"	m
[c	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> [c <Plug>GitGutterPrevHunk$/;"	m
[caw.vim](https://github.com/tyru/caw.vim)	plugged/vim-vue/readme.md	/^#### [caw.vim](https:\/\/github.com\/tyru\/caw.vim)$/;"	t
[pathogen.vim](https://github.com/tpope/vim-pathogen)	plugged/nerdtree/README.markdown	/^#### [pathogen.vim](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/far.vim/README.md	/^#### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/lightline.vim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S
]	plugged/nvim-miniyank/lua/MessagePack.lua	/^    packers['fixext' .. tostring(n)] = function (buffer, tag, data)$/;"	f
][	plugged/vim-vue/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	plugged/vim-vue/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<C/;"	m
]b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> ]b :BuffergatorMruCycleNext<CR>$/;"	m
]b	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> ]b :bn<CR>$/;"	m
]c	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> ]c <Plug>GitGutterNextHunk$/;"	m
^.+\\\\.tsx?$	plugged/coc.nvim/package.json	/^      "^.+\\\\.tsx?$": "ts-jest"$/;"	s	object:jest.transform
^[_a-zA-Z]+$	plugged/coc.nvim/data/schema.json	/^        "^[_a-zA-Z]+$": {$/;"	o	object:properties.languageserver.patternProperties
_	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^from gettext import gettext as _$/;"	x
_$	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	_$ = window.$;$/;"	v
_ADDRESS_COMMAND_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _ADDRESS_COMMAND_PATTERN = _c(r'^\\s*address\\s+command\\b')$/;"	v	class:RexxLexer
_ADDRESS_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _ADDRESS_PATTERN = _c(r'^\\s*address\\s+')$/;"	v	class:RexxLexer
_ActionsContainer	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _ActionsContainer(object):$/;"	c
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_AppendAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _AppendAction(Action):$/;"	c
_AppendConstAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _AppendConstAction(Action):$/;"	c
_ArgumentGroup	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _ArgumentGroup(_ActionsContainer):$/;"	c
_AttributeHolder	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _AttributeHolder(object):$/;"	c
_BUILTIN_LIB	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    _BUILTIN_LIB = ($/;"	v	class:IDLLexer
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_BaseSocket	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class _BaseSocket(socket.socket):$/;"	c
_CLEAN_HEADER_REGEX_BYTE	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^_CLEAN_HEADER_REGEX_BYTE = re.compile(b'^\\\\S[^\\\\r\\\\n]*$|^$')$/;"	v
_CLEAN_HEADER_REGEX_STR	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^_CLEAN_HEADER_REGEX_STR = re.compile(r'^\\S[^\\r\\n]*$|^$')$/;"	v
_CLS_CYAN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _CLS_CYAN =      '#287088'$/;"	v	class:LovelaceStyle
_COMMENT_LINE_REGEX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _COMMENT_LINE_REGEX = re.compile(r'^\\s*\\*')$/;"	v	class:EasytrieveLexer
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CONSTANTS	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^_CONSTANTS = {$/;"	v
_ChainMap	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^from .helpers import ChainMap as _ChainMap$/;"	x
_ChainMap	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^class _ChainMap(MutableMapping):$/;"	c
_ChoicesPseudoAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    class _ChoicesPseudoAction(Action):$/;"	c	class:_SubParsersAction
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_CountAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _CountAction(Action):$/;"	c
_CountryNameDict	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^class _CountryNameDict(LazyDict):$/;"	c
_CountryTimezoneDict	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^class _CountryTimezoneDict(LazyDict):$/;"	c
_DEFAULT_INTERPOLATION	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _DEFAULT_INTERPOLATION = BasicInterpolation()$/;"	v	class:ConfigParser
_DEFAULT_INTERPOLATION	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _DEFAULT_INTERPOLATION = Interpolation()$/;"	v	class:RawConfigParser
_DEFAULT_SELECTOR	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^_DEFAULT_SELECTOR = None$/;"	v
_DELIMITERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _DELIMITERS = r' \\'.,():\\n'$/;"	v	class:EasytrieveLexer
_DELIMITERS_OR_COMENT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _DELIMITERS_OR_COMENT = _DELIMITERS + '*'$/;"	v	class:EasytrieveLexer
_DELIMITER_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _DELIMITER_PATTERN = '[' + _DELIMITERS + ']'$/;"	v	class:EasytrieveLexer
_DELIMITER_PATTERN_CAPTURE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _DELIMITER_PATTERN_CAPTURE = '(' + _DELIMITER_PATTERN + ')'$/;"	v	class:EasytrieveLexer
_DISTRIBUTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = ('dbern', 'dbin', 'dcat', 'dnegbin', 'dpois',$/;"	v	class:BugsLexer
_DISTRIBUTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _DISTRIBUTIONS = tuple('[dpq]%s' % x for x in$/;"	v	class:JagsLexer
_DOC_ORANGE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _DOC_ORANGE =    '#b85820'$/;"	v	class:LovelaceStyle
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_DO_WHILE_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _DO_WHILE_PATTERN = _c(r'^\\s*do\\s+while\\b')$/;"	v	class:RexxLexer
_Default	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^_Default = object()$/;"	v
_Default	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^_Default = object()$/;"	v
_ELSE_DO_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _ELSE_DO_PATTERN = _c(r'\\belse\\s+do\\s*$')$/;"	v	class:RexxLexer
_ESCAPE_LIME	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _ESCAPE_LIME =   '#709030'$/;"	v	class:LovelaceStyle
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_EXCEPT_YELLOW	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _EXCEPT_YELLOW = '#908828'$/;"	v	class:LovelaceStyle
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FAILEDTELL	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/request.py	/^_FAILEDTELL = object()$/;"	v
_FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:BugsLexer
_FUNCTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _FUNCTIONS = ($/;"	v	class:JagsLexer
_FUN_BROWN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _FUN_BROWN =     '#785840'$/;"	v	class:LovelaceStyle
_FixedOffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^class _FixedOffset(datetime.tzinfo):$/;"	c
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_HTTPConnection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^from .packages.six.moves.http_client import HTTPConnection as _HTTPConnection$/;"	x
_HTTPError	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^from urllib3.exceptions import HTTPError as _HTTPError$/;"	x
_HelpAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _HelpAction(Action):$/;"	c
_IF_THEN_DO_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _IF_THEN_DO_PATTERN = _c(r'^\\s*if\\b.+\\bthen\\s+do\\s*$')$/;"	v	class:RexxLexer
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_INT	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    _INT = r'[0-9]+'$/;"	v	class:AntlrLexer
_JOB_HEADER_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _JOB_HEADER_PATTERN = re.compile(r'^\/\/[a-z#$@][a-z0-9#$@]{0,7}\\s+job(\\s+.*)?$',$/;"	v	class:JclLexer
_KEYCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _KEYCRE = re.compile(r"%\\(([^)]*)\\)s|.")$/;"	v	class:LegacyInterpolation
_KEYCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _KEYCRE = re.compile(r"%\\(([^)]+)\\)s")$/;"	v	class:BasicInterpolation
_KEYCRE	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _KEYCRE = re.compile(r"\\$\\{([^}]+)\\}")$/;"	v	class:ExtendedInterpolation
_KEYWORDS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _KEYWORDS = [$/;"	v	class:EasytrieveLexer
_KEYWORDS_FUTURE	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^_KEYWORDS_FUTURE = ($/;"	v
_KEYWORDS_ODBC	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^_KEYWORDS_ODBC = ($/;"	v
_KEYWORDS_SERVER	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_tsql_builtins.py	/^_KEYWORDS_SERVER = ($/;"	v
_KW_BLUE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _KW_BLUE =       '#2838b0'$/;"	v	class:LovelaceStyle
_LABEL_CYAN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _LABEL_CYAN =    '#289870'$/;"	v	class:LovelaceStyle
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_LazyDescr	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class _LazyDescr(object):$/;"	c
_LazyDescr	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class _LazyDescr(object):$/;"	c
_LazyModule	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class _LazyModule(types.ModuleType):$/;"	c
_LazyModule	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class _LazyModule(types.ModuleType):$/;"	c
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MACRO_HEADER_REGEX	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _MACRO_HEADER_REGEX = re.compile(r'^\\s*MACRO')$/;"	v	class:EasytrieveLexer
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase(object):$/;"	c
_MovedItems	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class _MovedItems(_LazyModule):$/;"	c
_MovedItems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class _MovedItems(_LazyModule):$/;"	c
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_MutuallyExclusiveGroup	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _MutuallyExclusiveGroup(_ArgumentGroup):$/;"	c
_NAME_GREEN	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _NAME_GREEN =    '#388038'$/;"	v	class:LovelaceStyle
_NON_DELIMITER_OR_COMMENT_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _NON_DELIMITER_OR_COMMENT_PATTERN = '[^' + _DELIMITERS_OR_COMENT + ']'$/;"	v	class:EasytrieveLexer
_NULL	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^_NULL = _byte_string('\\0')$/;"	v
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_NtlmMessageSignature1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^class _NtlmMessageSignature1(object):$/;"	c
_NtlmMessageSignature2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^class _NtlmMessageSignature2(object):$/;"	c
_Null	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^_Null = object()$/;"	v
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OPERATORS_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _OPERATORS_PATTERN = u'[.+\\\\-\/=\\\\[\\\\](){}<>;,&%¬]'$/;"	v	class:EasytrieveLexer
_OPT_NV_TMPL	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _OPT_NV_TMPL = r"""$/;"	v	class:RawConfigParser
_OPT_TMPL	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _OPT_TMPL = r"""$/;"	v	class:RawConfigParser
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_OTHER_DISTRIBUTIONS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _OTHER_DISTRIBUTIONS = ($/;"	v	class:JagsLexer
_OW_PURPLE	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _OW_PURPLE =     '#a848a8'$/;"	v	class:LovelaceStyle
_PARSE_ARG_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _PARSE_ARG_PATTERN = _c(r'^\\s*parse\\s+(upper\\s+)?(arg|value)\\b')$/;"	v	class:RexxLexer
_PEM_CERTS_RE	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^_PEM_CERTS_RE = re.compile($/;"	v
_PROCEDURE_PATTERN	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _PROCEDURE_PATTERN = _c(r'^\\s*([a-z_]\\w*)(\\s*)(:)(\\s*)(procedure)\\b')$/;"	v	class:RexxLexer
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple('_FrozenPlaceholder', ['current_text', 'start', 'end'])$/;"	v
_ProxyError	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^from urllib3.exceptions import ProxyError as _ProxyError$/;"	x
_PseudoMatch	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class _PseudoMatch(object):$/;"	c
_PyEncoderObject	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^typedef struct _PyEncoderObject {$/;"	s	file:
_PyScannerObject	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^typedef struct _PyScannerObject {$/;"	s	file:
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_RESERVED	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    _RESERVED = ($/;"	v	class:IDLLexer
_RULE_REF	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    _RULE_REF = r'[a-z]\\w*'$/;"	v	class:AntlrLexer
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SECT_TMPL	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    _SECT_TMPL = r"""$/;"	v	class:RawConfigParser
_SOCKS5_request	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _SOCKS5_request(self, conn, cmd, dst):$/;"	m	class:socksocket
_SSLError	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^from urllib3.exceptions import SSLError as _SSLError$/;"	x
_STRING_LITERAL	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    _STRING_LITERAL = r'\\'(?:\\\\\\\\|\\\\\\'|[^\\']*)\\''$/;"	v	class:AntlrLexer
_STR_RED	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    _STR_RED =       '#b83838'$/;"	v	class:LovelaceStyle
_SYSCALL_SENTINEL	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^_SYSCALL_SENTINEL = object()  # Sentinel in case a system call returns None.$/;"	v
_Section	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    class _Section(object):$/;"	c	class:HelpFormatter
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SelectorMapping	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^class _SelectorMapping(Mapping):$/;"	c
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SixMetaPathImporter	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^class _SixMetaPathImporter(object):$/;"	c
_SixMetaPathImporter	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^class _SixMetaPathImporter(object):$/;"	c
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^class _SnippetUtilCursor(object):$/;"	c
_StoreAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _StoreAction(Action):$/;"	c
_StoreConstAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _StoreConstAction(Action):$/;"	c
_StoreFalseAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _StoreFalseAction(_StoreConstAction):$/;"	c
_StoreTrueAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _StoreTrueAction(_StoreConstAction):$/;"	c
_SubParsersAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _SubParsersAction(Action):$/;"	c
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TALETTERS	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    _TALETTERS = u'[a-zA-Z_]|[\\u0b80-\\u0bff]'$/;"	v	class:EzhilLexer
_TOKEN_REF	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    _TOKEN_REF = r'[A-Z]\\w*'$/;"	v	class:AntlrLexer
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Table	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^class _Table(object):$/;"	c
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class _TextIterator(object):$/;"	c
_This	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class _This(object):$/;"	c
_TokenType	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^class _TokenType(tuple):$/;"	c
_UNESCAPE	plugged/ultisnips/utils/get_tm_snippets.py	/^_UNESCAPE = re.compile(ur'&\\w+?;', re.UNICODE)$/;"	v
_UNRECOGNIZED_ARGS_ATTR	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^_UNRECOGNIZED_ARGS_ATTR = '_unrecognized_args'$/;"	v
_UNSET	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^_UNSET = object()$/;"	v
_UTC	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def _UTC():$/;"	f
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VersionAction	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^class _VersionAction(Action):$/;"	c
_Vim slows down when using this plugin_ How can I fix that?	plugged/vim-vue/readme.md	/^### _Vim slows down when using this plugin_ How can I fix that?$/;"	S
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^_VisualContent = namedtuple('_VisualContent', ['mode', 'text'])$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__TEST__	plugged/coc.nvim/package.json	/^      "__TEST__": true$/;"	b	object:jest.globals
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__abs__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __abs__(self):$/;"	m	class:U32
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil
__add__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __add__(self, b):$/;"	m	class:U32
__all__	plugged/vim-wakatime/packages/wakatime/__init__.py	/^__all__ = ['main']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^__all__ = ["NoSectionError", "DuplicateOptionError", "DuplicateSectionError",$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/__init__.py	/^__all__ = ('ntlm', 'session_security')/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^__all__ = ['lex', 'format', 'highlight']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^__all__ = ['Formatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^__all__ = ['get_formatter_by_name', 'get_formatter_for_filename',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^__all__ = ['BBCodeFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^__all__ = ['HtmlFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^__all__ = ['ImageFormatter', 'GifImageFormatter', 'JpgImageFormatter',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^__all__ = ['IRCFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^__all__ = ['LatexFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^__all__ = ['NullFormatter', 'RawTokenFormatter', 'TestcaseFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^__all__ = ['RtfFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^__all__ = ['SvgFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^__all__ = ['TerminalFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^__all__ = ['Terminal256Formatter', 'TerminalTrueColorFormatter']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^__all__ = ['Lexer', 'RegexLexer', 'ExtendedRegexLexer', 'DelegatingLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^__all__ = ['get_lexer_by_name', 'get_lexer_for_filename', 'find_lexer_class',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^__all__ = ['ActionScriptLexer', 'ActionScript3Lexer', 'MxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/agile.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^__all__ = ['GAPLexer', 'MathematicaLexer', 'MuPADLexer', 'BCLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^__all__ = ['AmbientTalkLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^__all__ = ['AmplLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^__all__ = ['APLLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^__all__ = ['OdinLexer', 'CadlLexer', 'AdlLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^__all__ = ['GasLexer', 'ObjdumpLexer', 'DObjdumpLexer', 'CppObjdumpLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^__all__ = ['AutohotkeyLexer', 'AutoItLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^__all__ = ['BlitzBasicLexer', 'BlitzMaxLexer', 'MonkeyLexer', 'CbmBasicV2Lexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^__all__ = ['BibTeXLexer', 'BSTLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^__all__ = ['CobolLexer', 'CobolFreeformatLexer', 'ABAPLexer', 'OpenEdgeLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^__all__ = ['CLexer', 'CppLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^__all__ = ['PikeLexer', 'NesCLexer', 'ClayLexer', 'ECLexer', 'ValaLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^__all__ = ['CapnProtoLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^__all__ = ['ChapelLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^__all__ = ['CleanLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/compiled.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^__all__ = ['IniLexer', 'RegeditLexer', 'PropertiesLexer', 'KconfigLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^__all__ = ['VCTreeStatusLexer', 'PyPyLogLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^__all__ = ['CrystalLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^__all__ = ['CsoundScoreLexer', 'CsoundOrchestraLexer', 'CsoundDocumentLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^__all__ = ['CssLexer', 'SassLexer', 'ScssLexer', 'LessCssLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^__all__ = ['DLexer', 'CrocLexer', 'MiniDLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^__all__ = ['SmaliLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^__all__ = ['YamlLexer', 'JsonLexer', 'JsonBareObjectLexer', 'JsonLdLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^__all__ = ['DiffLexer', 'DarcsPatchLexer', 'WDiffLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^__all__ = ['CSharpLexer', 'NemerleLexer', 'BooLexer', 'VbNetLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^__all__ = ['ProtoBufLexer', 'BroLexer', 'PuppetLexer', 'RslLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^__all__ = ['DylanLexer', 'DylanConsoleLexer', 'DylanLidLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^__all__ = ['ECLLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^__all__ = ['EiffelLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^__all__ = ['ElmLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^__all__ = ['ErlangLexer', 'ErlangShellLexer', 'ElixirConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^__all__ = ['BrainfuckLexer', 'BefungeLexer', 'RedcodeLexer', 'CAmkESLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^__all__ = ['EzhilLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^__all__ = ['FactorLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^__all__ = ['FantomLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^__all__ = ['FelixLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^__all__ = ['ForthLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^__all__ = ['FortranLexer', 'FortranFixedLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^__all__ = ['FoxProLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/functional.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^__all__ = ['GoLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^__all__ = ['BnfLexer', 'AbnfLexer', 'JsgfLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^__all__ = ['CypherLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^__all__ = ['GLShaderLexer', 'PostScriptLexer', 'AsymptoteLexer', 'GnuplotLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^__all__ = ['HaskellLexer', 'IdrisLexer', 'AgdaLexer', 'CryptolLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^__all__ = ['HaxeLexer', 'HxmlLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^__all__ = ['VerilogLexer', 'SystemVerilogLexer', 'VhdlLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^__all__ = ['HexdumpLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^__all__ = ['HtmlLexer', 'DtdLexer', 'XmlLexer', 'XsltLexer', 'HamlLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^__all__ = ['IDLLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^__all__ = ['IgorLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^__all__ = ['LimboLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^__all__ = ['NSISLexer', 'RPMSpecLexer', 'SourcesListLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^__all__ = ['Inform6Lexer', 'Inform6TemplateLexer', 'Inform7Lexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^__all__ = ['IoLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^__all__ = ['JLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^__all__ = ['JavascriptLexer', 'KalLexer', 'LiveScriptLexer', 'DartLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^__all__ = ['JuliaLexer', 'JuliaConsoleLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^__all__ = ['JavaLexer', 'ScalaLexer', 'GosuLexer', 'GosuTemplateLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^__all__ = ['SchemeLexer', 'CommonLispLexer', 'HyLexer', 'RacketLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^__all__ = ['MakefileLexer', 'BaseMakefileLexer', 'CMakeLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^__all__ = ['BBCodeLexer', 'MoinWikiLexer', 'RstLexer', 'TexLexer', 'GroffLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/math.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^__all__ = ['MatlabLexer', 'MatlabSessionLexer', 'OctaveLexer', 'ScilabLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^__all__ = ['SMLLexer', 'OcamlLexer', 'OpaLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^__all__ = ['ModelicaLexer', 'BugsLexer', 'JagsLexer', 'StanLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^__all__ = ['Modula2Lexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^__all__ = ['MonteLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^__all__ = ['NCLLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^__all__ = ['NimrodLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^__all__ = ['NitLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^__all__ = ['NixLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^__all__ = ['ComponentPascalLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^__all__ = ['ObjectiveCLexer', 'ObjectiveCppLexer', 'LogosLexer', 'SwiftLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^__all__ = ['OocLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/other.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^__all__ = ['ParaSailLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^__all__ = ['RagelLexer', 'RagelEmbeddedLexer', 'RagelCLexer', 'RagelDLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^__all__ = ['DelphiLexer', 'AdaLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^__all__ = ['SourcePawnLexer', 'PawnLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^__all__ = ['PerlLexer', 'Perl6Lexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^__all__ = ['ZephirLexer', 'PhpLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^__all__ = ['PraatLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^__all__ = ['PrologLexer', 'LogtalkLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^__all__ = ['PythonLexer', 'PythonConsoleLexer', 'PythonTracebackLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^__all__ = ['QVToLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^__all__ = ['RConsoleLexer', 'SLexer', 'RdLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^__all__ = ['SparqlLexer', 'TurtleLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^__all__ = ['RebolLexer', 'RedLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^__all__ = ['ResourceLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^__all__ = ['RNCCompactLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^__all__ = ['RoboconfGraphLexer', 'RoboconfInstancesLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^__all__ = ['RobotFrameworkLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^__all__ = ['RubyLexer', 'RubyConsoleLexer', 'FancyLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^__all__ = ['RustLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^__all__ = ['SASLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^__all__ = ['LuaLexer', 'MoonScriptLexer', 'ChaiscriptLexer', 'LSLLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^__all__ = ['BashLexer', 'BashSessionLexer', 'TcshLexer', 'BatchLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^__all__ = ['SmalltalkLexer', 'NewspeakLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^__all__ = ['NuSMVLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^__all__ = ['SnobolLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^__all__ = ['TextLexer', 'RawTokenLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^__all__ = ['PostgresLexer', 'PlPgsqlLexer', 'PostgresConsoleLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^__all__ = ['StataLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^__all__ = ['SuperColliderLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^__all__ = ['TclLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^__all__ = ['HtmlPhpLexer', 'XmlPhpLexer', 'CssPhpLexer',$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^__all__ = ['GherkinLexer', 'TAPLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/text.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^__all__ = ['AwkLexer', 'VimLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^__all__ = ['CoqLexer', 'IsabelleLexer', 'LeanLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^__all__ = ['RtsLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^__all__ = ['TypoScriptLexer', 'TypoScriptCssDataLexer', 'TypoScriptHtmlDataLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^__all__ = ['UrbiscriptLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^__all__ = ['VCLLexer', 'VCLSnippetLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^__all__ = ['BoogieLexer', 'SilverLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/web.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^__all__ = ['DuelLexer', 'SlimLexer', 'XQueryLexer', 'QmlLexer', 'CirruLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^__all__ = ['WhileyLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^__all__ = ['X10Lexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^__all__ = ['XorgLexer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pygments/modeline.py	/^__all__ = ['get_filetype_from_buffer']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pytz/exceptions.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^__all__ = []$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/__init__.py	/^__all__ = ('HttpNtlmAuth',)$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^__all__ = [$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^__all__ = ['JSONDecoder']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^__all__ = ['make_scanner', 'JSONDecodeError']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^__all__ = ($/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^__all__ = ['RecentlyUsedContainer', 'HTTPHeaderDict']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^__all__ = ['inject_into_urllib3', 'extract_from_urllib3']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^__all__ = ['inject_into_urllib3', 'extract_from_urllib3']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/__init__.py	/^__all__ = ('ssl_match_hostname', )$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/__init__.py	/^__all__ = ('CertificateError', 'match_hostname')$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^__all__ = ['PoolManager', 'ProxyManager', 'proxy_from_url']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^__all__ = ['RequestMethods']$/;"	v
__all__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/__init__.py	/^__all__ = ($/;"	v
__and__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __and__(self, b):$/;"	m	class:U32
__anondf9dcc210108	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^typedef struct {$/;"	s	file:
__attrs__	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    __attrs__ = ['max_retries', 'config', '_pool_connections', '_pool_maxsize',$/;"	v	class:HTTPAdapter	file:
__attrs__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    __attrs__ = [$/;"	v	class:Response	file:
__attrs__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    __attrs__ = [$/;"	v	class:Session	file:
__author__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__author__ = 'Alan Hamlett'$/;"	v
__author__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__author__ = 'Kenneth Reitz'$/;"	v
__author__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^__author__ = 'Bob Ippolito <bob@redivi.com>'$/;"	v
__author__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^__author__ = "Benjamin Peterson <benjamin@python.org>"$/;"	v
__author__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^__author__ = 'Andrey Petrov (andrey.petrov@shazow.net)'$/;"	v
__author__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^__author__ = "Benjamin Peterson <benjamin@python.org>"$/;"	v
__author_email__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__author_email__ = 'alan@wakatime.com'$/;"	v
__author_email__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__author_email__ = 'me@kennethreitz.org'$/;"	v
__bool__	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def __bool__(self):$/;"	m	class:Heartbeat
__bool__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __bool__(self):$/;"	m	class:Response
__build__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__build__ = 0x021804$/;"	v
__cake__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__cake__ = u'\\u2728 \\U0001f370 \\u2728'$/;"	v
__call__	plugged/vim-wakatime/packages/wakatime/arguments.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:FileAction
__call__	plugged/vim-wakatime/packages/wakatime/arguments.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:StoreWithoutQuotes
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:Action
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_AppendConstAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_CountAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_HelpAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_StoreConstAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_SubParsersAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:_VersionAction
__call__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __call__(self, string):$/;"	m	class:FileType
__call__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __call__(cls, *args, **kwds):$/;"	m	class:RegexLexerMeta
__call__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __call__(self, iso3166_code):$/;"	m	class:_CountryTimezoneDict
__call__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:AuthBase
__call__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPBasicAuth
__call__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPDigestAuth
__call__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __call__(self, r):$/;"	m	class:HTTPProxyAuth
__call__	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^    def __call__(self, r):$/;"	m	class:HttpNtlmAuth
__chr__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __chr__(self):$/;"	m	class:U32
__cmp__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __cmp__(self, b):$/;"	m	class:U32
__contains__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __contains__(self, key):$/;"	m	class:Namespace
__contains__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __contains__(self, key):$/;"	m	class:RawConfigParser
__contains__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __contains__(self, key):$/;"	m	class:SectionProxy
__contains__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __contains__(self, key):$/;"	m	class:_ChainMap
__contains__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __contains__(self, val):$/;"	m	class:_TokenType
__contains__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __contains__(self, key):$/;"	m	class:LazyDict
__contains__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __contains__(self, name):$/;"	m	class:RequestsCookieJar
__contains__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __contains__(self, key):$/;"	m	class:HTTPHeaderDict
__copy__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    __copy__ = copy$/;"	v	class:_ChainMap	file:
__copy__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __copy__(self):$/;"	m	class:_TokenType
__copyright__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__copyright__ = 'Copyright 2017 Alan Hamlett'$/;"	v
__copyright__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__copyright__ = 'Copyright 2017 Kenneth Reitz'$/;"	v
__deepcopy__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __deepcopy__(self, memo):$/;"	m	class:_TokenType
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __delitem__(self, key):$/;"	m	class:ConverterMapping
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __delitem__(self, key):$/;"	m	class:RawConfigParser
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __delitem__(self, key):$/;"	m	class:SectionProxy
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __delitem__(self, key):$/;"	m	class:_ChainMap
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def __delitem__(self, key):$/;"	m	class:TargetInfo
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __delitem__(self, name):$/;"	m	class:RequestsCookieJar
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __delitem__(self, key):$/;"	m	class:CaseInsensitiveDict
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __delitem__(self, key):$/;"	m	class:HTTPHeaderDict
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __delitem__(self, key):$/;"	m	class:RecentlyUsedContainer
__delitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __delitem__(self, key, dict_delitem=dict.__delitem__):$/;"	m	class:OrderedDict
__description__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__description__ = 'Common interface to the WakaTime api.'$/;"	v
__description__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__description__ = 'Python HTTP for Humans.'$/;"	v
__dir__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __dir__(self):$/;"	m	class:Module_six_moves_urllib
__dir__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __dir__(self):$/;"	m	class:_LazyModule
__dir__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __dir__(self):$/;"	m	class:Module_six_moves_urllib
__dir__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __dir__(self):$/;"	m	class:_LazyModule
__dirname	plugged/coc.nvim/webpack.config.js	/^    __dirname: false$/;"	p	class:module.exports.node
__div__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __div__(self, b):$/;"	m	class:U32
__docformat__	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^__docformat__ = 'restructuredtext'$/;"	v
__enter__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __enter__(self):$/;"	m	class:Response
__enter__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def __enter__(self):$/;"	m	class:Session
__enter__	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^        def __enter__(self):$/;"	m	class:Popen
__enter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^        def __enter__(self):$/;"	m	class:RLock
__enter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __enter__(self):$/;"	m	class:ConnectionPool
__enter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def __enter__(self):$/;"	m	class:AppEngineManager
__enter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def __enter__(self):$/;"	m	class:PoolManager
__enter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __enter__(self):$/;"	m	class:BaseSelector
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position
__eq__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __eq__(self, other):$/;"	m	class:Namespace
__eq__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __eq__(self, other):$/;"	m	class:U32
__eq__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict
__eq__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __eq__(self, other):$/;"	m	class:HTTPBasicAuth
__eq__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __eq__(self, other):$/;"	m	class:HTTPDigestAuth
__eq__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __eq__(self, other):$/;"	m	class:CaseInsensitiveDict
__eq__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict
__eq__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __eq__(self, other):$/;"	m	class:HTTPHeaderDict
__eq__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict
__exit__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __exit__(self, *args):$/;"	m	class:Response
__exit__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def __exit__(self, *args):$/;"	m	class:Session
__exit__	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^        def __exit__(self, type, value, traceback):$/;"	m	class:Popen
__exit__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^        def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:RLock
__exit__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:ConnectionPool
__exit__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:AppEngineManager
__exit__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:PoolManager
__exit__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __exit__(self, *args):$/;"	m	class:BaseSelector
__external_lib__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^__external_lib__ = True  # to make sure the tests really test THIS lib,$/;"	v
__filename	plugged/coc.nvim/webpack.config.js	/^    __filename: false,$/;"	p	class:module.exports.node
__ge__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __ge__(self, other):$/;"	m	class:U32
__get__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __get__(self, obj, tp):$/;"	m	class:_LazyDescr
__get__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __get__(self, obj, tp):$/;"	m	class:_LazyDescr
__get_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __get_module(self, fullname):$/;"	m	class:_SixMetaPathImporter	file:
__get_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __get_module(self, fullname):$/;"	m	class:_SixMetaPathImporter	file:
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^    def __getattr__(self, name):$/;"	m	class:_automodule
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __getattr__(self, val):$/;"	m	class:_TokenType
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __getattr__(self, attr):$/;"	m	class:MovedModule
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __getattr__(self, attr):$/;"	m	class:MovedModule
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def __getattr__(self, name):$/;"	m	class:DeflateDecoder
__getattr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def __getattr__(self, name):$/;"	m	class:GzipDecoder
__getitem__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs
__getitem__	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def __getitem__(self, key):$/;"	m	class:Heartbeat
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __getitem__(self, key):$/;"	m	class:ConverterMapping
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __getitem__(self, key):$/;"	m	class:RawConfigParser
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __getitem__(self, key):$/;"	m	class:SectionProxy
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __getitem__(self, key):$/;"	m	class:_ChainMap
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def __getitem__(self, key):$/;"	m	class:TargetInfo
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __getitem__(self, key):$/;"	m	class:LazyDict
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __getitem__(self, name):$/;"	m	class:RequestsCookieJar
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __getitem__(self, key):$/;"	m	class:CaseInsensitiveDict
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __getitem__(self, key):$/;"	m	class:LookupDict
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __getitem__(self, key):$/;"	m	class:HTTPHeaderDict
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __getitem__(self, key):$/;"	m	class:RecentlyUsedContainer
__getitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __getitem__(self, fileobj):$/;"	m	class:_SelectorMapping
__getslice__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __getslice__(self, i, j):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy
__getstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def __getstate__(self):$/;"	m	class:HTTPAdapter
__getstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __getstate__(self):$/;"	m	class:RequestsCookieJar
__getstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __getstate__(self):$/;"	m	class:Response
__getstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def __getstate__(self):$/;"	m	class:Session
__gt__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __gt__(self, other):$/;"	m	class:U32
__hash__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    __hash__ = None$/;"	v	class:Namespace	file:
__index	plugged/nvim-miniyank/lua/MessagePack.lua	/^    __index = function (t, k)$/;"	f
__init__	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:FarPlugin
__init__	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:NeoVimLoggerHandler
__init__	plugged/nvim-miniyank/rplugin/python3/denite/kind/miniyank.py	/^    def __init__(self, vim):$/;"	m	class:Kind
__init__	plugged/nvim-miniyank/rplugin/python3/denite/source/miniyank.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, priority, trigger, value, description,$/;"	m	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token_or_start, end=None,$/;"	m	class:TextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, snippet, parent, initial_text,$/;"	m	class:SnippetInstance
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=''):$/;"	m	class:TempFileManager
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/vim-wakatime/packages/wakatime/compat.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Popen
__init__	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def __init__(self, source_file, lexer):$/;"	m	class:DependencyParser
__init__	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def __init__(self, source_file, lexer=None):$/;"	m	class:TokenParser
__init__	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def __init__(self, data, args, configs, _clone=None):$/;"	m	class:Heartbeat
__init__	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def __init__(self, args, configs):$/;"	m	class:Queue
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def __init__(self, formatter, parent, heading=None):$/;"	m	class:HelpFormatter._Section
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def __init__(self, name, aliases, help):$/;"	m	class:_SubParsersAction._ChoicesPseudoAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self, **kwargs):$/;"	m	class:Namespace
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self, argument, message):$/;"	m	class:ArgumentError
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self, container, required=False):$/;"	m	class:_MutuallyExclusiveGroup
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self, container, title=None, description=None, **kwargs):$/;"	m	class:_ArgumentGroup
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self, mode='r', bufsize=None):$/;"	m	class:FileType
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:Action
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:ArgumentParser
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:HelpFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_ActionsContainer
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_AppendConstAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_CountAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_HelpAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreConstAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreFalseAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_StoreTrueAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_SubParsersAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __init__(self,$/;"	m	class:_VersionAction
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5prober.py	/^    def __init__(self):$/;"	m	class:Big5Prober
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:Big5DistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:CharDistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCJPDistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCKRDistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:EUCTWDistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:GB2312DistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def __init__(self):$/;"	m	class:SJISDistributionAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def __init__(self, lang_filter=None):$/;"	m	class:CharSetGroupProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def __init__(self, lang_filter=None):$/;"	m	class:CharSetProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def __init__(self, sm):$/;"	m	class:CodingStateMachine
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/cp949prober.py	/^    def __init__(self):$/;"	m	class:CP949Prober
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def __init__(self, lang_filter=None):$/;"	m	class:EscCharSetProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def __init__(self):$/;"	m	class:EUCJPProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrprober.py	/^    def __init__(self):$/;"	m	class:EUCKRProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwprober.py	/^    def __init__(self):$/;"	m	class:EUCTWProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312prober.py	/^    def __init__(self):$/;"	m	class:GB2312Prober
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def __init__(self):$/;"	m	class:HebrewProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def __init__(self):$/;"	m	class:JapaneseContextAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def __init__(self):$/;"	m	class:SJISContextAnalysis
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def __init__(self):$/;"	m	class:Latin1Prober
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def __init__(self, lang_filter=None):$/;"	m	class:MultiByteCharSetProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcsgroupprober.py	/^    def __init__(self, lang_filter=None):$/;"	m	class:MBCSGroupProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def __init__(self, model, reversed=False, name_prober=None):$/;"	m	class:SingleByteCharSetProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcsgroupprober.py	/^    def __init__(self):$/;"	m	class:SBCSGroupProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def __init__(self):$/;"	m	class:SJISProber
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    def __init__(self, lang_filter=LanguageFilter.ALL):$/;"	m	class:UniversalDetector
__init__	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def __init__(self):$/;"	m	class:UTF8Prober
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SafeConfigParser
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, defaults=None, dict_type=_default_dict,$/;"	m	class:RawConfigParser
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, filename, lineno, line):$/;"	m	class:MissingSectionHeaderError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, msg=''):$/;"	m	class:Error
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, option, section):$/;"	m	class:NoOptionError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, option, section, msg):$/;"	m	class:InterpolationError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, option, section, rawval):$/;"	m	class:InterpolationDepthError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, option, section, rawval, reference):$/;"	m	class:InterpolationMissingOptionError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, parser):$/;"	m	class:ConverterMapping
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, parser, name):$/;"	m	class:SectionProxy
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, section):$/;"	m	class:NoSectionError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, section, option, source=None, lineno=None):$/;"	m	class:DuplicateOptionError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, section, source=None, lineno=None):$/;"	m	class:DuplicateSectionError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __init__(self, source=None, filename=None):$/;"	m	class:ParsingError
__init__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __init__(self, *maps):$/;"	m	class:_ChainMap
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __init__(self, value=0):$/;"	m	class:U32
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def __init__(self, user_name, password, domain_name, challenge_message, ntlm_compatibility):$/;"	m	class:ComputeResponse
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^    def __init__(self, key_str):$/;"	m	class:DES
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^    def __init__(self, key_str):$/;"	m	class:DES
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    def __init__(self):$/;"	m	class:GssChannelBindingsStruct
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def __init__(self, msg2):$/;"	m	class:ChallengeMessage
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def __init__(self, negotiate_flags, domain_name, workstation):$/;"	m	class:NegotiateMessage
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def __init__(self, user_name, password, domain_name, workstation, challenge_message, ntlm_co/;"	m	class:AuthenticateMessage
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^    def __init__(self, ntlm_compatibility=3):$/;"	m	class:Ntlm
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    def __init__(self, key):$/;"	m	class:ARC4
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def __init__(self, checksum, seq_num):$/;"	m	class:_NtlmMessageSignature2
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def __init__(self, negotiate_flags, exported_session_key, source="client"):$/;"	m	class:SessionSecurity
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def __init__(self, random_pad, checksum, seq_num):$/;"	m	class:_NtlmMessageSignature1
__init__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def __init__(self, data=None):$/;"	m	class:TargetInfo
__init__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:Filter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    def __init__(self, **options):$/;"	m	class:FunctionFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:CodeTagFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:GobbleFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:KeywordCaseFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:NameHighlightFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:RaiseOnErrorTokenFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:TokenMergeFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def __init__(self, **options):$/;"	m	class:VisibleWhitespaceFilter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    def __init__(self, **options):$/;"	m	class:Formatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    def __init__(self, **options):$/;"	m	class:BBCodeFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def __init__(self, **options):$/;"	m	class:HtmlFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def __init__(self, **options):$/;"	m	class:ImageFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def __init__(self, font_name, font_size=14):$/;"	m	class:FontManager
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    def __init__(self, **options):$/;"	m	class:IRCFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def __init__(self, **options):$/;"	m	class:LatexFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def __init__(self, left, right, lang, **options):$/;"	m	class:LatexEmbeddedLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    def __init__(self, **options):$/;"	m	class:TestcaseFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    def __init__(self, **options):$/;"	m	class:RtfFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    def __init__(self, **options):$/;"	m	class:SvgFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    def __init__(self, **options):$/;"	m	class:TerminalFormatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def __init__(self, **options):$/;"	m	class:Terminal256Formatter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def __init__(self, fg=None, bg=None, bold=False, underline=False):$/;"	m	class:EscapeSequence
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, **options):$/;"	m	class:Lexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, *args):$/;"	m	class:combined
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, _root_lexer, _language_lexer, _needle=Other, **options):$/;"	m	class:DelegatingLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, start, text):$/;"	m	class:_PseudoMatch
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, state):$/;"	m	class:default
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, text, pos, stack=None, end=None):$/;"	m	class:LexerContext
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __init__(self, words, prefix='', suffix=''):$/;"	m	class:words
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CObjdumpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:CppObjdumpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    def __init__(self, **options):$/;"	m	class:DObjdumpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    def __init__(self, **options):$/;"	m	class:CFamilyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:YamlLexerContext
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpAspxLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:CSharpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:NemerleLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def __init__(self, **options):$/;"	m	class:VbNetAspxLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def __init__(self, **options):$/;"	m	class:SnowballLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    def __init__(self, **options):$/;"	m	class:EzhilLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateAgdaLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateCryptolLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateHaskellLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def __init__(self, **options):$/;"	m	class:LiterateIdrisLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def __init__(self, baselexer, **options):$/;"	m	class:LiterateLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def __init__(self, **options):$/;"	m	class:Inform7Lexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    def __init__(self, **options):$/;"	m	class:LassoLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def __init__(self, **options):$/;"	m	class:CommonLispLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MarkdownLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocCssLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocJavascriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:MozPreprocXulLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def __init__(self, **options):$/;"	m	class:RstLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    def __init__(self, **options):$/;"	m	class:Modula2Lexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrActionScriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCSharpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrCppLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrJavaLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrObjectiveCLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPerlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrPythonLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:AntlrRubyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelCppLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelDLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelJavaLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelObjectiveCLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:RagelRubyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def __init__(self, **options):$/;"	m	class:TreetopLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    def __init__(self, **options):$/;"	m	class:DelphiLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    def __init__(self, **options):$/;"	m	class:SourcePawnLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def __init__(self, **options):$/;"	m	class:Perl6Lexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    def __init__(self, **options):$/;"	m	class:PhpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def __init__(self, **options):$/;"	m	class:PythonConsoleLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:ForLoop
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:RowTokenizer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self):$/;"	m	class:Tokenizer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, **options):$/;"	m	class:RobotFrameworkLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, prev_tokenizer=None):$/;"	m	class:_Table
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, string, identifiers):$/;"	m	class:VariableSplitter
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, support_assign=True):$/;"	m	class:KeywordCall
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter, prev_tokenizer=None):$/;"	m	class:SettingTable
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def __init__(self, template_setter=None):$/;"	m	class:Setting
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def __init__(self, **options):$/;"	m	class:LuaLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    def __init__(self, **options):$/;"	m	class:RawTokenLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def __init__(self, x):$/;"	m	class:lookahead
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:Angular2HtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahJavascriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CheetahXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionCFCLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ColdfusionHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssDjangoLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssErbLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssGenshiLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssPhpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:CssSmartyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:ErbLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:EvoqueXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:GenshiLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HandlebarsHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlDjangoLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlGenshiLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlPhpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:HtmlSmartyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptDjangoLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptErbLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptGenshiLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptPhpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JavascriptSmartyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:JspLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoCssLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoJavascriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:LassoXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoCssLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoJavascriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MakoXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyCssLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyJavascriptLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:MyghtyXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:RhtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:SspLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TeaTemplateLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:TwigHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityHtmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:VelocityXmlLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlDjangoLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlErbLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlPhpLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:XmlSmartyLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def __init__(self, **options):$/;"	m	class:YamlJinjaLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    def __init__(self, **options):$/;"	m	class:VimLexer
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def __init__(self, text, flags=0):$/;"	m	class:Scanner
__init__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __init__(self, *args):$/;"	m	class:_TokenType
__init__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __init__(self, minutes):$/;"	m	class:_FixedOffset
__init__	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def __init__(self, hours, reprname, stdname, dstname):$/;"	m	class:USTimeZone
__init__	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def __init__(self, offset, name):$/;"	m	class:FixedOffset
__init__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __init__(self, _inf=None, _tzinfos=None):$/;"	m	class:DstTzInfo
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def __init__(self):$/;"	m	class:BaseAdapter
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def __init__(self, pool_connections=DEFAULT_POOLSIZE,$/;"	m	class:HTTPAdapter
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __init__(self, username, password):$/;"	m	class:HTTPBasicAuth
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __init__(self, username, password):$/;"	m	class:HTTPDigestAuth
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __init__(self, headers):$/;"	m	class:MockResponse
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __init__(self, request):$/;"	m	class:MockRequest
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/exceptions.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:RequestException
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __init__(self):$/;"	m	class:PreparedRequest
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __init__(self):$/;"	m	class:Response
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __init__(self,$/;"	m	class:Request
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def __init__(self):$/;"	m	class:Session
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __init__(self, data=None, **kwargs):$/;"	m	class:CaseInsensitiveDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __init__(self, name=None):$/;"	m	class:LookupDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^    def __init__(self, username, password, session=None):$/;"	m	class:HttpNtlmAuth
__init__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^    def __init__(self, encoding=None, object_hook=None, parse_float=None,$/;"	m	class:JSONDecoder
__init__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def __init__(self, skipkeys=False, ensure_ascii=True,$/;"	m	class:JSONEncoder
__init__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^    def __init__(self, msg, doc, pos, end=None):$/;"	m	class:JSONDecodeError
__init__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __init__(self, name):$/;"	m	class:_LazyDescr
__init__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __init__(self, name):$/;"	m	class:_LazyModule
__init__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __init__(self, name, old, new=None):$/;"	m	class:MovedModule
__init__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):$/;"	m	class:MovedAttribute
__init__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def __init__(self, six_module_name):$/;"	m	class:_SixMetaPathImporter
__init__	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def __init__(self, *pos, **kw):$/;"	m	class:_BaseSocket
__init__	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def __init__(self, family=socket.AF_INET, type=socket.SOCK_STREAM, proto=0, *args, **kwargs)/;"	m	class:socksocket
__init__	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def __init__(self, msg, socket_err=None):$/;"	m	class:ProxyError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __init__(self, headers=None, **kwargs):$/;"	m	class:HTTPHeaderDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __init__(self, maxsize=10, dispose_func=None):$/;"	m	class:RecentlyUsedContainer
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def __init__(self, *args, **kw):$/;"	m	class:HTTPConnection
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def __init__(self, host, port=None, key_file=None, cert_file=None,$/;"	m	class:HTTPSConnection
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None):$/;"	m	class:ConnectionPool
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None, strict=False,$/;"	m	class:HTTPConnectionPool
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __init__(self, host, port=None,$/;"	m	class:HTTPSConnectionPool
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def __init__(self, headers=None, retries=None, validate_certificate=True,$/;"	m	class:AppEngineManager
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^    def __init__(self, user, pw, authurl, *args, **kwargs):$/;"	m	class:NTLMConnectionPool
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def __init__(self, connection, socket, suppress_ragged_eofs=True):$/;"	m	class:WrappedSocket
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def __init__(self, protocol):$/;"	m	class:PyOpenSSLContext
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def __init__(self, protocol):$/;"	m	class:SecureTransportContext
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def __init__(self, socket):$/;"	m	class:WrappedSocket
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SOCKSConnection
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    def __init__(self, proxy_url, username=None, password=None,$/;"	m	class:SOCKSProxyManager
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, defects, unparsed_data):$/;"	m	class:HeaderParsingError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, location):$/;"	m	class:LocationParseError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, partial, expected):$/;"	m	class:IncompleteRead
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, pool, message):$/;"	m	class:PoolError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, message):$/;"	m	class:RequestError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, reason=None):$/;"	m	class:MaxRetryError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, pool, url, retries=3):$/;"	m	class:HostChangedError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __init__(self, scheme):$/;"	m	class:ProxySchemeUnknown
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def __init__(self, name, data, filename=None, headers=None):$/;"	m	class:RequestField
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:OrderedDict
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __init__(self, name):$/;"	m	class:_LazyDescr
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __init__(self, name):$/;"	m	class:_LazyModule
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __init__(self, name, old, new=None):$/;"	m	class:MovedModule
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):$/;"	m	class:MovedAttribute
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def __init__(self, six_module_name):$/;"	m	class:_SixMetaPathImporter
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def __init__(self, num_pools=10, headers=None, **connection_pool_kw):$/;"	m	class:PoolManager
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def __init__(self, proxy_url, num_pools=10, headers=None,$/;"	m	class:ProxyManager
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    def __init__(self, headers=None):$/;"	m	class:RequestMethods
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def __init__(self):$/;"	m	class:DeflateDecoder
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def __init__(self):$/;"	m	class:GzipDecoder
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def __init__(self, body='', headers=None, status=0, version=0, reason=None,$/;"	m	class:HTTPResponse
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def __init__(self, total=10, connect=None, read=None, redirect=None, status=None,$/;"	m	class:Retry
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def __init__(self):$/;"	m	class:EpollSelector
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def __init__(self):$/;"	m	class:KqueueSelector
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def __init__(self):$/;"	m	class:PollSelector
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def __init__(self):$/;"	m	class:SelectSelector
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __init__(self):$/;"	m	class:BaseSelector
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __init__(self, errcode):$/;"	m	class:SelectorError
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __init__(self, selector):$/;"	m	class:_SelectorMapping
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        def __init__(self, protocol_version):$/;"	m	class:SSLContext
__init__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def __init__(self, total=None, connect=_Default, read=_Default):$/;"	m	class:Timeout
__init__	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^    def __init__(self, path, configs=None):$/;"	m	class:BaseProject
__int__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __int__(self):$/;"	m	class:U32
__invert__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __invert__(self):$/;"	m	class:U32
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator
__iter__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __iter__(self):$/;"	m	class:ConverterMapping
__iter__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __iter__(self):$/;"	m	class:RawConfigParser
__iter__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __iter__(self):$/;"	m	class:SectionProxy
__iter__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __iter__(self):$/;"	m	class:_ChainMap
__iter__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def __iter__(self):$/;"	m	class:lookahead
__iter__	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def __iter__(cls):$/;"	m	class:StyleMeta
__iter__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __iter__(self):$/;"	m	class:LazyDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __iter__(self):$/;"	m	class:Response
__iter__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __iter__(self):$/;"	m	class:CaseInsensitiveDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __iter__(self):$/;"	m	class:HTTPHeaderDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __iter__(self):$/;"	m	class:RecentlyUsedContainer
__iter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __iter__(self):$/;"	m	class:OrderedDict
__iter__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __iter__(self):$/;"	m	class:_SelectorMapping
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject
__le__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __le__(self, other):$/;"	m	class:U32
__len__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary
__len__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __len__(self):$/;"	m	class:ConverterMapping
__len__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __len__(self):$/;"	m	class:RawConfigParser
__len__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __len__(self):$/;"	m	class:SectionProxy
__len__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __len__(self):$/;"	m	class:_ChainMap
__len__	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def __len__(cls):$/;"	m	class:StyleMeta
__len__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __len__(self):$/;"	m	class:LazyDict
__len__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __len__(self):$/;"	m	class:CaseInsensitiveDict
__len__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^            def __len__(self):$/;"	m	class:X
__len__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __len__(self):$/;"	m	class:HTTPHeaderDict
__len__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __len__(self):$/;"	m	class:RecentlyUsedContainer
__len__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^            def __len__(self):$/;"	m	class:X
__len__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __len__(self):$/;"	m	class:_SelectorMapping
__license__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__license__ = 'BSD'$/;"	v
__license__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__license__ = 'Apache 2.0'$/;"	v
__license__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^__license__ = 'MIT'$/;"	v
__long__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __long__(self):$/;"	m	class:U32
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil
__lshift__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __lshift__(self, b):$/;"	m	class:U32
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject
__lt__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __lt__(self, other):$/;"	m	class:U32
__marker	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    __marker = object()$/;"	v	class:HTTPHeaderDict	file:
__marker	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    __marker = object()$/;"	v	class:OrderedDict	file:
__missing__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __missing__(self, key):$/;"	m	class:_ChainMap
__mod__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __mod__(self, b):$/;"	m	class:U32
__mul__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __mul__(self, b):$/;"	m	class:U32
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position
__ne__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __ne__(self, other):$/;"	m	class:Namespace
__ne__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __ne__(self, other):$/;"	m	class:U32
__ne__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict
__ne__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __ne__(self, other):$/;"	m	class:HTTPBasicAuth
__ne__	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def __ne__(self, other):$/;"	m	class:HTTPDigestAuth
__ne__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict
__ne__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __ne__(self, other):$/;"	m	class:HTTPHeaderDict
__ne__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict
__neg__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __neg__(self):$/;"	m	class:U32
__new__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __new__(cls, *args):$/;"	m	class:combined
__new__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __new__(mcs, name, bases, d):$/;"	m	class:LexerMeta
__new__	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def __new__(mcs, name, bases, dct):$/;"	m	class:StyleMeta
__new__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __new__(cls, fill_iter=None):$/;"	m	class:LazyList
__new__	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def __new__(cls, fill_iter=None):$/;"	m	class:LazySet
__new__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        def __new__(cls, name, this_bases, d):$/;"	m	class:with_metaclass.metaclass
__new__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        def __new__(cls, name, this_bases, d):$/;"	m	class:with_metaclass.metaclass
__new__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def __new__(cls, scheme=None, auth=None, host=None, port=None, path=None,$/;"	m	class:Url
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator
__next__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def __next__(self):$/;"	m	class:lookahead
__nonzero__	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def __nonzero__(self):$/;"	m	class:Heartbeat
__nonzero__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __nonzero__(self):$/;"	m	class:U32
__nonzero__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __nonzero__(self):$/;"	m	class:Response
__not__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __not__(self):$/;"	m	class:U32
__or__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __or__(self, b):$/;"	m	class:U32
__package__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^__package__ = __name__  # see PEP 366 @ReservedAssignment$/;"	v
__package__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^__package__ = __name__  # see PEP 366 @ReservedAssignment$/;"	v
__path__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    __path__ = []  # mark as package$/;"	v	class:Module_six_moves_urllib	file:
__path__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    __path__ = []  # mark as package$/;"	v	class:_MovedItems	file:
__path__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^__path__ = []  # required for PEP 302 and PEP 451$/;"	v
__path__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    __path__ = []  # mark as package$/;"	v	class:Module_six_moves_urllib	file:
__path__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    __path__ = []  # mark as package$/;"	v	class:_MovedItems	file:
__path__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^__path__ = []  # required for PEP 302 and PEP 451$/;"	v
__pos__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __pos__(self):$/;"	m	class:U32
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __reduce__(self):$/;"	m	class:UTC
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __reduce__(self):$/;"	m	class:_FixedOffset
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:DstTzInfo
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __reduce__(self):$/;"	m	class:StaticTzInfo
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^    def __reduce__(self):$/;"	m	class:JSONDecodeError
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __reduce__(self):$/;"	m	class:PoolError
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __reduce__(self):$/;"	m	class:RequestError
__reduce__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __reduce__(self):$/;"	m	class:OrderedDict
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop
__repr__	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def __repr__(self):$/;"	m	class:Heartbeat
__repr__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __repr__(self):$/;"	m	class:FileType
__repr__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __repr__(self):$/;"	m	class:_AttributeHolder
__repr__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __repr__(self):$/;"	m	class:Error
__repr__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __repr__(self):$/;"	m	class:SectionProxy
__repr__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __repr__(self):$/;"	m	class:_ChainMap
__repr__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __repr__(self):$/;"	m	class:U32
__repr__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:Lexer
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:LexerContext
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def __repr__(self):$/;"	m	class:_inherit
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def __repr__(self):$/;"	m	class:Scanner
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def __repr__(self):$/;"	m	class:_TokenType
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __repr__(self):$/;"	m	class:UTC
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __repr__(self):$/;"	m	class:_FixedOffset
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def __repr__(self):$/;"	m	class:USTimeZone
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __repr__(self):$/;"	m	class:DstTzInfo
__repr__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __repr__(self):$/;"	m	class:StaticTzInfo
__repr__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:PreparedRequest
__repr__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:Request
__repr__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __repr__(self):$/;"	m	class:Response
__repr__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __repr__(self):$/;"	m	class:CaseInsensitiveDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __repr__(self):$/;"	m	class:LookupDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __repr__(self):$/;"	m	class:HTTPHeaderDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    def __repr__(self):$/;"	m	class:IncompleteRead
__repr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __repr__(self, _repr_running={}):$/;"	m	class:OrderedDict
__repr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def __repr__(self):$/;"	m	class:Retry
__repr__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __repr__(self):$/;"	m	class:SelectorError
__reversed__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict
__reversed__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict
__reversed__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __reversed__(self):$/;"	m	class:OrderedDict
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil
__rshift__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __rshift__(self, b):$/;"	m	class:U32
__setitem__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConverterMapping
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __setitem__(self, key, value):$/;"	m	class:RawConfigParser
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def __setitem__(self, key, value):$/;"	m	class:SectionProxy
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def __setitem__(self, key, value):$/;"	m	class:_ChainMap
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    def __setitem__(self, key, value):$/;"	m	class:GssChannelBindingsStruct
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def __setitem__(self, key, value):$/;"	m	class:TargetInfo
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def __setitem__(self, key, value):$/;"	m	class:OrderedDict
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __setitem__(self, name, value):$/;"	m	class:RequestsCookieJar
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def __setitem__(self, key, value):$/;"	m	class:CaseInsensitiveDict
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def __setitem__(self, key, value):$/;"	m	class:OrderedDict
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __setitem__(self, key, val):$/;"	m	class:HTTPHeaderDict
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def __setitem__(self, key, value):$/;"	m	class:RecentlyUsedContainer
__setitem__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def __setitem__(self, key, value, dict_setitem=dict.__setitem__):$/;"	m	class:OrderedDict
__setslice__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy
__setstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def __setstate__(self, state):$/;"	m	class:HTTPAdapter
__setstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def __setstate__(self, state):$/;"	m	class:RequestsCookieJar
__setstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def __setstate__(self, state):$/;"	m	class:Response
__setstate__	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def __setstate__(self, state):$/;"	m	class:Session
__slots__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    __slots__ = ()$/;"	v	class:Url	file:
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor
__str__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def __str__(self):$/;"	m	class:ArgumentError
__str__	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    __str__ = __repr__$/;"	v	class:Error	file:
__str__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def __str__(self):$/;"	m	class:UTC
__str__	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def __str__(self):$/;"	m	class:BaseTzInfo
__str__	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def __str__(self):$/;"	m	class:ProxyError
__str__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def __str__(self):$/;"	m	class:ConnectionPool
__str__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def __str__(self):$/;"	m	class:SelectorError
__str__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def __str__(self):$/;"	m	class:Timeout
__str__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def __str__(self):$/;"	m	class:Url
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position
__sub__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __sub__(self, b):$/;"	m	class:U32
__title__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__title__ = 'wakatime'$/;"	v
__title__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__title__ = 'requests'$/;"	v
__truediv__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __truediv__(self, b):$/;"	m	class:U32
__update	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    __update = update  # let subclasses override update without breaking __init__$/;"	v	class:OrderedDict	file:
__url__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__url__ = 'https:\/\/github.com\/wakatime\/wakatime'$/;"	v
__url__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__url__ = 'http:\/\/python-requests.org'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__version__ = '.'.join(__version_info__)$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^__version__ = '1.3.0'  # we use our own version number independant of the$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/certifi/__init__.py	/^__version__ = "2017.07.27.1"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/chardet/version.py	/^__version__ = "3.0.4"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/idna/idnadata.py	/^__version__ = "6.3.0"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/idna/package_data.py	/^__version__ = '2.6'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^__version__ = "6.3.0"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^__version__ = '2.2.0'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^__version__ = VERSION$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/requests/__version__.py	/^__version__ = '2.18.4'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^__version__ = '3.8.2'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^__version__ = "1.10.0"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^__version__ = "1.6.6"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^__version__ = '1.22'$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^__version__ = "1.10.0"$/;"	v
__version__	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^__version__ = '3.5.0.1'$/;"	v
__version_info__	plugged/vim-wakatime/packages/wakatime/__about__.py	/^__version_info__ = ('10', '8', '2')$/;"	v
__webpack_require__	plugged/coc.nvim/build/index.js	/^\/******\/ 	function __webpack_require__(moduleId) {$/;"	f
__xor__	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def __xor__(self, b):$/;"	m	class:U32
_absolute_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _absolute_url(self, path):$/;"	m	class:HTTPConnectionPool
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:ArgumentParser
_add_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ActionsContainer
_add_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_ArgumentGroup
_add_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_add_container_actions	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_container_actions(self, container):$/;"	m	class:_ActionsContainer
_add_doc	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def _add_doc(func, doc):$/;"	f
_add_doc	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def _add_doc(func, doc):$/;"	f
_add_item	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _add_item(self, func, args):$/;"	m	class:HelpFormatter
_add_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def _add_module(self, mod, *fullnames):$/;"	m	class:_SixMetaPathImporter
_add_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def _add_module(self, mod, *fullnames):$/;"	m	class:_SixMetaPathImporter
_alabel_prefix	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^_alabel_prefix = b'xn--'$/;"	v
_all_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_all_units = _angle_units + _frequency_units + _length_units + \\$/;"	v
_angle_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_angle_units = ($/;"	v
_ansimap	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^_ansimap = {$/;"	v
_apply	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    def _apply(filter_, stream):$/;"	f	function:apply_filters	file:
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _assertCountEqual = "assertCountEqual"$/;"	v
_assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _assertCountEqual = "assertItemsEqual"$/;"	v
_assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _assertCountEqual = "assertCountEqual"$/;"	v
_assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _assertCountEqual = "assertItemsEqual"$/;"	v
_assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        _assertRaisesRegex = "assertRaisesRegexp"$/;"	v
_assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _assertRaisesRegex = "assertRaisesRegexp"$/;"	v
_assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        _assertRaisesRegex = "assertRaisesRegexp"$/;"	v
_assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _assertRaisesRegex = "assertRaisesRegexp"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        _assertRegex = "assertRegex"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        _assertRegex = "assertRegexpMatches"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _assertRegex = "assertRegexpMatches"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        _assertRegex = "assertRegex"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        _assertRegex = "assertRegexpMatches"$/;"	v
_assertRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _assertRegex = "assertRegexpMatches"$/;"	v
_assert_no_error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _assert_no_error(error, exception_class=None):$/;"	f
_auth_type_from_header	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^def _auth_type_from_header(header):$/;"	f
_automodule	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_automodule	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^class _automodule(types.ModuleType):$/;"	c
_basic_auth_str	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^def _basic_auth_str(username, password):$/;"	f
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_block_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    _block_re = re.compile(r'(<%%|%%>|<%=|<%#|<%-|<%|-%>|%>|^%[^%].*?$)', re.M)$/;"	v	class:ErbLexer
_blocking_errnos	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^_blocking_errnos = set([errno.EAGAIN, errno.EWOULDBLOCK])$/;"	v
_break	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _break = r'(?=[%s]|$)' % _separator$/;"	v	class:JasminLexer
_buffer_decode	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^    def _buffer_decode(self, data, errors, final):$/;"	m	class:IncrementalDecoder
_buffer_encode	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^    def _buffer_encode(self, data, errors, final):$/;"	m	class:IncrementalEncoder
_build_color_table	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _build_color_table(self):$/;"	m	class:Terminal256Formatter
_build_color_table	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _build_color_table(self):$/;"	m	class:TerminalTrueColorFormatter
_build_rval_index_tuple	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_build_rval_index_tuple(PyObject *rval, Py_ssize_t idx)$/;"	f	typeref:typename:PyObject *	file:
_build_word_match	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def _build_word_match(words, boundary_regex_fragment=None, prefix='', suffix=''):$/;"	m	class:Perl6Lexer
_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _builtins = ($/;"	v	class:CPSALexer
_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _builtins = ($/;"	v	class:RacketLexer
_byte_string	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^def _byte_string(s):$/;"	f
_c	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _c = lambda s: re.compile(s, re.MULTILINE)$/;"	m	class:RexxLexer
_cache_tz	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^_cache_tz = None$/;"	v
_cache_tz	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/unix.py	/^_cache_tz = None$/;"	v
_cache_tz	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^_cache_tz = None$/;"	v
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^def _calc_end(text, start):$/;"	f
_calc_resp	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _calc_resp(password_hash, server_challenge):$/;"	m	class:ComputeResponse
_callable	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^def _callable(obj):$/;"	f
_can_allocate	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^def _can_allocate(struct):$/;"	f
_cert_array_from_pem	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _cert_array_from_pem(pem_bundle):$/;"	f
_cf_data_from_bytes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _cf_data_from_bytes(bytestring):$/;"	f
_cf_dictionary_from_tuples	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _cf_dictionary_from_tuples(tuples):$/;"	f
_cf_string_to_unicode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _cf_string_to_unicode(value):$/;"	f
_check_conflict	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _check_conflict(self, action):$/;"	m	class:_ActionsContainer
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_value	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _check_value(self, action, value):$/;"	m	class:ArgumentParser
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _chomp(string):$/;"	f
_closest_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _closest_color(self, r, g, b):$/;"	m	class:Terminal256Formatter
_closing_parenthesis	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _closing_parenthesis = r'[)\\]}]'$/;"	v	class:RacketLexer
_codes	plugged/vim-wakatime/packages/wakatime/packages/requests/status_codes.py	/^_codes = {$/;"	v
_color_index	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _color_index(self, color):$/;"	m	class:Terminal256Formatter
_color_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_color_keywords = ($/;"	v
_color_tuple	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _color_tuple(self, color):$/;"	m	class:TerminalTrueColorFormatter
_combining_class	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def _combining_class(cp):$/;"	f
_comma_dot	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    _comma_dot = r'(?:,\\s*\\n|' + _dot + ')'$/;"	v	class:HamlLexer
_comment_multiline	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _comment_multiline = r'(?:\/\\*(?:[^*]|\\*(?!\/))*\\*\/)'$/;"	v	class:Tads3Lexer
_comment_multiline	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _comment_multiline = r'(?:--\\[(?P<level>=*)\\[[\\w\\W]*?\\](?P=level)\\])'$/;"	v	class:LuaLexer
_comment_single	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _comment_single = r'(?:\/\/(?:[^\\\\\\n]|\\\\+[\\w\\W])*$)'$/;"	v	class:Tads3Lexer
_comment_single	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _comment_single = r'(?:--.*$)'$/;"	v	class:LuaLexer
_connection_ref_lock	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^_connection_ref_lock = threading.Lock()$/;"	v
_connection_refs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^_connection_refs = weakref.WeakValueDictionary()$/;"	v
_const_compare_digest	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^_const_compare_digest = getattr(hmac, 'compare_digest',$/;"	v
_const_compare_digest_backport	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def _const_compare_digest_backport(a, b):$/;"	f
_constants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_constants = [$/;"	v
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_continues	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:TestCaseTable
_continues	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:UnknownTable
_continues	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _continues(self, value, index):$/;"	m	class:_Table
_convertPyInt_AsSsize_t	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_convertPyInt_AsSsize_t(PyObject *o, Py_ssize_t *size_ptr)$/;"	f	typeref:typename:int	file:
_convertPyInt_FromSsize_t	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_convertPyInt_FromSsize_t(Py_ssize_t *size_ptr)$/;"	f	typeref:typename:PyObject *	file:
_convert_to_boolean	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _convert_to_boolean(self, value):$/;"	m	class:RawConfigParser
_copy	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^import copy as _copy$/;"	I
_copy_cookie_jar	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def _copy_cookie_jar(jar):$/;"	f
_copy_from	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def _copy_from(self, other):$/;"	m	class:HTTPHeaderDict
_core_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    _core_rules = ($/;"	v	class:AbnfLexer
_core_token	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _core_token = r'(?:(?:(?:\\^[%s]?)?[^"%s%s%s])+)' % (_nl, _nl, _punct, _ws)$/;"	v	class:BatchLexer
_core_token_compound	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _core_token_compound = r'(?:(?:(?:\\^[%s]?)?[^"%s%s%s)])+)' % (_nl, _nl,$/;"	v	class:BatchLexer
_create_drawables	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _create_drawables(self, tokensource):$/;"	m	class:ImageFormatter
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_mac	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _create_mac(self):$/;"	m	class:FontManager
_create_nix	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _create_nix(self):$/;"	m	class:FontManager
_create_stylesheet	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _create_stylesheet(self):$/;"	m	class:HtmlFormatter
_create_stylesheet	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def _create_stylesheet(self):$/;"	m	class:LatexFormatter
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_create_win	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _create_win(self):$/;"	m	class:FontManager
_css_properties	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_css_properties = ($/;"	v
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_custom_tokenizer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _custom_tokenizer = None$/;"	v	class:Setting
_custom_validate	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _custom_validate(self, verify, trust_bundle):$/;"	m	class:WrappedSocket
_dash	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _dash = Inform6Lexer._dash$/;"	v	class:Inform7Lexer
_dash	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _dash = u'\\\\-\\u2010-\\u2014'$/;"	v	class:Inform6Lexer
_datetime_cache	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^_datetime_cache = {0: _epoch}$/;"	v
_declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_declarations = ['bind', 'def', 'fn', 'object']$/;"	v
_decode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _decode(self, data, decode_content, flush_decoder):$/;"	m	class:HTTPResponse
_decode_range	plugged/vim-wakatime/packages/wakatime/packages/idna/intranges.py	/^def _decode_range(r):$/;"	f
_decodeifneeded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _decodeifneeded(self, value):$/;"	m	class:HtmlFormatter
_decref_socketios	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def _decref_socketios(self):$/;"	m	class:WrappedSocket
_decref_socketios	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _decref_socketios(self):$/;"	m	class:WrappedSocket
_dedent	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _dedent(self):$/;"	m	class:HelpFormatter
_default_analyse	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^_default_analyse = staticmethod(lambda x: 0.0)$/;"	v
_default_decoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^_default_decoder = JSONDecoder(encoding=None, object_hook=None,$/;"	v
_default_dict	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^from .helpers import OrderedDict as _default_dict$/;"	x
_default_encoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^_default_encoder = JSONEncoder($/;"	v
_default_key_normalizer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^def _default_key_normalizer(key_class, request_context):$/;"	f
_default_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _default_template = None$/;"	v	class:TestCaseTable
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_delimiters	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _delimiters = r'()[\\]{}",\\'`;\\s'$/;"	v	class:RacketLexer
_directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    _directives = ('(?:package|prep|build|install|clean|check|pre[a-z]*|'$/;"	v	class:RPMSpecLexer
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_dnsname_match	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def _dnsname_match(dn, hostname, max_wildcards=1):$/;"	f
_dnsname_to_stdlib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def _dnsname_to_stdlib(name):$/;"	f
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text	file:
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=''):$/;"	f	function:echo_to_hierarchy	file:
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_dot	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:HamlLexer
_dot	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:PugLexer
_dot	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    _dot = r'.'$/;"	v	class:ScamlLexer
_dot	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    _dot = r'(?: \\|\\n(?=.* \\|)|.)'$/;"	v	class:SlimLexer
_dquote	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _dquote = Inform6Lexer._dquote$/;"	v	class:Inform7Lexer
_dquote	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _dquote = u'"\\u201c\\u201d'$/;"	v	class:Inform6Lexer
_draw_line_numbers	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _draw_line_numbers(self):$/;"	m	class:ImageFormatter
_draw_linenumber	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _draw_linenumber(self, posno, lineno):$/;"	m	class:ImageFormatter
_draw_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _draw_text(self, pos, text, font, **kw):$/;"	m	class:ImageFormatter
_drop	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def _drop(self):$/;"	m	class:WrappedSocket
_drop	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _drop(self):$/;"	m	class:WrappedSocket
_dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    _dst = ZERO$/;"	v	class:UTC
_dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _dst = None # DST offset$/;"	v	class:DstTzInfo
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_encode_files	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def _encode_files(files, data):$/;"	m	class:RequestEncodingMixin
_encode_int	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def _encode_int(value):$/;"	f	function:_make_iterencode	file:
_encode_params	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def _encode_params(data):$/;"	m	class:RequestEncodingMixin
_encode_range	plugged/vim-wakatime/packages/wakatime/packages/idna/intranges.py	/^def _encode_range(start, end):$/;"	f
_encode_url_methods	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    _encode_url_methods = set(['DELETE', 'GET', 'HEAD', 'OPTIONS'])$/;"	v	class:RequestMethods
_encoded_const	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_encoded_const(PyObject *obj)$/;"	f	typeref:typename:PyObject *	file:
_encoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^            def _encoder(o, _orig_encoder=_encoder, _encoding=self.encoding):$/;"	f	member:JSONEncoder.iterencode	file:
_encoding_map	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^_encoding_map = [(b'\\xef\\xbb\\xbf', 'utf-8'),$/;"	v
_ensure_value	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^def _ensure_value(namespace, name, value):$/;"	f
_epoch	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^_epoch = datetime.utcfromtimestamp(0)$/;"	v
_error_catcher	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _error_catcher(self):$/;"	m	class:HTTPResponse
_escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    def _escape(self, text):$/;"	m	class:RtfFormatter
_escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _escape = (r'(?:\\\\(?:[\\n\\\\<>"\\'^v bnrt]|u[\\da-fA-F]{,4}|x[\\da-fA-F]{,2}|'$/;"	v	class:Tads3Lexer
_escape_html_table	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^_escape_html_table = {$/;"	v
_escape_pattern	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_escape_pattern = ($/;"	v
_escape_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    def _escape_text(self, text):$/;"	m	class:RtfFormatter
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_exact_decimal_prefix	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _exact_decimal_prefix = r'(?:#e)?(?:#d)?(?:#e)?'$/;"	v	class:RacketLexer
_excluded_by_missing_project_file	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _excluded_by_missing_project_file(self):$/;"	m	class:Heartbeat
_excluded_by_pattern	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _excluded_by_pattern(self):$/;"	m	class:Heartbeat
_excluded_by_unknown_project	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _excluded_by_unknown_project(self):$/;"	m	class:Heartbeat
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _execute_action($/;"	m	class:SnippetDefinition
_expand_help	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _expand_help(self, action):$/;"	m	class:HelpFormatter
_exponent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _exponent = r'(?:[defls][-+]?\\d+)'$/;"	v	class:RacketLexer
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:TestNonEmptyLangmap_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_extract_tokens	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def _extract_tokens(self):$/;"	m	class:TokenParser
_far_nvim_rpc_invoke	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def _far_nvim_rpc_invoke(self, args):$/;"	m	class:FarPlugin
_file_exists	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _file_exists(self):$/;"	m	class:Heartbeat
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_fileobj_lookup	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def _fileobj_lookup(self, fileobj):$/;"	m	class:BaseSelector
_fileobj_to_fd	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^def _fileobj_to_fd(fileobj):$/;"	f
_fileobject	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    _fileobject = None$/;"	v
_fileobject	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    _fileobject = None$/;"	v
_fill	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryNameDict
_fill	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def _fill(self):$/;"	m	class:_CountryTimezoneDict
_fill_lock	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^_fill_lock = RLock()$/;"	v
_fill_text	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:HelpFormatter
_fill_text	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _fill_text(self, text, width, indent):$/;"	m	class:RawDescriptionHelpFormatter
_finalize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _finalize(self):$/;"	m	class:VariableSplitter
_find	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def _find(self, name, domain=None, path=None):$/;"	m	class:RequestsCookieJar
_find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _find_all_snippet_directories():$/;"	f
_find_binary	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def _find_binary(self):$/;"	m	class:Subversion
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_git_config_file	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _find_git_config_file(self, path):$/;"	m	class:Git
_find_hg_config_dir	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^    def _find_hg_config_dir(self, path):$/;"	m	class:Mercurial
_find_no_duplicates	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def _find_no_duplicates(self, name, domain=None, path=None):$/;"	m	class:RequestsCookieJar
_find_project	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^    def _find_project(self, path):$/;"	m	class:ProjectMap
_find_project_base	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def _find_project_base(self, path, found=False):$/;"	m	class:Subversion
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	member:SnippetInstance.update_textobjects	file:
_find_start_index	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _find_start_index(self, string, start, end):$/;"	m	class:VariableSplitter
_find_variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _find_variable(self, string):$/;"	m	class:VariableSplitter
_first_line_of_file	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _first_line_of_file(self, filepath):$/;"	m	class:Git
_float	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    _float = r'((\\d*\\.?\\d+)|(\\d+\\.?\\d*))([eE][-+]?\\d+)?'$/;"	v	class:BroLexer
_floatconstants	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^def _floatconstants():$/;"	f
_flush_decoder	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _flush_decoder(self):$/;"	m	class:HTTPResponse
_fn_matches	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_fn_matches	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def _fn_matches(fn, glob):$/;"	f
_format	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _format(self, content):$/;"	m	class:ElmParser
_format	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _format(self, content):$/;"	m	class:HaskellParser
_format	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def _format(self, content):$/;"	m	class:HaxeParser
_format	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _format(self, content):$/;"	m	class:KotlinParser
_format	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _format(self, content):$/;"	m	class:ScalaParser
_format	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _format(self, content):$/;"	m	class:ObjectiveCParser
_format_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_action(self, action):$/;"	m	class:HelpFormatter
_format_action_invocation	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_action_invocation(self, action):$/;"	m	class:HelpFormatter
_format_actions_usage	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_actions_usage(self, actions, groups):$/;"	m	class:HelpFormatter
_format_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_args(self, action, default_metavar):$/;"	m	class:HelpFormatter
_format_lines	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _format_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_format_local_file	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _format_local_file(self):$/;"	m	class:Heartbeat
_format_module	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _format_module(self, content):$/;"	m	class:JavascriptParser
_format_text	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_text(self, text):$/;"	m	class:HelpFormatter
_format_unencoded_with_lineno	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    def _format_unencoded_with_lineno(self, tokensource, outfile):$/;"	m	class:IRCFormatter
_format_usage	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _format_usage(self, usage, actions, groups, prefix):$/;"	m	class:HelpFormatter
_formatter_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^_formatter_cache = {}  # classes by name$/;"	v
_frequency_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_frequency_units = ($/;"	v
_func_closure	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_closure = "__closure__"$/;"	v
_func_closure	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_closure = "func_closure"$/;"	v
_func_closure	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_closure = "__closure__"$/;"	v
_func_closure	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_closure = "func_closure"$/;"	v
_func_code	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_code = "__code__"$/;"	v
_func_code	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_code = "func_code"$/;"	v
_func_code	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_code = "__code__"$/;"	v
_func_code	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_code = "func_code"$/;"	v
_func_defaults	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_defaults = "__defaults__"$/;"	v
_func_defaults	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_defaults = "func_defaults"$/;"	v
_func_defaults	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_defaults = "__defaults__"$/;"	v
_func_defaults	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_defaults = "func_defaults"$/;"	v
_func_globals	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_globals = "__globals__"$/;"	v
_func_globals	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _func_globals = "func_globals"$/;"	v
_func_globals	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_globals = "__globals__"$/;"	v
_func_globals	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _func_globals = "func_globals"$/;"	v
_functional_notation_keyword_values	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_functional_notation_keyword_values = ($/;"	v
_gen_command_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    def _gen_command_rules(keyword_cmds_re, builtin_cmds_re, context=""):$/;"	m	class:TclLexer
_get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _get(self, section, conv, option, **kwargs):$/;"	m	class:RawConfigParser
_get_LMv1_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_LMv1_response(password, server_challenge):$/;"	m	class:ComputeResponse
_get_LMv1_with_session_security_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_LMv1_with_session_security_response(client_challenge):$/;"	m	class:ComputeResponse
_get_LMv2_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_LMv2_response(user_name, password, domain_name, server_challenge, client_challenge)/;"	m	class:ComputeResponse
_get_NTLM2_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_NTLM2_response(password, server_challenge, client_challenge):$/;"	m	class:ComputeResponse
_get_NTLMv1_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_NTLMv1_response(password, server_challenge):$/;"	m	class:ComputeResponse
_get_NTLMv2_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_NTLMv2_response(user_name, password, domain_name, server_challenge, client_challeng/;"	m	class:ComputeResponse
_get_NTLMv2_temp	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_NTLMv2_temp(timestamp, client_challenge, target_info):$/;"	m	class:ComputeResponse
_get_absolute_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def _get_absolute_timeout(self, timeout):$/;"	m	class:AppEngineManager
_get_action_name	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^def _get_action_name(argument):$/;"	f
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_args(self):$/;"	m	class:_AttributeHolder
_get_branch_from_head_file	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _get_branch_from_head_file(self, line):$/;"	m	class:Git
_get_channel_bindings_value	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def _get_channel_bindings_value(server_certificate_hash):$/;"	m	class:ComputeResponse
_get_char_width	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_char_width(self):$/;"	m	class:ImageFormatter
_get_char_x	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_char_x(self, charno):$/;"	m	class:ImageFormatter
_get_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    def _get_color(self, ttype):$/;"	m	class:TerminalFormatter
_get_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _get_conn(self, timeout=None):$/;"	m	class:HTTPConnectionPool
_get_conv	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _get_conv(self, section, option, conv, **kwargs):$/;"	m	class:RawConfigParser
_get_css_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _get_css_class(self, ttype):$/;"	m	class:HtmlFormatter
_get_css_classes	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _get_css_classes(self, ttype):$/;"	m	class:HtmlFormatter
_get_db_file	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def _get_db_file(self):$/;"	m	class:Queue
_get_db_file	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    def _get_db_file(self):$/;"	m	class:SessionCache
_get_decoder	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^def _get_decoder(mode):$/;"	f
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_exchange_key_ntlm_v1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def _get_exchange_key_ntlm_v1(negotiate_flags, session_base_key, server_challenge, lm_challenge_/;"	f
_get_exchange_key_ntlm_v2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def _get_exchange_key_ntlm_v2(session_base_key):$/;"	f
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _get_file_to_edit(self, snippet_dir, requested_ft, bang,$/;"	m	class:SnippetManager
_get_formatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_formatter(self):$/;"	m	class:ArgumentParser
_get_handler	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_handler(self):$/;"	m	class:_ActionsContainer
_get_help_string	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:ArgumentDefaultsHelpFormatter
_get_help_string	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_help_string(self, action):$/;"	m	class:HelpFormatter
_get_ident	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    from dummy_thread import get_ident as _get_ident$/;"	x
_get_ident	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    from thread import get_ident as _get_ident$/;"	x
_get_idna_encoded_host	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def _get_idna_encoded_host(host):$/;"	m	class:PreparedRequest
_get_image_size	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_image_size(self, maxcharno, maxlineno):$/;"	m	class:ImageFormatter
_get_info	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def _get_info(self, path):$/;"	m	class:Subversion
_get_kwargs	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:Action
_get_kwargs	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:ArgumentParser
_get_kwargs	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_kwargs(self):$/;"	m	class:_AttributeHolder
_get_lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def _get_lexer(self, lang):$/;"	m	class:PostgresBase
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_line_height	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_line_height(self):$/;"	m	class:ImageFormatter
_get_line_y	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_line_y(self, lineno):$/;"	m	class:ImageFormatter
_get_linenumber_pos	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_linenumber_pos(self, lineno):$/;"	m	class:ImageFormatter
_get_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^def _get_localzone(_root='\/'):$/;"	f
_get_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/unix.py	/^def _get_localzone(_root='\/'):$/;"	f
_get_mac_font_path	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_mac_font_path(self, font_map, name, style):$/;"	m	class:FontManager
_get_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def _get_module(self, fullname):$/;"	m	class:_SixMetaPathImporter
_get_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def _get_module(self, fullname):$/;"	m	class:_SixMetaPathImporter
_get_nargs_pattern	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_nargs_pattern(self, action):$/;"	m	class:ArgumentParser
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_nix_font_path	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_nix_font_path(self, name, style):$/;"	m	class:FontManager
_get_option_tuples	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_option_tuples(self, option_string):$/;"	m	class:ArgumentParser
_get_optional_actions	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_optional_actions(self):$/;"	m	class:ArgumentParser
_get_optional_kwargs	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_optional_kwargs(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
_get_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _get_pos(name):$/;"	f
_get_positional_actions	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_positional_actions(self):$/;"	m	class:ArgumentParser
_get_positional_kwargs	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_positional_kwargs(self, dest, **kwargs):$/;"	m	class:_ActionsContainer
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_results	plugged/vim-wakatime/packages/wakatime/api.py	/^def _get_results(response):$/;"	f
_get_retries	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def _get_retries(self, retries, redirect):$/;"	m	class:AppEngineManager
_get_seal_key_ntlm1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def _get_seal_key_ntlm1(negotiate_flags, exported_session_key):$/;"	f
_get_seal_key_ntlm2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def _get_seal_key_ntlm2(negotiate_flags, exported_session_key, magic_constant):$/;"	f
_get_server_cert	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^def _get_server_cert(response):$/;"	f
_get_signature	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def _get_signature(self, message):$/;"	m	class:SessionSecurity
_get_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    def _get_style(self, tokentype):$/;"	m	class:SvgFormatter
_get_style_font	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_style_font(self, style):$/;"	m	class:ImageFormatter
_get_subactions	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_subactions(self):$/;"	m	class:_SubParsersAction
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_text_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_text_color(self, style):$/;"	m	class:ImageFormatter
_get_text_pos	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _get_text_pos(self, charno, lineno):$/;"	m	class:ImageFormatter
_get_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _get_timeout(self, timeout):$/;"	m	class:HTTPConnectionPool
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _get_tmp():$/;"	f
_get_ttype_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^def _get_ttype_class(ttype):$/;"	f
_get_ttype_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^def _get_ttype_name(ttype):$/;"	f
_get_value	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_value(self, action, arg_string):$/;"	m	class:ArgumentParser
_get_values	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _get_values(self, action, arg_strings):$/;"	m	class:ArgumentParser
_getauto	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^def _getauto():$/;"	f
_getcommand	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^def _getcommand():$/;"	f
_getoption	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^def _getoption():$/;"	f
_gherkin_prefix	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _gherkin_prefix = re.compile('^(Given|When|Then|And) ', re.IGNORECASE)$/;"	v	class:GherkinTokenizer
_guards	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_guards = [$/;"	v
_h	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    _h = r'[A-Za-z0-9][-A-Za-z0-9]*'$/;"	v	class:BroLexer
_handle_chunk	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _handle_chunk(self, amt):$/;"	m	class:HTTPResponse
_handle_codeblock	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def _handle_codeblock(self, match):$/;"	m	class:MarkdownLexer
_handle_conflict_error	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _handle_conflict_error(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_handle_conflict_resolve	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _handle_conflict_resolve(self, action, conflicting_actions):$/;"	m	class:_ActionsContainer
_handle_error	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _handle_error(self, exc, fpname, lineno, line):$/;"	m	class:RawConfigParser
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_runs	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^def _handle_runs(char_list):  # pragma: no cover$/;"	f
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_handle_sourcecode	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def _handle_sourcecode(self, match):$/;"	m	class:RstLexer
_handle_unsent_heartbeats	plugged/vim-wakatime/packages/wakatime/api.py	/^def _handle_unsent_heartbeats(heartbeats, code, content, args, configs):$/;"	f
_has_for_json_hook	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_has_for_json_hook(PyObject *obj)$/;"	f	typeref:typename:int	file:
_has_ipv6	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^def _has_ipv6(host):$/;"	f
_has_list_or_dict_variable_index	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _has_list_or_dict_variable_index(self):$/;"	m	class:VariableSplitter
_has_xcode_tools	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def _has_xcode_tools(self):$/;"	m	class:Subversion
_head_file	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    _head_file = None$/;"	v	class:Git
_hex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    _hex = r'[0-9a-fA-F_]'$/;"	v	class:BroLexer
_highlight_lines	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _highlight_lines(self, tokensource):$/;"	m	class:HtmlFormatter
_id	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    _id = r'[A-Za-z]\\w*'$/;"	v	class:AntlrLexer
_ident_begin	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:PhpLexer
_ident_begin	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    _ident_begin = r'(?:[\\\\_a-z]|[^\\x00-\\x7f])'$/;"	v	class:TwigLexer
_ident_char	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    _ident_char = r'[\\\\\\w]|[^\\x00-\\x7f]'$/;"	v	class:PhpLexer
_ident_char	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    _ident_char = r'[\\\\\\w-]|[^\\x00-\\x7f]'$/;"	v	class:TwigLexer
_ident_end	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:PhpLexer
_ident_end	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    _ident_end = r'(?:' + _ident_char + ')*'$/;"	v	class:TwigLexer
_ident_inner	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:PhpLexer
_ident_inner	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    _ident_inner = _ident_begin + _ident_end$/;"	v	class:TwigLexer
_identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_identifier = r'[_a-zA-Z]\\w*'$/;"	v
_implementation	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^def _implementation():$/;"	f
_import_OrderedDict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def _import_OrderedDict():$/;"	f
_import_c_make_encoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def _import_c_make_encoder():$/;"	f
_import_c_make_scanner	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^def _import_c_make_scanner():$/;"	f
_import_c_scanstring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^def _import_c_scanstring():$/;"	f
_import_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def _import_module(name):$/;"	f
_import_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def _import_module(name):$/;"	f
_import_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _import_settings = ('library', 'resource', 'variables')$/;"	v	class:Setting
_import_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _import_settings = ()$/;"	v	class:TestCaseSetting
_import_speedups	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^def _import_speedups():$/;"	f
_importer	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_importer = _SixMetaPathImporter(__name__)$/;"	v
_importer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_importer = _SixMetaPathImporter(__name__)$/;"	v
_indent	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _indent(self):$/;"	m	class:HelpFormatter
_indentation	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^def _indentation(lexer, match, ctx):$/;"	f
_inexact_normal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_normal = r'(?:%s%s?)' % (_inexact_simple, _exponent)$/;"	v	class:RacketLexer
_inexact_normal_no_hashes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_normal_no_hashes = r'(?:%s%s?)' % (_inexact_simple_no_hashes,$/;"	v	class:RacketLexer
_inexact_real	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_real = r'(?:[-+]?%s|[-+]%s)' % (_inexact_normal,$/;"	v	class:RacketLexer
_inexact_simple	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_simple = (r'(?:%s|(?:\\d+#+(?:\\.#*|\/\\d+#*)?|\\.\\d+#+|'$/;"	v	class:RacketLexer
_inexact_simple_no_hashes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_simple_no_hashes = r'(?:\\d+(?:\/\\d+|\\.\\d*)?|\\.\\d+)'$/;"	v	class:RacketLexer
_inexact_special	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_special = r'(?:(?:inf|nan)\\.[0f])'$/;"	v	class:RacketLexer
_inexact_unsigned	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _inexact_unsigned = r'(?:%s|%s)' % (_inexact_normal, _inexact_special)$/;"	v	class:RacketLexer
_inherit	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class _inherit(object):$/;"	c
_init_decoder	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _init_decoder(self):$/;"	m	class:HTTPResponse
_init_length	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _init_length(self, request_method):$/;"	m	class:HTTPResponse
_innerLexerCls	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _innerLexerCls = BashLexer$/;"	v	class:BashSessionLexer
_innerLexerCls	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _innerLexerCls = BatchLexer$/;"	v	class:MSDOSSessionLexer
_innerLexerCls	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _innerLexerCls = PowerShellLexer$/;"	v	class:PowerShellSessionLexer
_innerLexerCls	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _innerLexerCls = TcshLexer$/;"	v	class:TcshSessionLexer
_internal_variable_start_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _internal_variable_start_state(self, char, index):$/;"	m	class:VariableSplitter
_interpolate_some	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _interpolate_some(self, parser, option, accum, rest, section, map,$/;"	m	class:BasicInterpolation
_interpolate_some	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _interpolate_some(self, parser, option, accum, rest, section, map,$/;"	m	class:ExtendedInterpolation
_interpolation_replace	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _interpolation_replace(match, parser):$/;"	m	class:LegacyInterpolation
_ipaddress_match	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def _ipaddress_match(ipname, host_ip):$/;"	f
_ipv6_host	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^def _ipv6_host(host):$/;"	f
_is_assign	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_assign(self, value):$/;"	m	class:Tokenizer
_is_cert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _is_cert(item):$/;"	f
_is_connection_error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def _is_connection_error(self, err):$/;"	m	class:Retry
_is_empty	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_empty(self, value):$/;"	m	class:_Table
_is_escaped	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_escaped(self, string, index):$/;"	m	class:VariableSplitter
_is_for_loop	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_for_loop(self, value):$/;"	m	class:TestCaseTable
_is_identity	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _is_identity(item):$/;"	f
_is_list_or_dict_variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_list_or_dict_variable(self):$/;"	m	class:VariableSplitter
_is_mac	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def _is_mac(self):$/;"	m	class:Subversion
_is_method_retryable	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def _is_method_retryable(self, method):$/;"	m	class:Retry
_is_namedtuple	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_is_namedtuple(PyObject *obj)$/;"	f	typeref:typename:int	file:
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _is_pos_zero(pos):$/;"	f
_is_read_error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def _is_read_error(self, err):$/;"	m	class:Retry
_is_script	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def _is_script(cp, script):$/;"	f
_is_setting	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_setting(self, value):$/;"	m	class:TestCaseTable
_is_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:KeywordTable
_is_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_template(self, value):$/;"	m	class:TestCaseTable
_is_template_set	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _is_template_set(self, template):$/;"	m	class:TestCaseTable
_is_worktree	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _is_worktree(self, link_path):$/;"	m	class:Git
_isdst	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def _isdst(self, dt):$/;"	m	class:LocalTimezone
_iter_indented_subactions	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _iter_indented_subactions(self, action):$/;"	m	class:HelpFormatter
_iter_lexerclasses	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def _iter_lexerclasses(plugins=True):$/;"	f
_iterencode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode(o, _current_indent_level):$/;"	f	function:_make_iterencode	file:
_iterencode_dict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode_dict(dct, _current_indent_level):$/;"	f	function:_make_iterencode	file:
_iterencode_list	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def _iterencode_list(lst, _current_indent_level):$/;"	f	function:_make_iterencode	file:
_jQuery	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var _jQuery = window.jQuery,$/;"	v
_join_multiline_values	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _join_multiline_values(self):$/;"	m	class:RawConfigParser
_join_parts	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _join_parts(self, part_strings):$/;"	m	class:HelpFormatter
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, backwards=False):$/;"	m	class:SnippetManager
_key_fields	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^_key_fields = ($/;"	v
_key_from_fd	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def _key_from_fd(self, fd):$/;"	m	class:BaseSelector
_keyword_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _keyword_settings = ('setup', 'precondition', 'teardown', 'postcondition',$/;"	v	class:TestCaseSetting
_keyword_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _keyword_settings = ('suitesetup', 'suiteprecondition', 'suiteteardown',$/;"	v	class:Setting
_keyword_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _keyword_settings = ('teardown',)$/;"	v	class:KeywordSetting
_keyword_terminator	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _keyword_terminator = (r'(?=(?:\\^[%s]?)?[%s+.\/:[\\\\\\]]|[%s%s(])' %$/;"	v	class:BatchLexer
_keyword_values	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_keyword_values = ($/;"	v
_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    _keywords = (r'(?:FROM|MAINTAINER|CMD|EXPOSE|ENV|ADD|ENTRYPOINT|'$/;"	v	class:DockerLexer
_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _keywords = ($/;"	v	class:CPSALexer
_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _keywords = ($/;"	v	class:RacketLexer
_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_keywords = [$/;"	v
_label	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _label = r'(?:(?:[^%s%s%s+:^]|\\^[%s]?[\\w\\W])*)' % (_nl, _punct, _ws, _nl)$/;"	v	class:BatchLexer
_label_compound	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _label_compound = (r'(?:(?:[^%s%s%s+:^)]|\\^[%s]?[^)])*)' %$/;"	v	class:BatchLexer
_lazy	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazyList.__new__.lazy	file:
_lazy	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^            def _lazy(self, *args, **kw):$/;"	f	function:LazySet.__new__.lazy	file:
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_length_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_length_units = ($/;"	v
_lex_fortran	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    def _lex_fortran(self, match, ctx=None):$/;"	m	class:FortranFixedLexer
_lexer_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^_lexer_cache = {}$/;"	v
_line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    _line_re = re.compile('.*?\\n')$/;"	v	class:DylanConsoleLexer
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_list_variable_index_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_lmowfv1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_hash.py	/^def _lmowfv1(password):$/;"	f
_load_client_cert_chain	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _load_client_cert_chain(keychain, *paths):$/;"	f
_load_formatters	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def _load_formatters(module_name):$/;"	f
_load_items_from_file	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _load_items_from_file(keychain, path):$/;"	f
_load_lexers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def _load_lexers(module_name):$/;"	f
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_logos_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    _logos_keywords = re.compile(r'%(?:hook|ctor|init|c\\()')$/;"	v	class:LogosLexer
_looks_like_xml_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^_looks_like_xml_cache = {}$/;"	v
_lookup_ctag	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _lookup_ctag(self, token):$/;"	m	class:HtmlFormatter
_lookup_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^def _lookup_style(style):$/;"	f
_lookup_win	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _lookup_win(self, key, basename, styles, fail=False):$/;"	m	class:FontManager
_make_arithmetic_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_arithmetic_state(compound, _nl=_nl, _punct=_punct,$/;"	m	class:BatchLexer
_make_attribute_value_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def _make_attribute_value_state(terminator, host_triple, host_double,$/;"	m	class:Tads3Lexer
_make_begin_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_begin_state(compound, _core_token=_core_token,$/;"	m	class:BatchLexer
_make_call_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_call_state(compound, _label=_label,$/;"	m	class:BatchLexer
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _make_debug_exception(self, e, code=''):$/;"	m	class:SnippetDefinition
_make_follow_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_follow_state(compound, _label=_label,$/;"	m	class:BatchLexer
_make_iterencode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,$/;"	f
_make_label_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_label_state(compound, _label=_label,$/;"	m	class:BatchLexer
_make_redirect_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def _make_redirect_state(compound,$/;"	m	class:BatchLexer
_make_request	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _make_request(self, conn, method, url, timeout=_Default, chunked=False,$/;"	m	class:HTTPConnectionPool
_make_string_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def _make_string_state(triple, double, verbatim=None, _escape=_escape):$/;"	m	class:Tads3Lexer
_make_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    def _make_styles(self):$/;"	m	class:BBCodeFormatter
_make_tag_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def _make_tag_state(triple, double, _escape=_escape):$/;"	m	class:Tads3Lexer
_makemethod	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^def _makemethod(name):$/;"	f
_match_argument	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _match_argument(self, action, arg_strings_pattern):$/;"	m	class:ArgumentParser
_match_arguments_partial	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _match_arguments_partial(self, actions, arg_strings_pattern):$/;"	m	class:ArgumentParser
_match_hostname	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^def _match_hostname(cert, asserted_hostname):$/;"	f
_match_number_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_match_number_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t start, Py_ssize_t *next_idx_pt/;"	f	typeref:typename:PyObject *	file:
_match_number_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_match_number_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t start, Py_ssize_t *next_id/;"	f	typeref:typename:PyObject *	file:
_merge_pool_kwargs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def _merge_pool_kwargs(self, override):$/;"	m	class:PoolManager
_metavar_formatter	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _metavar_formatter(self, action, default_metavar):$/;"	m	class:HelpFormatter
_meth_func	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _meth_func = "__func__"$/;"	v
_meth_func	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _meth_func = "__func__"$/;"	v
_meth_self	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _meth_self = "__self__"$/;"	v
_meth_self	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _meth_self = "im_self"$/;"	v
_meth_self	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _meth_self = "__self__"$/;"	v
_meth_self	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _meth_self = "im_self"$/;"	v
_methods	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_methods = ['method', 'to']$/;"	v
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _moved_attributes = []$/;"	v	class:_LazyModule
_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_moved_attributes = [$/;"	v
_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _moved_attributes = []$/;"	v	class:_LazyModule
_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_moved_attributes = [$/;"	v
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _multi_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_multi_escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    def _multi_escape(entries):$/;"	m	class:MathematicaLexer
_multi_escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _multi_escape(entries):$/;"	m	class:HyLexer
_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _name = r'(?:[_a-zA-Z]\\w*)'$/;"	v	class:Tads3Lexer
_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _name = r'[a-zA-Z_]\\w*'$/;"	v	class:Inform6Lexer
_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _name = r'[^%s]+' % _separator$/;"	v	class:JasminLexer
_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    _name = r"(?:'(?:[^\\\\']|\\\\.)+'|[a-zA-Z_]\\w*)"$/;"	v	class:ModelicaLexer
_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _name = r'(?:[^\\W\\d]\\w*)'$/;"	v	class:LuaLexer
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_negotiate_HTTP	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _negotiate_HTTP(self, dest_addr, dest_port):$/;"	m	class:socksocket
_negotiate_SOCKS4	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _negotiate_SOCKS4(self, dest_addr, dest_port):$/;"	m	class:socksocket
_negotiate_SOCKS5	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _negotiate_SOCKS5(self, *dest_addr):$/;"	m	class:socksocket
_new_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def _new_conn(self):$/;"	m	class:HTTPConnection
_new_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _new_conn(self):$/;"	m	class:HTTPConnectionPool
_new_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _new_conn(self):$/;"	m	class:HTTPSConnectionPool
_new_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^    def _new_conn(self):$/;"	m	class:NTLMConnectionPool
_new_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    def _new_conn(self):$/;"	m	class:SOCKSConnection
_new_pool	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def _new_pool(self, scheme, host, port, request_context=None):$/;"	m	class:PoolManager
_newline	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _newline = Inform6Lexer._newline$/;"	v	class:Inform7Lexer
_newline	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _newline = u'\\\\n\\u0085\\u2028\\u2029'$/;"	v	class:Inform6Lexer
_nl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _nl = r'\\n\\x1a'$/;"	v	class:BatchLexer
_no_quote	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _no_quote = r'(?=\\s|\\\\?>)'$/;"	v	class:Tads3Lexer
_notime	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^_notime = memorized_timedelta(0)$/;"	v
_ntowfv1	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_hash.py	/^def _ntowfv1(password):$/;"	f
_ntowfv2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_hash.py	/^def _ntowfv2(user_name, password, domain_name):$/;"	f
_null	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^_null = '\\x00'.encode('ascii')  # encoding to ASCII for Python 3$/;"	v
_null2	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^_null2 = _null * 2$/;"	v
_null3	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^_null3 = _null * 3$/;"	v
_number	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _number = r'(?:-?(?:0[0-7]+|0x[\\da-f]+|\\d+)%s)' % _token_terminator$/;"	v	class:BatchLexer
_objdump_lexer_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^def _objdump_lexer_tokens(asm_lexer):$/;"	f
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _one_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_opening_parenthesis	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _opening_parenthesis = r'[([{]'$/;"	v	class:RacketLexer
_openssl_to_stdlib_verify	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^_openssl_to_stdlib_verify = dict($/;"	v
_openssl_versions	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^_openssl_versions = {$/;"	v
_operator	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _operator = (r'(?:&&|\\|\\||\\+\\+|--|\\?\\?|::|[.,@\\[\\]~]|'$/;"	v	class:Tads3Lexer
_operator_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    _operator_re = ($/;"	v	class:CoffeeScriptLexer
_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_operators = [$/;"	v
_options	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _options(self):$/;"	m	class:SectionProxy
_opword	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _opword = r'(?:equ|geq|gtr|leq|lss|neq)'$/;"	v	class:BatchLexer
_orgsocket	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^_orgsocket = _orig_socket = socket.socket$/;"	v
_os	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^import os as _os$/;"	I
_other_keyword_values	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_other_keyword_values = ($/;"	v
_other_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'arguments', 'return', 'timeout', 'tags')$/;"	v	class:KeywordSetting
_other_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'metadata', 'forcetags', 'defaulttags',$/;"	v	class:Setting
_other_settings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _other_settings = ('documentation', 'tags', 'timeout')$/;"	v	class:TestCaseSetting
_p	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def _p(*args):$/;"	f
_paint_line_number_bg	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def _paint_line_number_bg(self, im):$/;"	m	class:ImageFormatter
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_array_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_array_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	typeref:typename:PyObject *	file:
_parse_array_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_array_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_p/;"	f	typeref:typename:PyObject *	file:
_parse_comments	plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_constant	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_constant(PyScannerObject *s, char *constant, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	typeref:typename:PyObject *	file:
_parse_filters	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def _parse_filters(f_strs):$/;"	f
_parse_known_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _parse_known_args(self, arg_strings, namespace):$/;"	m	class:ArgumentParser
_parse_list_header	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^from .compat import parse_http_list as _parse_list_header$/;"	x
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_object_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_object_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	typeref:typename:PyObject *	file:
_parse_object_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_parse_object_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_/;"	f	typeref:typename:PyObject *	file:
_parse_optional	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _parse_optional(self, arg_string):$/;"	m	class:ArgumentParser
_parse_options	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def _parse_options(o_strs):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_path_from_gitdir_link_file	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _path_from_gitdir_link_file(self, path):$/;"	m	class:Git
_path_from_gitdir_string	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _path_from_gitdir_string(self, path, line):$/;"	m	class:Git
_pattern_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^_pattern_cache = {}$/;"	v
_pattern_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^_pattern_cache = {}$/;"	v
_pipe_splitter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _pipe_splitter = re.compile('((?:^| +)\\|(?: +|$))')$/;"	v	class:RowSplitter
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	member:SnippetInstance.replace_initial_text	file:
_pop_action_class	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _pop_action_class(self, kwargs, default=None):$/;"	m	class:_ActionsContainer
_prepare_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def _prepare_conn(self, conn):$/;"	m	class:HTTPConnection
_prepare_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _prepare_conn(self, conn):$/;"	m	class:HTTPSConnectionPool
_prepare_proxy	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _prepare_proxy(self, conn):$/;"	m	class:HTTPConnectionPool
_prepare_proxy	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _prepare_proxy(self, conn):$/;"	m	class:HTTPSConnectionPool
_print	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    _print = print_$/;"	v
_print	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    _print = print_$/;"	v
_print_help	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def _print_help(what, name):$/;"	f
_print_list	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def _print_list(what):$/;"	f
_print_message	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _print_message(self, message, file=None):$/;"	m	class:ArgumentParser
_process_attribute	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def _process_attribute(self, token, content):$/;"	m	class:HtmlParser
_process_attribute	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_attribute(self, token, content):$/;"	m	class:JavaParser
_process_class	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _process_class(self, token, content):$/;"	m	class:ElmParser
_process_class	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_class(self, token, content):$/;"	m	class:SwiftParser
_process_declaration	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_declaration(self, token, content):$/;"	m	class:SwiftParser
_process_declaration	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _process_declaration(self, declaration, tokens):$/;"	m	class:ShenLexer
_process_declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _process_declarations(self, tokens):$/;"	m	class:ShenLexer
_process_file_name	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def _process_file_name(self, file_name):$/;"	m	class:JsonParser
_process_file_name	plugged/vim-wakatime/packages/wakatime/dependencies/unknown.py	/^    def _process_file_name(self, file_name):$/;"	m	class:UnknownParser
_process_function	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_function(self, token, content):$/;"	m	class:PhpParser
_process_import	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_import(self, token, content):$/;"	m	class:ObjectiveCParser
_process_import	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_import(self, token, content):$/;"	m	class:PythonParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def _process_keyword(self, token, content):$/;"	m	class:CSharpParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_keyword(self, token, content):$/;"	m	class:HaskellParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_keyword(self, token, content):$/;"	m	class:KotlinParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_keyword(self, token, content):$/;"	m	class:ScalaParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_keyword(self, token, content):$/;"	m	class:PhpParser
_process_keyword	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def _process_keyword(self, token, content):$/;"	m	class:RustParser
_process_literal_string	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def _process_literal_string(self, token, content):$/;"	m	class:JsonParser
_process_literal_string	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_literal_string(self, token, content):$/;"	m	class:PhpParser
_process_misc	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_misc(self, token, content):$/;"	m	class:GoParser
_process_name	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_name(self, token, content):$/;"	m	class:JavaParser
_process_name	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_name(self, token, content):$/;"	m	class:PhpParser
_process_name	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def _process_name(self, token, content):$/;"	m	class:RustParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def _process_namespace(self, token, content):$/;"	m	class:CSharpParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _process_namespace(self, token, content):$/;"	m	class:ElmParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_namespace(self, token, content):$/;"	m	class:GoParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_namespace(self, token, content):$/;"	m	class:HaskellParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def _process_namespace(self, token, content):$/;"	m	class:HaxeParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_namespace(self, token, content):$/;"	m	class:JavaParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_namespace(self, token, content):$/;"	m	class:KotlinParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_namespace(self, token, content):$/;"	m	class:ScalaParser
_process_namespace	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_namespace(self, token, content):$/;"	m	class:PythonParser
_process_new_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def _process_new_state(cls, new_state, unprocessed, processed):$/;"	m	class:RegexLexerMeta
_process_operator	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_operator(self, token, content):$/;"	m	class:JavaParser
_process_operator	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_operator(self, token, content):$/;"	m	class:PythonParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    def _process_other(self, token, content):$/;"	m	class:CParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def _process_other(self, token, content):$/;"	m	class:CSharpParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _process_other(self, token, content):$/;"	m	class:ElmParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_other(self, token, content):$/;"	m	class:GoParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_other(self, token, content):$/;"	m	class:HaskellParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def _process_other(self, token, content):$/;"	m	class:HaxeParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _process_other(self, token, content):$/;"	m	class:JavascriptParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_other(self, token, content):$/;"	m	class:JavaParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_other(self, token, content):$/;"	m	class:KotlinParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_other(self, token, content):$/;"	m	class:ScalaParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_other(self, token, content):$/;"	m	class:ObjectiveCParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_other(self, token, content):$/;"	m	class:SwiftParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_other(self, token, content):$/;"	m	class:PhpParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_other(self, token, content):$/;"	m	class:PythonParser
_process_other	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def _process_other(self, token, content):$/;"	m	class:RustParser
_process_preproc	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    def _process_preproc(self, token, content):$/;"	m	class:CParser
_process_preproc	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_preproc(self, token, content):$/;"	m	class:ObjectiveCParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:JsonParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:CSharpParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:GoParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:HtmlParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:JavascriptParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:PhpParser
_process_punctuation	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_punctuation(self, token, content):$/;"	m	class:PythonParser
_process_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:ProfilingRegexLexerMeta
_process_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def _process_regex(cls, regex, rflags, state):$/;"	m	class:RegexLexerMeta
_process_reserved	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_reserved(self, token, content):$/;"	m	class:HaskellParser
_process_reserved	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _process_reserved(self, token, content):$/;"	m	class:JavascriptParser
_process_server_results	plugged/vim-wakatime/packages/wakatime/api.py	/^def _process_server_results(heartbeats, code, content, results, args, configs):$/;"	f
_process_signature	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _process_signature(self, tokens):$/;"	m	class:ShenLexer
_process_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def _process_state(cls, unprocessed, processed, state):$/;"	m	class:RegexLexerMeta
_process_string	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_string(self, token, content):$/;"	m	class:GoParser
_process_string	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def _process_string(self, token, content):$/;"	m	class:HtmlParser
_process_string	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _process_string(self, token, content):$/;"	m	class:JavascriptParser
_process_symbols	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _process_symbols(self, tokens):$/;"	m	class:ShenLexer
_process_tag	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def _process_tag(self, token, content):$/;"	m	class:JsonParser
_process_tag	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def _process_tag(self, token, content):$/;"	m	class:HtmlParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _process_text(self, token, content):$/;"	m	class:ElmParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_text(self, token, content):$/;"	m	class:GoParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_text(self, token, content):$/;"	m	class:HaskellParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def _process_text(self, token, content):$/;"	m	class:HaxeParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_text(self, token, content):$/;"	m	class:KotlinParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_text(self, token, content):$/;"	m	class:ScalaParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_text(self, token, content):$/;"	m	class:PhpParser
_process_text	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_text(self, token, content):$/;"	m	class:PythonParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    def _process_token(self, token, content):$/;"	m	class:CParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def _process_token(self, token, content):$/;"	m	class:JsonParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def _process_token(self, token, content):$/;"	m	class:CSharpParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def _process_token(self, token, content):$/;"	m	class:ElmParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def _process_token(self, token, content):$/;"	m	class:GoParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def _process_token(self, token, content):$/;"	m	class:HaskellParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def _process_token(self, token, content):$/;"	m	class:HaxeParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def _process_token(self, token, content):$/;"	m	class:HtmlParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def _process_token(self, token, content):$/;"	m	class:JavascriptParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_token(self, token, content):$/;"	m	class:JavaParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_token(self, token, content):$/;"	m	class:KotlinParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def _process_token(self, token, content):$/;"	m	class:ScalaParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_token(self, token, content):$/;"	m	class:ObjectiveCParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def _process_token(self, token, content):$/;"	m	class:SwiftParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def _process_token(self, token, content):$/;"	m	class:PhpParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def _process_token(self, token, content):$/;"	m	class:PythonParser
_process_token	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def _process_token(self, token, content):$/;"	m	class:RustParser
_process_token	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def _process_token(cls, token):$/;"	m	class:RegexLexerMeta
_process_whitespace	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def _process_whitespace(self, token, content):$/;"	m	class:RustParser
_prof_data	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    _prof_data = []$/;"	v	class:ProfilingRegexLexer
_prof_sort_index	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    _prof_sort_index = 4  # defaults to time per call$/;"	v	class:ProfilingRegexLexer
_project_folder	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    _project_folder = None$/;"	v	class:Git
_project_from_worktree	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _project_from_worktree(self, link_path):$/;"	m	class:Git
_project_name	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    _project_name = None$/;"	v	class:Git
_prompt_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    _prompt_re = re.compile('\\?| ')$/;"	v	class:DylanConsoleLexer
_prompt_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    _prompt_re = re.compile('(iex|\\.{3})(\\(\\d+\\))?> ')$/;"	v	class:ElixirConsoleLexer
_prompt_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    _prompt_re = re.compile(r'\\d+>(?=\\s|\\Z)')$/;"	v	class:ErlangShellLexer
_prompt_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    _prompt_re = re.compile('irb\\([a-zA-Z_]\\w*\\):\\d{3}:\\d+[>*"\\'] '$/;"	v	class:RubyConsoleLexer
_props	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    _props = ($/;"	v	class:LazySet
_props	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    _props = [$/;"	v	class:LazyList
_protocol_to_min_max	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^_protocol_to_min_max = {$/;"	v
_proxy_addr	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _proxy_addr(self):$/;"	m	class:socksocket
_proxy_negotiators	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    _proxy_negotiators = {$/;"	v	class:socksocket
_ps1rgx	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps1rgx = \\$/;"	v	class:BashSessionLexer
_ps1rgx	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps1rgx = r'^(PS [^>]+> )(.*\\n?)'$/;"	v	class:PowerShellSessionLexer
_ps1rgx	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps1rgx = r'^([^>]+>)(.*\\n?)'$/;"	v	class:MSDOSSessionLexer
_ps1rgx	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps1rgx = r'^([^>]+>)(.*\\n?)'$/;"	v	class:TcshSessionLexer
_ps2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps2 = '>'$/;"	v	class:BashSessionLexer
_ps2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps2 = '>> '$/;"	v	class:PowerShellSessionLexer
_ps2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps2 = '? '$/;"	v	class:TcshSessionLexer
_ps2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ps2 = 'More? '$/;"	v	class:MSDOSSessionLexer
_punct	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _punct = r'&<>|'$/;"	v	class:BatchLexer
_punycode	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def _punycode(s):$/;"	f
_put_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _put_conn(self, conn):$/;"	m	class:HTTPConnectionPool
_python	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    _python = r'py(?:t(?:h(?:o(?:n)?)?)?)?'$/;"	v	class:VimLexer
_raise_on_error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _raise_on_error(self):$/;"	m	class:WrappedSocket
_raise_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _raise_timeout(self, err, url, timeout_value):$/;"	m	class:HTTPConnectionPool
_random_generator	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    def _random_generator(self):$/;"	m	class:ARC4
_re	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^import re as _re$/;"	I
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_read	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _read(self, fp, fpname):$/;"	m	class:RawConfigParser
_read_SOCKS5_address	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _read_SOCKS5_address(self, file):$/;"	m	class:socksocket
_read_args_from_files	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _read_args_from_files(self, arg_strings):$/;"	m	class:ArgumentParser
_read_callback	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^def _read_callback(connection_id, data_buffer, data_length_pointer):$/;"	f
_read_callback_pointer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^_read_callback_pointer = Security.SSLReadFunc(_read_callback)$/;"	v
_readall	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _readall(self, file, count):$/;"	m	class:socksocket
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_registry_get	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _registry_get(self, registry_name, value, default=None):$/;"	m	class:_ActionsContainer
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_relevant	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def _relevant(self, token):$/;"	m	class:ShenLexer
_remove_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ActionsContainer
_remove_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_ArgumentGroup
_remove_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _remove_action(self, action):$/;"	m	class:_MutuallyExclusiveGroup
_render_part	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def _render_part(self, name, value):$/;"	m	class:RequestField
_render_parts	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def _render_parts(self, header_parts):$/;"	m	class:RequestField
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_special	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^def _replace_special(ttype, value, regex, specialttype,$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_reset_stringescapes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def _reset_stringescapes(self):$/;"	m	class:SnowballLexer
_resolution_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_resolution_units = ($/;"	v
_resolve	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedAttribute
_resolve	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedModule
_resolve	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedAttribute
_resolve	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def _resolve(self):$/;"	m	class:MovedModule
_resolve_name	plugged/vim-wakatime/packages/wakatime/compat.py	/^    def _resolve_name(name, package, level):$/;"	f
_reuse	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def _reuse(self):$/;"	m	class:WrappedSocket
_reuse	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _reuse(self):$/;"	m	class:WrappedSocket
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_rx_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^def _rx_indent(level):$/;"	f
_s	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _s = r'(?:%s|%s|%s)' % (_comment_multiline, _comment_single, _space)$/;"	v	class:LuaLexer
_safeScope	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^_safeScope = [$/;"	v
_sanitize_metadata	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _sanitize_metadata(self):$/;"	m	class:Heartbeat
_save_dependency	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def _save_dependency(self, dep, truncate=False, separator=None,$/;"	m	class:TokenParser
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_savenames	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    _savenames = list()$/;"	v	class:_BaseSocket
_scan_once	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^    def _scan_once(string, idx):$/;"	f	function:py_make_scanner	file:
_scanning_list_variable_index	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _scanning_list_variable_index(self):$/;"	m	class:VariableSplitter
_seal_message	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def _seal_message(self, message):$/;"	m	class:SessionSecurity
_seg_0	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_0():$/;"	f
_seg_1	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_1():$/;"	f
_seg_10	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_10():$/;"	f
_seg_11	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_11():$/;"	f
_seg_12	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_12():$/;"	f
_seg_13	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_13():$/;"	f
_seg_14	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_14():$/;"	f
_seg_15	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_15():$/;"	f
_seg_16	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_16():$/;"	f
_seg_17	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_17():$/;"	f
_seg_18	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_18():$/;"	f
_seg_19	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_19():$/;"	f
_seg_2	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_2():$/;"	f
_seg_20	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_20():$/;"	f
_seg_21	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_21():$/;"	f
_seg_22	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_22():$/;"	f
_seg_23	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_23():$/;"	f
_seg_24	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_24():$/;"	f
_seg_25	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_25():$/;"	f
_seg_26	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_26():$/;"	f
_seg_27	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_27():$/;"	f
_seg_28	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_28():$/;"	f
_seg_29	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_29():$/;"	f
_seg_3	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_3():$/;"	f
_seg_30	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_30():$/;"	f
_seg_31	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_31():$/;"	f
_seg_32	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_32():$/;"	f
_seg_33	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_33():$/;"	f
_seg_34	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_34():$/;"	f
_seg_35	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_35():$/;"	f
_seg_36	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_36():$/;"	f
_seg_37	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_37():$/;"	f
_seg_38	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_38():$/;"	f
_seg_39	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_39():$/;"	f
_seg_4	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_4():$/;"	f
_seg_40	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_40():$/;"	f
_seg_41	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_41():$/;"	f
_seg_42	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_42():$/;"	f
_seg_43	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_43():$/;"	f
_seg_44	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_44():$/;"	f
_seg_45	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_45():$/;"	f
_seg_46	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_46():$/;"	f
_seg_47	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_47():$/;"	f
_seg_48	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_48():$/;"	f
_seg_49	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_49():$/;"	f
_seg_5	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_5():$/;"	f
_seg_50	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_50():$/;"	f
_seg_51	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_51():$/;"	f
_seg_52	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_52():$/;"	f
_seg_53	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_53():$/;"	f
_seg_54	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_54():$/;"	f
_seg_55	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_55():$/;"	f
_seg_56	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_56():$/;"	f
_seg_57	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_57():$/;"	f
_seg_58	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_58():$/;"	f
_seg_59	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_59():$/;"	f
_seg_6	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_6():$/;"	f
_seg_60	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_60():$/;"	f
_seg_61	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_61():$/;"	f
_seg_62	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_62():$/;"	f
_seg_63	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_63():$/;"	f
_seg_64	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_64():$/;"	f
_seg_65	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_65():$/;"	f
_seg_66	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_66():$/;"	f
_seg_67	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_67():$/;"	f
_seg_68	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_68():$/;"	f
_seg_69	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_69():$/;"	f
_seg_7	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_7():$/;"	f
_seg_70	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_70():$/;"	f
_seg_71	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_71():$/;"	f
_seg_72	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_72():$/;"	f
_seg_8	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_8():$/;"	f
_seg_9	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^def _seg_9():$/;"	f
_select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def _select(self, r, w, timeout=None):$/;"	m	class:SelectSelector
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_send_until_done	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def _send_until_done(self, data):$/;"	m	class:WrappedSocket
_sensitive	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    _sensitive = ('dependencies', 'lines', 'lineno', 'cursorpos', 'branch')$/;"	v	class:Heartbeat
_separator	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _separator = r'%s:=' % _whitespace$/;"	v	class:JasminLexer
_set_ciphers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def _set_ciphers(self):$/;"	m	class:WrappedSocket
_set_ntlm_compatibility_flags	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^    def _set_ntlm_compatibility_flags(self, ntlm_compatibility):$/;"	m	class:Ntlm
_set_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _set_pos(name, pos):$/;"	f
_set_proxy_headers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def _set_proxy_headers(self, url, headers=None):$/;"	m	class:ProxyManager
_set_socket_options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^def _set_socket_options(sock, options):$/;"	f
_setting_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _setting_class = KeywordSetting$/;"	v	class:KeywordTable
_setting_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _setting_class = TestCaseSetting$/;"	v	class:TestCaseTable
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_setup_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _setup_styles(self):$/;"	m	class:Terminal256Formatter
_setup_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def _setup_styles(self):$/;"	m	class:TerminalTrueColorFormatter
_shortened	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^def _shortened(word):$/;"	f
_shortened_many	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^def _shortened_many(*words):$/;"	f
_sleep_backoff	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def _sleep_backoff(self):$/;"	m	class:Retry
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_space	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    _space = r'(?:\\s+)'$/;"	v	class:LuaLexer
_space	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _space = r'(?:(?:(?:\\^[%s])?[%s])+)' % (_nl, _ws)$/;"	v	class:BatchLexer
_space_splitter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _space_splitter = re.compile('( {2,})')$/;"	v	class:RowSplitter
_split	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _split(self, string):$/;"	m	class:VariableSplitter
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _split_conditional(string):$/;"	f
_split_from_pipes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _split_from_pipes(self, row):$/;"	m	class:RowSplitter
_split_from_spaces	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _split_from_spaces(self, row):$/;"	m	class:RowSplitter
_split_lines	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:HelpFormatter
_split_lines	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def _split_lines(self, text, width):$/;"	m	class:RawTextHelpFormatter
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_splitdrive	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _splitdrive(self, filepath):$/;"	m	class:Heartbeat
_squote	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _squote = u"'\\u2018\\u2019"$/;"	v	class:Inform6Lexer
_start	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _start = r'\\A|(?<=[%s])' % _newline$/;"	v	class:Inform7Lexer
_start_index_is_ok	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _start_index_is_ok(self, string, index):$/;"	m	class:VariableSplitter
_start_label	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _start_label = r'((?:(?<=^[^:])|^[^:]?)[%s]*)(:)' % _ws$/;"	v	class:BatchLexer
_start_table	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _start_table(self, header):$/;"	m	class:RowTokenizer
_starts_block	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^def _starts_block(token, state):$/;"	f
_std_string	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^def _std_string(s):$/;"	f
_stdlib_to_openssl_verify	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^_stdlib_to_openssl_verify = {$/;"	v
_steal_accumulate	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^_steal_accumulate(JSON_Accu *accu, PyObject *stolen)$/;"	f	typeref:typename:int	file:
_stoken	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _stoken = (r'(?:[%s]+|(?:%s|%s|%s)+)' %$/;"	v	class:BatchLexer
_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def _string(do_string_first):$/;"	m	class:SnowballLexer
_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _string = r'(?:"[^%s"]*(?:"|(?=[%s])))' % (_nl, _nl)$/;"	v	class:BatchLexer
_stringescapes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def _stringescapes(lexer, match, ctx):$/;"	m	class:SnowballLexer
_stringify_key	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def _stringify_key(key):$/;"	f	function:_make_iterencode	file:
_submodule	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    _submodule = None$/;"	v	class:Git
_submodules_supported_for_path	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def _submodules_supported_for_path(self, path):$/;"	m	class:Git
_success	plugged/vim-wakatime/packages/wakatime/api.py	/^def _success(code):$/;"	f
_surrogatepair	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def _surrogatepair(c):$/;"	f
_symbol	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    _symbol = r'(?u)(?:\\|[^|]*\\||\\\\[\\w\\W]|[^|\\\\%s]+)+' % _delimiters$/;"	v	class:RacketLexer
_sys	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^import sys as _sys$/;"	I
_syscall_wrapper	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def _syscall_wrapper(func, _, *args, **kwargs):$/;"	f
_syscall_wrapper	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def _syscall_wrapper(func, recalc_timeout, *args, **kwargs):$/;"	f
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_temporary_keychain	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/low_level.py	/^def _temporary_keychain():$/;"	f
_test	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def _test():$/;"	f
_test_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _test_template = None$/;"	v	class:TestCaseTable
_textwrap	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^import textwrap as _textwrap$/;"	I
_time	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^import time as _time$/;"	I
_time_units	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_time_units = ($/;"	v
_timedelta_cache	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^_timedelta_cache = {}$/;"	v
_to_seconds	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^def _to_seconds(td):$/;"	f
_to_unc_path	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _to_unc_path(self, filepath):$/;"	m	class:Heartbeat
_to_unicode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def _to_unicode(obj):$/;"	f
_toggle_speedups	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def _toggle_speedups(enabled):$/;"	f
_token	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _token = r'(?:[%s]+|%s)' % (_punct, _core_token)$/;"	v	class:BatchLexer
_token_compound	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _token_compound = r'(?:[%s]+|%s)' % (_punct, _core_token_compound)$/;"	v	class:BatchLexer
_token_terminator	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _token_terminator = r'(?=\\^?[%s]|[%s%s])' % (_ws, _punct, _nl)$/;"	v	class:BatchLexer
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:ForLoop
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:KeywordCall
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Setting
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:SettingTable
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseSetting
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:TestCaseTable
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Tokenizer
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:Variable
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index):$/;"	m	class:_Table
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, value, index, commented, separator, heading):$/;"	m	class:RowTokenizer
_tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenize(self, var, string, orig_token):$/;"	m	class:VariableTokenizer
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokenizer_class = Comment$/;"	v	class:UnknownTable
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokenizer_class = KeywordCall$/;"	v	class:KeywordTable
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokenizer_class = None$/;"	v	class:_Table
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokenizer_class = Setting$/;"	v	class:SettingTable
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokenizer_class = Variable$/;"	v	class:VariableTable
_tokenizer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _tokenizer_class(self):$/;"	m	class:TestCaseTable
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (ARGUMENT,)$/;"	v	class:TemplatedKeywordCall
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (COMMENT,)$/;"	v	class:Comment
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (IMPORT, ARGUMENT)$/;"	v	class:ImportSetting
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (KEYWORD, ARGUMENT)$/;"	v	class:KeywordCall
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (SETTING, ARGUMENT)$/;"	v	class:Setting
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = (SYNTAX, ARGUMENT)$/;"	v	class:Variable
_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    _tokens = None$/;"	v	class:Tokenizer
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_transition_info	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _transition_info = None # [(utcoffset, dstoffset, tzname)] corresponding$/;"	v	class:DstTzInfo
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_ttinfo_cache	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^_ttinfo_cache = {}$/;"	v
_ttype_cache	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^_ttype_cache = {}$/;"	v
_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    _types = (':table', ':array', ':string', ':bin', ':import', ':intvector',$/;"	v	class:ResourceLexer
_tz_from_env	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/unix.py	/^def _tz_from_env(tzenv):$/;"	f
_tzinfo_cache	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^_tzinfo_cache = {}$/;"	v
_tzinfos	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _tzinfos = None$/;"	v	class:DstTzInfo
_tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    _tzname = zone$/;"	v	class:UTC
_tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _tzname = None$/;"	v	class:BaseTzInfo
_unc_columns	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _unc_columns(self, line):$/;"	m	class:Heartbeat
_unicode	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _unicode(self, value):$/;"	m	class:Heartbeat
_unicode_dots_re	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^_unicode_dots_re = re.compile(u'[\\u002e\\u3002\\uff0e\\uff61]')$/;"	v
_unicode_dots_re	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^_unicode_dots_re = re.compile(u'[\\u002e\\u3002\\uff0e\\uff61]')$/;"	v
_unicode_list	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def _unicode_list(self, values):$/;"	m	class:Heartbeat
_unify_values	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _unify_values(self, section, vars):$/;"	m	class:RawConfigParser
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_unmunge_zone	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def _unmunge_zone(zone):$/;"	f
_unot	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def _unot(s):$/;"	f
_unqualified_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _unqualified_name = r'(?:[^%s.;\\[\/]+)' % _separator$/;"	v	class:JasminLexer
_unseal_message	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def _unseal_message(self, message):$/;"	m	class:SessionSecurity
_unused_module_Queue	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    import Queue as _unused_module_Queue  # noqa: F401$/;"	I
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_update_chunk_length	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def _update_chunk_length(self):$/;"	m	class:HTTPResponse
_urlfetch_response_to_http_response	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def _urlfetch_response_to_http_response(self, urlfetch_resp, **response_kw):$/;"	m	class:AppEngineManager
_urllib_error_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_urllib_error_moved_attributes = [$/;"	v
_urllib_error_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_urllib_error_moved_attributes = [$/;"	v
_urllib_parse_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_urllib_parse_moved_attributes = [$/;"	v
_urllib_parse_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_urllib_parse_moved_attributes = [$/;"	v
_urllib_request_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_urllib_request_moved_attributes = [$/;"	v
_urllib_request_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_urllib_request_moved_attributes = [$/;"	v
_urllib_response_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_urllib_response_moved_attributes = [$/;"	v
_urllib_response_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_urllib_response_moved_attributes = [$/;"	v
_urllib_robotparser_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^_urllib_robotparser_moved_attributes = [$/;"	v
_urllib_robotparser_moved_attributes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^_urllib_robotparser_moved_attributes = [$/;"	v
_utc_transition_times	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _utc_transition_times = None # Sorted list of DST transition times in UTC$/;"	v	class:DstTzInfo
_utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    _utcoffset = ZERO$/;"	v	class:UTC
_utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    _utcoffset = None$/;"	v	class:BaseTzInfo
_validate_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _validate_conn(self, conn):$/;"	m	class:HTTPConnectionPool
_validate_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def _validate_conn(self, conn):$/;"	m	class:HTTPSConnectionPool
_validate_dependencies_met	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def _validate_dependencies_met():$/;"	f
_validate_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def _validate_timeout(cls, value, name):$/;"	m	class:Timeout
_validate_value_types	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _validate_value_types(self, **kwargs):$/;"	m	class:RawConfigParser
_var	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    _var = r'(\\w+|"(?:\\\\"|[^"])*")'$/;"	v	class:MscgenLexer
_variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _variable = (r'(?:(?:%%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|'$/;"	v	class:BatchLexer
_variable_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _variable_state(self, char, index):$/;"	m	class:VariableSplitter
_vendor_prefixes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^_vendor_prefixes = ($/;"	v
_ver	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^_ver = sys.version_info$/;"	v
_verify_callback	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def _verify_callback(cnx, x509, err_no, err_depth, return_code):$/;"	f
_verify_signature	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def _verify_signature(self, message, signature):$/;"	m	class:SessionSecurity
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(bytearray):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(string):$/;"	f
_vim_line_with_eol	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^        _vim_line_with_eol = lambda ln: _vim.buf[ln] + '\\n'$/;"	f	member:VisualContentPreserver.conserve	file:
_virama_combining_class	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^_virama_combining_class = 9$/;"	v
_wait_for_io_events	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/wait.py	/^def _wait_for_io_events(socks, events, timeout=None):$/;"	f
_waiting_list_variable_index_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def _waiting_list_variable_index_state(self, char, index):$/;"	m	class:VariableSplitter
_whitespace	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _whitespace = r' \\n\\t\\r'$/;"	v	class:JasminLexer
_winreg	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^        _winreg = None$/;"	v
_winreg	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^        import winreg as _winreg$/;"	I
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
_wrap_div	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_div(self, inner):$/;"	m	class:HtmlFormatter
_wrap_full	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_full(self, inner, outfile):$/;"	m	class:HtmlFormatter
_wrap_inlinelinenos	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_inlinelinenos(self, inner):$/;"	m	class:HtmlFormatter
_wrap_lineanchors	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_lineanchors(self, inner):$/;"	m	class:HtmlFormatter
_wrap_linespans	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_linespans(self, inner):$/;"	m	class:HtmlFormatter
_wrap_poll	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def _wrap_poll(self, timeout=None):$/;"	m	class:PollSelector
_wrap_pre	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_pre(self, inner):$/;"	m	class:HtmlFormatter
_wrap_tablelinenos	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def _wrap_tablelinenos(self, inner):$/;"	m	class:HtmlFormatter
_write_SOCKS5_address	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def _write_SOCKS5_address(self, addr, file):$/;"	m	class:socksocket
_write_callback	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^def _write_callback(connection_id, data_buffer, data_length_pointer):$/;"	f
_write_callback_pointer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^_write_callback_pointer = Security.SSLWriteFunc(_write_callback)$/;"	v
_write_lineno	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    def _write_lineno(self, outfile):$/;"	m	class:IRCFormatter
_write_lineno	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    def _write_lineno(self, outfile):$/;"	m	class:TerminalFormatter
_write_section	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def _write_section(self, fp, section_name, section_items, delimiter):$/;"	m	class:RawConfigParser
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CFamilyLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    _ws = r'\\n\\r\\t '$/;"	v	class:SnowballLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:AsymptoteLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:SystemVerilogLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:VerilogLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _ws = r'(?:\\\\|\\s|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)*'$/;"	v	class:ObjectiveJLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _ws = r'(?:[%s]+)' % _whitespace$/;"	v	class:JasminLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*].*?[*]\/)+'$/;"	v	class:CeylonLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/[*][\\w\\W]*?[*]\/)+'$/;"	v	class:PawnLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    _ws = r'(?:\\s|\/\/.*?\\n|\/\\*.*?\\*\/)+'$/;"	v	class:SourcePawnLexer
_ws	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    _ws = r'\\t\\v\\f\\r ,;=\\xa0'$/;"	v	class:BatchLexer
_ws1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)?'$/;"	v	class:CFamilyLexer
_ws1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:PawnLexer
_ws1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    _ws1 = r'\\s*(?:\/[*].*?[*]\/\\s*)*'$/;"	v	class:SourcePawnLexer
_ws_pp	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    _ws_pp = r'(?:\\\\\\n|[^\\S\\n]|%s|%s)' % (_comment_single, _comment_multiline)$/;"	v	class:Tads3Lexer
`g:lightline#ale#indicator_checking`	plugged/lightline-ale/README.md	/^##### `g:lightline#ale#indicator_checking`$/;"	T
`g:lightline#ale#indicator_errors`	plugged/lightline-ale/README.md	/^##### `g:lightline#ale#indicator_errors`$/;"	T
`g:lightline#ale#indicator_ok`	plugged/lightline-ale/README.md	/^##### `g:lightline#ale#indicator_ok`$/;"	T
`g:lightline#ale#indicator_warnings`	plugged/lightline-ale/README.md	/^##### `g:lightline#ale#indicator_warnings`$/;"	T
a	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> a <NOP>$/;"	m
a	plugged/emmet-vim/docs/static/css/style-sites.css	/^a{$/;"	s
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'First Line\\nSecond Line'$/;"	v	class:TestWithNewline
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestCheapDelete
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestRealLife1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'hallo Blah mitte=sdfdsfsd\\nhallo kjsdhfjksdhfkjhsdfkh mittekjshdkfhkhsdfdsf'$/;"	v	class:TestCrash
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'hallo End Beginning'$/;"	v	class:TestRealLife
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:MultiLine
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'stdin.h'$/;"	v	class:MatchIsTooCheap
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'this is it this is it this is it'$/;"	v	class:TestUltiSnipsProblem
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = '', ''$/;"	v	class:TestEmptyString
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'Hello', 'Hello\\nWorld\\nWorld\\nWorld'$/;"	v	class:TestLotsaNewlines
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'abc', 'def'$/;"	v	class:TestNoSubstring
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'abcdef', 'abcdef'$/;"	v	class:TestAllMatch
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'hasomelongertextbl', 'hol'$/;"	v	class:TestCommonCharacters
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello   World']$/;"	v	class:TestGuessing_InsertOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello   World']$/;"	v	class:TestGuessing_InsertOneChar1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello World']$/;"	v	class:TestGuessing_BackspaceOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello World']$/;"	v	class:TestGuessing_DeleteOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = [], []$/;"	v	class:TestGuessing_Noop0
a	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> a :<C-U>let b:fugitive_display_format += v:count1<Bar>exe fug/;"	m
a	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> a :<C-U>execute <SID>Do('Toggle',0)<CR>$/;"	m
a2ps	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "a2ps": null,$/;"	z
a65	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "a65": "Assembly",$/;"	s
a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:hover {$/;"	s
a:link	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:link {$/;"	s
a:visited	plugged/emmet-vim/docs/static/css/style-sites.css	/^a:visited {$/;"	s
aap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "aap": null,$/;"	z
abap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "abap": null,$/;"	z
abaqus	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "abaqus": null,$/;"	z
abc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "abc": null,$/;"	z
abel	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "abel": null,$/;"	z
about: Create a report to help us improve	plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^about: Create a report to help us improve$/;"	s
ac	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ac <Plug>GitGutterTextObjectOuterPending$/;"	m
ac	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ac <Plug>GitGutterTextObjectOuterVisual$/;"	m
acedb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "acedb": null,$/;"	z
ack	plugged/ack.vim/README.md	/^### ack$/;"	S
ack#Ack	plugged/ack.vim/autoload/ack.vim	/^function! ack#Ack(cmd, args) "{{{$/;"	f
ack#AckFromSearch	plugged/ack.vim/autoload/ack.vim	/^function! ack#AckFromSearch(cmd, args) "{{{$/;"	f
ack#AckHelp	plugged/ack.vim/autoload/ack.vim	/^function! ack#AckHelp(cmd, args) "{{{$/;"	f
ack#AckWindow	plugged/ack.vim/autoload/ack.vim	/^function! ack#AckWindow(cmd, args) "{{{$/;"	f
ack#ShowResults	plugged/ack.vim/autoload/ack.vim	/^function! ack#ShowResults() "{{{$/;"	f
ack.vim	plugged/ack.vim/README.md	/^# ack.vim$/;"	c
acl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    acl = words(('read', 'write', 'deny'), suffix=r'(?![\\w#$-])')$/;"	v	class:CrmshLexer
acl_mod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    acl_mod = (r'(?:tag|ref|reference|attribute|type|xpath)')$/;"	v	class:CrmshLexer
acls	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    acls = ($/;"	v	class:SquidConfLexer
action_Put	plugged/nvim-miniyank/rplugin/python3/denite/kind/miniyank.py	/^    def action_Put(self, context):$/;"	m	class:Kind
action_put	plugged/nvim-miniyank/rplugin/python3/denite/kind/miniyank.py	/^    def action_put(self, context):$/;"	m	class:Kind
actions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    actions = ($/;"	v	class:SquidConfLexer
actions_log	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    actions_log = ("status", "enable", "disable", "clear")$/;"	v	class:SquidConfLexer
actions_stats	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    actions_stats = ($/;"	v	class:SquidConfLexer
actionscript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "actionscript": "ActionScript",$/;"	s
ada	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ada": null,$/;"	z
add	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	add: function(elem, types, handler, data) {$/;"	m	class:jQuery.event
add	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	function add(l, t) {$/;"	f
add	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def add(self, key, val):$/;"	m	class:HTTPHeaderDict
add_argument	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_argument(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_argument	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_argument(self, action):$/;"	m	class:HelpFormatter
add_argument_group	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_argument_group(self, *args, **kwargs):$/;"	m	class:_ActionsContainer
add_arguments	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_arguments(self, actions):$/;"	m	class:HelpFormatter
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_dict_to_cookiejar	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def add_dict_to_cookiejar(cj, cookie_dict):$/;"	f
add_filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def add_filter(self, filter_, **options):$/;"	m	class:Lexer
add_header	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def add_header(self, key, val):$/;"	m	class:MockRequest
add_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def add_headers(self, request, **kwargs):$/;"	m	class:HTTPAdapter
add_metaclass	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def add_metaclass(metaclass):$/;"	f
add_metaclass	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def add_metaclass(metaclass):$/;"	f
add_metaclass	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def add_metaclass(metaclass):$/;"	f
add_mic	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def add_mic(self, negotiate_message, challenge_message):$/;"	m	class:AuthenticateMessage
add_move	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def add_move(move):$/;"	f
add_move	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def add_move(move):$/;"	f
add_mutually_exclusive_group	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_mutually_exclusive_group(self, **kwargs):$/;"	m	class:_ActionsContainer
add_parser	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_parser(self, name, **kwargs):$/;"	m	class:_SubParsersAction
add_section	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def add_section(self, section):$/;"	m	class:ConfigParser
add_section	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def add_section(self, section):$/;"	m	class:RawConfigParser
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet(self, trigger, value, description,$/;"	m	class:SnippetManager
add_stderr_logger	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^def add_stderr_logger(level=logging.DEBUG):$/;"	f
add_subparsers	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_subparsers(self, **kwargs):$/;"	m	class:ArgumentParser
add_text	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_text(self, text):$/;"	m	class:HelpFormatter
add_unredirected_header	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def add_unredirected_header(self, name, value):$/;"	m	class:MockRequest
add_usage	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def add_usage(self, usage, actions, groups, prefix=None):$/;"	m	class:HelpFormatter
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false$/;"	b	object:properties.suggest.completionItemKindLabels
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerCommand
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerModule
additionalProperties	plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerSocket
additionalProperties	plugged/coc.nvim/data/schema.json	/^  "additionalProperties": false,$/;"	b
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {$/;"	o	object:definitions.languageServerBase.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerCommand.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerModule.properties
additionalSchemes	plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerSocket.properties
address	plugged/coc.nvim/bin/server.js	/^let address = process.env.NVIM_LISTEN_ADDRESS || '\/tmp\/nvim'$/;"	v
address_in_network	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def address_in_network(ip, net):$/;"	f
advance_iterator	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def advance_iterator(it):$/;"	f
advance_iterator	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def advance_iterator(it):$/;"	f
aflex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "aflex": null,$/;"	z
aglet_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    aglet_additional_builtins = ($/;"	v	class:Modula2Lexer
aglet_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    aglet_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
aglet_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    aglet_additional_reserved_words = ($/;"	v	class:Modula2Lexer
ahdl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ahdl": null,$/;"	z
airline#extensions#coc#get	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type)$/;"	f
airline#extensions#coc#get_error	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error()$/;"	f
airline#extensions#coc#get_warning	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning()$/;"	f
airline#extensions#coc#init	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers)$/;"	f
aj_inter_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aj_inter_type = set(('parents:', 'warning:', 'error:', 'soft:', 'precedence:'))$/;"	v	class:AspectJLexer
aj_inter_type_annotation	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aj_inter_type_annotation = set(('@type', '@method', '@constructor', '@field'))$/;"	v	class:AspectJLexer
aj_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aj_keywords = set(($/;"	v	class:AspectJLexer
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
alabel	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def alabel(label):$/;"	f
ale#Env	plugged/ale/autoload/ale.vim	/^function! ale#Env(variable_name, value) abort$/;"	f
ale#Escape	plugged/ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	plugged/ale/autoload/ale.vim	/^function! ale#FileTooLarge(buffer) abort$/;"	f
ale#GetLocItemMessage	plugged/ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	plugged/ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Pad	plugged/ale/autoload/ale.vim	/^function! ale#Pad(string) abort$/;"	f
ale#Queue	plugged/ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#Set	plugged/ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	plugged/ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	plugged/ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#args#Parse	plugged/ale/autoload/ale/args.vim	/^function! ale#args#Parse(arg_list, string) abort$/;"	f
ale#assert#Fixer	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#Fixer(expected_result) abort$/;"	f
ale#assert#GivenCommandOutput	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#GivenCommandOutput(...) abort$/;"	f
ale#assert#LSPAddress	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPAddress(expected_address) abort$/;"	f
ale#assert#LSPConfig	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPConfig(expected_config) abort$/;"	f
ale#assert#LSPLanguage	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPLanguage(expected_language) abort$/;"	f
ale#assert#LSPOptions	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPOptions(expected_options) abort$/;"	f
ale#assert#LSPProject	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPProject(expected_root) abort$/;"	f
ale#assert#Linter	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#Linter(expected_executable, expected_command) abort$/;"	f
ale#assert#LinterNotExecuted	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterNotExecuted() abort$/;"	f
ale#assert#SetUpFixerTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTest(filetype, name) abort$/;"	f
ale#assert#SetUpFixerTestCommands	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTestCommands() abort$/;"	f
ale#assert#SetUpLinterTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTest(filetype, name) abort$/;"	f
ale#assert#SetUpLinterTestCommands	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTestCommands() abort$/;"	f
ale#assert#TearDownFixerTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownFixerTest() abort$/;"	f
ale#assert#TearDownLinterTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownLinterTest() abort$/;"	f
ale#balloon#Disable	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#AreSpecialCharsBalanced	plugged/ale/autoload/ale/c.vim	/^function! ale#c#AreSpecialCharsBalanced(option) abort$/;"	f
ale#c#FindCompileCommands	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#FlagsFromCompileCommands	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FlagsFromCompileCommands(buffer, compile_commands_file) abort$/;"	f
ale#c#GetBuildDirectory	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetBuildDirectory(buffer) abort$/;"	f
ale#c#GetCFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetCFlags(buffer, output) abort$/;"	f
ale#c#GetMakeCommand	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetMakeCommand(buffer) abort$/;"	f
ale#c#IncludeOptions	plugged/ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#c#ParseCFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlags(path_prefix, cflag_line) abort$/;"	f
ale#c#ParseCFlagsFromMakeOutput	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlagsFromMakeOutput(buffer, make_output) abort$/;"	f
ale#c#ParseCompileCommandsFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCompileCommandsFlags(buffer, file_lookup, dir_lookup) abort$/;"	f
ale#c#RunMakeCommand	plugged/ale/autoload/ale/c.vim	/^function! ale#c#RunMakeCommand(buffer, Callback) abort$/;"	f
ale#command#ClearData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ClearData() abort$/;"	f
ale#command#CreateDirectory	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateDirectory(buffer) abort$/;"	f
ale#command#CreateFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateFile(buffer) abort$/;"	f
ale#command#CreateTempFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateTempFile(buffer, temporary_file, input) abort$/;"	f
ale#command#EscapeCommandPart	plugged/ale/autoload/ale/command.vim	/^function! ale#command#EscapeCommandPart(command_part) abort$/;"	f
ale#command#FormatCommand	plugged/ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand(buffer, executable, command, pipe_file_if_needed, input) abo/;"	f
ale#command#GetData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#GetData() abort$/;"	f
ale#command#InitData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#InitData(buffer) abort$/;"	f
ale#command#IsDeferred	plugged/ale/autoload/ale/command.vim	/^function! ale#command#IsDeferred(value) abort$/;"	f
ale#command#ManageDirectory	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ManageDirectory(buffer, directory) abort$/;"	f
ale#command#ManageFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ManageFile(buffer, file) abort$/;"	f
ale#command#RemoveManagedFiles	plugged/ale/autoload/ale/command.vim	/^function! ale#command#RemoveManagedFiles(buffer) abort$/;"	f
ale#command#Run	plugged/ale/autoload/ale/command.vim	/^function! ale#command#Run(buffer, command, Callback, ...) abort$/;"	f
ale#command#StopJobs	plugged/ale/autoload/ale/command.vim	/^function! ale#command#StopJobs(buffer, job_type) abort$/;"	f
ale#completion#Disable	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Filter(buffer, filetype, suggestions, prefix) abort$/;"	f
ale#completion#GetCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions(manual) abort$/;"	f
ale#completion#GetPrefix	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#NullFilter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#NullFilter(buffer, item) abort$/;"	f
ale#completion#OmniFunc	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#RestoreCompletionOptions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#RestoreCompletionOptions() abort$/;"	f
ale#completion#Show	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Show(response, completion_parser) abort$/;"	f
ale#completion#StopTimer	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#completion#python#CompletionItemFilter	plugged/ale/autoload/ale/completion/python.vim	/^function! ale#completion#python#CompletionItemFilter(buffer, item) abort$/;"	f
ale#cursor#EchoCursorWarning	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(original_message) abort$/;"	f
ale#d#FindDUBConfig	plugged/ale/autoload/ale/d.vim	/^function! ale#d#FindDUBConfig(buffer) abort$/;"	f
ale#debugging#Info	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#debugging#InfoToFile	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToFile(filename) abort$/;"	f
ale#definition#ClearLSPData	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#ClearLSPData() abort$/;"	f
ale#definition#GetMap	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#GoToType	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToType(options) abort$/;"	f
ale#definition#HandleLSPResponse	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#SetMap	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#engine#Cleanup	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CleanupEveryBuffer	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#CleanupEveryBuffer() abort$/;"	f
ale#engine#CreateDirectory	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#CreateDirectory(buffer) abort$/;"	f
ale#engine#CreateFile	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#CreateFile(buffer) abort$/;"	f
ale#engine#EscapeCommandPart	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, from_other_source, loclist) abort$/;"	f
ale#engine#GetLoclist	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLoclist	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLoclist(linter_name, buffer, loclist, from_other_source) abort$/;"	f
ale#engine#InitBufferInfo	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#ManageDirectory	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#ManageDirectory(buffer, directory) abort$/;"	f
ale#engine#ManageFile	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#ManageFile(buffer, filename) abort$/;"	f
ale#engine#MarkLinterActive	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterActive(info, linter) abort$/;"	f
ale#engine#MarkLinterInactive	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterInactive(info, linter) abort$/;"	f
ale#engine#ProcessChain	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#ProcessChain(buffer, executable, linter, chain_index, input) abort$/;"	f
ale#engine#ResetExecutableCache	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#ignore#Exclude	plugged/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#Exclude(filetype, all_linters, config, disable_lsp) abort$/;"	f
ale#engine#ignore#GetList	plugged/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#GetList(filetype, config) abort$/;"	f
ale#events#ClockMilliseconds	plugged/ale/autoload/ale/events.vim	/^function! ale#events#ClockMilliseconds() abort$/;"	f
ale#events#FileChangedEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#Init	plugged/ale/autoload/ale/events.vim	/^function! ale#events#Init() abort$/;"	f
ale#events#LintOnEnter	plugged/ale/autoload/ale/events.vim	/^function! ale#events#LintOnEnter(buffer) abort$/;"	f
ale#events#QuitEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	plugged/ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#ReadOrEnterEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#ReadOrEnterEvent(buffer) abort$/;"	f
ale#events#SaveEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filetypes#GuessExtension	plugged/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	plugged/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes() abort$/;"	f
ale#fix#Fix	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(buffer, fixing_flag, ...) abort$/;"	f
ale#fix#InitBufferData	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#registry#Add	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#CompleteFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#CompleteFixers(ArgLead, CmdLine, CursorPos) abort$/;"	f
ale#fix#registry#GetApplicableFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetApplicableFixers(filetype) abort$/;"	f
ale#fix#registry#GetFunc	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fix#registry#SuggestedFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#SuggestedFixers(filetype) abort$/;"	f
ale#fixers#autopep8#Fix	plugged/ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#bibclean#Fix	plugged/ale/autoload/ale/fixers/bibclean.vim	/^function! ale#fixers#bibclean#Fix(buffer) abort$/;"	f
ale#fixers#black#Fix	plugged/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#Fix(buffer) abort$/;"	f
ale#fixers#black#GetExecutable	plugged/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#GetExecutable(buffer) abort$/;"	f
ale#fixers#brittany#Fix	plugged/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#Fix(buffer) abort$/;"	f
ale#fixers#brittany#GetExecutable	plugged/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	plugged/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	plugged/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#cmakeformat#Fix	plugged/ale/autoload/ale/fixers/cmakeformat.vim	/^function! ale#fixers#cmakeformat#Fix(buffer) abort$/;"	f
ale#fixers#dartfmt#Fix	plugged/ale/autoload/ale/fixers/dartfmt.vim	/^function! ale#fixers#dartfmt#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#Fix	plugged/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#GetExecutable	plugged/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#eslint#Fix	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#fecs#Fix	plugged/ale/autoload/ale/fixers/fecs.vim	/^function! ale#fixers#fecs#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#Fix	plugged/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#GetExecutable	plugged/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	plugged/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	plugged/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	plugged/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	plugged/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gofmt#Fix	plugged/ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	plugged/ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#gomod#Fix	plugged/ale/autoload/ale/fixers/gomod.vim	/^function! ale#fixers#gomod#Fix(buffer) abort$/;"	f
ale#fixers#google_java_format#Fix	plugged/ale/autoload/ale/fixers/google_java_format.vim	/^function! ale#fixers#google_java_format#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	plugged/ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	plugged/ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	plugged/ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#hlint#Fix	plugged/ale/autoload/ale/fixers/hlint.vim	/^function! ale#fixers#hlint#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	plugged/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	plugged/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	plugged/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#jq#Fix	plugged/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#Fix(buffer) abort$/;"	f
ale#fixers#jq#GetExecutable	plugged/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#GetExecutable(buffer) abort$/;"	f
ale#fixers#ktlint#Fix	plugged/ale/autoload/ale/fixers/ktlint.vim	/^function! ale#fixers#ktlint#Fix(buffer) abort$/;"	f
ale#fixers#latexindent#Fix	plugged/ale/autoload/ale/fixers/latexindent.vim	/^function! ale#fixers#latexindent#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetCommand	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetCommand(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#ocamlformat#Fix	plugged/ale/autoload/ale/fixers/ocamlformat.vim	/^function! ale#fixers#ocamlformat#Fix(buffer) abort$/;"	f
ale#fixers#perltidy#Fix	plugged/ale/autoload/ale/fixers/perltidy.vim	/^function! ale#fixers#perltidy#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#Fix	plugged/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#GetExecutable	plugged/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	plugged/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	plugged/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier#Fix	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ProcessPrettierDOutput	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ProcessPrettierDOutput(buffer, output) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier_eslint#Fix	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_standard#Fix	plugged/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	plugged/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#Fix	plugged/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#GetExecutable	plugged/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#refmt#Fix	plugged/ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	plugged/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	plugged/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rufo#Fix	plugged/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#Fix(buffer) abort$/;"	f
ale#fixers#rufo#GetCommand	plugged/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	plugged/ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#Fix	plugged/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#GetCommand	plugged/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#GetCommand(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	plugged/ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#sqlfmt#Fix	plugged/ale/autoload/ale/fixers/sqlfmt.vim	/^function! ale#fixers#sqlfmt#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	plugged/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	plugged/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#standardrb#Fix	plugged/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#Fix(buffer) abort$/;"	f
ale#fixers#standardrb#GetCommand	plugged/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#GetCommand(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	plugged/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	plugged/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#stylish_haskell#Fix	plugged/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#GetExecutable	plugged/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	plugged/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	plugged/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#terraform#Fix	plugged/ale/autoload/ale/fixers/terraform.vim	/^function! ale#fixers#terraform#Fix(buffer) abort$/;"	f
ale#fixers#textlint#Fix	plugged/ale/autoload/ale/fixers/textlint.vim	/^function! ale#fixers#textlint#Fix(buffer) abort$/;"	f
ale#fixers#tidy#Fix	plugged/ale/autoload/ale/fixers/tidy.vim	/^function! ale#fixers#tidy#Fix(buffer) abort$/;"	f
ale#fixers#tslint#Fix	plugged/ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Fix	plugged/ale/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Fix(buffer) abort$/;"	f
ale#fixers#xmllint#Fix	plugged/ale/autoload/ale/fixers/xmllint.vim	/^function! ale#fixers#xmllint#Fix(buffer) abort$/;"	f
ale#fixers#xo#Fix	plugged/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#Fix(buffer) abort$/;"	f
ale#fixers#xo#GetExecutable	plugged/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#GetExecutable(buffer) abort$/;"	f
ale#fixers#yapf#Fix	plugged/ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#go#FindProjectRoot	plugged/ale/autoload/ale/go.vim	/^function! ale#go#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#BuildClasspathCommand	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#alex#CreateCommandCallback	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#CreateCommandCallback(flags) abort$/;"	f
ale#handlers#alex#DefineLinter	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#DefineLinter(filetype, flags) abort$/;"	f
ale#handlers#alex#GetExecutable	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#GetExecutable(buffer) abort$/;"	f
ale#handlers#alex#Handle	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#Handle(buffer, lines) abort$/;"	f
ale#handlers#ccls#GetProjectRoot	plugged/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	plugged/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	plugged/ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	plugged/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	plugged/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#elixir#FindMixProjectRoot	plugged/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixUmbrellaRoot	plugged/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixUmbrellaRoot(buffer) abort$/;"	f
ale#handlers#eslint#FindConfig	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#fecs#GetCommand	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetCommand(buffer) abort$/;"	f
ale#handlers#fecs#GetExecutable	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetExecutable(buffer) abort$/;"	f
ale#handlers#fecs#Handle	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#Handle(buffer, lines) abort$/;"	f
ale#handlers#flawfinder#HandleFlawfinderFormat	plugged/ale/autoload/ale/handlers/flawfinder.vim	/^function! ale#handlers#flawfinder#HandleFlawfinderFormat(buffer, lines) abort$/;"	f
ale#handlers#gawk#HandleGawkFormat	plugged/ale/autoload/ale/handlers/gawk.vim	/^function! ale#handlers#gawk#HandleGawkFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormatWithIncludes	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormatWithIncludes(buffer, lines) abort$/;"	f
ale#handlers#go#Handler	plugged/ale/autoload/ale/handlers/go.vim	/^function! ale#handlers#go#Handler(buffer, lines) abort$/;"	f
ale#handlers#haskell#GetStackExecutable	plugged/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#GetStackExecutable(bufnr) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	plugged/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell_stack#EscapeExecutable	plugged/ale/autoload/ale/handlers/haskell_stack.vim	/^function! ale#handlers#haskell_stack#EscapeExecutable(executable, stack_exec) abort$/;"	f
ale#handlers#hlint#GetExecutable	plugged/ale/autoload/ale/handlers/hlint.vim	/^function! ale#handlers#hlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#ktlint#GetCommand	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetCommand(buffer) abort$/;"	f
ale#handlers#ktlint#GetRulesets	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetRulesets(buffer) abort$/;"	f
ale#handlers#ktlint#Handle	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#languagetool#DefineLinter	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#DefineLinter(filetype) abort$/;"	f
ale#handlers#languagetool#GetCommand	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetCommand(buffer) abort$/;"	f
ale#handlers#languagetool#GetExecutable	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetExecutable(buffer) abort$/;"	f
ale#handlers#languagetool#HandleOutput	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#HandleOutput(buffer, lines) abort$/;"	f
ale#handlers#markdownlint#Handle	plugged/ale/autoload/ale/handlers/markdownlint.vim	/^function! ale#handlers#markdownlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#ols#GetCommand	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#pony#HandlePonycFormat	plugged/ale/autoload/ale/handlers/pony.vim	/^function! ale#handlers#pony#HandlePonycFormat(buffer, lines) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	plugged/ale/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#ruby#EscapeExecutable	plugged/ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#EscapeExecutable(executable, bundle_exec) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	plugged/ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	plugged/ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#scala#HandleScalacLintFormat	plugged/ale/autoload/ale/handlers/scala.vim	/^function! ale#handlers#scala#HandleScalacLintFormat(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	plugged/ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#sml#GetCmFile	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#textlint#GetCommand	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetCommand(buffer) abort$/;"	f
ale#handlers#textlint#GetExecutable	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#textlint#HandleTextlintOutput	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#HandleTextlintOutput(buffer, lines) abort$/;"	f
ale#handlers#tslint#GetExecutable	plugged/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#tslint#InitVariables	plugged/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#InitVariables() abort$/;"	f
ale#handlers#tsserver#GetProjectRoot	plugged/ale/autoload/ale/handlers/tsserver.vim	/^function! ale#handlers#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#unix#HandleAsError	plugged/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	plugged/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#vale#GetType	plugged/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#GetType(severity) abort$/;"	f
ale#handlers#vale#Handle	plugged/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#DefineLinter	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#DefineLinter(filetype) abort$/;"	f
ale#handlers#writegood#GetCommand	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#highlight#BufferHidden	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#history#Add	plugged/ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	plugged/ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	plugged/ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	plugged/ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#hover#ClearLSPData	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ClearLSPData() abort$/;"	f
ale#hover#GetMap	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#GetMap() abort$/;"	f
ale#hover#HandleLSPResponse	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#hover#HandleTSServerResponse	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#hover#SetMap	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#SetMap(map) abort$/;"	f
ale#hover#Show	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#Show(buffer, line, col, opt) abort$/;"	f
ale#hover#ShowAtCursor	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowAtCursor() abort$/;"	f
ale#hover#ShowDocumentationAtCursor	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowDocumentationAtCursor() abort$/;"	f
ale#java#FindProjectRoot	plugged/ale/autoload/ale/java.vim	/^function! ale#java#FindProjectRoot(buffer) abort$/;"	f
ale#job#HasOpenChannel	plugged/ale/autoload/ale/job.vim	/^function! ale#job#HasOpenChannel(job_id) abort$/;"	f
ale#job#IsRunning	plugged/ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#ParseVim8ProcessID	plugged/ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	plugged/ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(buffer, command) abort$/;"	f
ale#job#SendRaw	plugged/ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	plugged/ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#StartWithCmd	plugged/ale/autoload/ale/job.vim	/^function! ale#job#StartWithCmd(command, options) abort$/;"	f
ale#job#Stop	plugged/ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	plugged/ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#julia#FindProjectRoot	plugged/ale/autoload/ale/julia.vim	/^function! ale#julia#FindProjectRoot(buffer) abort$/;"	f
ale#linter#Define	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#GetLintersLoaded	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLintersLoaded() abort$/;"	f
ale#linter#PreProcess	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(filetype, linter) abort$/;"	f
ale#linter#PreventLoading	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#PreventLoading(filetype) abort$/;"	f
ale#linter#Reset	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#list#GetCombinedList	plugged/ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	plugged/ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	plugged/ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap, ...) abort$/;"	f
ale#loclist_jumping#Jump	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, ...) abort$/;"	f
ale#loclist_jumping#JumpToIndex	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#loclist_jumping#WrapJump	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#WrapJump(direction, sargs) abort$/;"	f
ale#lsp#CloseDocument	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(conn_id) abort$/;"	f
ale#lsp#ConnectToAddress	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(conn_id, address) abort$/;"	f
ale#lsp#CreateMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetConnections	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetConnections() abort$/;"	f
ale#lsp#GetNextMessageID	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#HandleInitResponse	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleInitResponse(conn, response) abort$/;"	f
ale#lsp#HandleMessage	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn_id, message) abort$/;"	f
ale#lsp#HasCapability	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HasCapability(conn_id, capability) abort$/;"	f
ale#lsp#MarkConnectionAsTsserver	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkConnectionAsTsserver(conn_id) abort$/;"	f
ale#lsp#MarkDocumentAsOpen	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkDocumentAsOpen(id, buffer) abort$/;"	f
ale#lsp#NotifyForChanges	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#NotifyForChanges(conn_id, buffer) abort$/;"	f
ale#lsp#OnInit	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OnInit(conn_id, Callback) abort$/;"	f
ale#lsp#OpenDocument	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocument(conn_id, buffer, language_id) abort$/;"	f
ale#lsp#ReadMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#Register	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Register(executable_or_address, project, init_options) abort$/;"	f
ale#lsp#RegisterCallback	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterCallback(conn_id, callback) abort$/;"	f
ale#lsp#RemoveConnectionWithID	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RemoveConnectionWithID(id) abort$/;"	f
ale#lsp#ResetConnections	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ResetConnections() abort$/;"	f
ale#lsp#Send	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message) abort$/;"	f
ale#lsp#StartProgram	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(conn_id, executable, command) abort$/;"	f
ale#lsp#Stop	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Stop(conn_id) abort$/;"	f
ale#lsp#StopAll	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StopAll() abort$/;"	f
ale#lsp#UpdateConfig	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#UpdateConfig(conn_id, buffer, config) abort$/;"	f
ale#lsp#message#Completion	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidChangeConfiguration	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChangeConfiguration(buffer, config) abort$/;"	f
ale#lsp#message#DidClose	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#Exit	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Hover	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Hover(buffer, line, column) abort$/;"	f
ale#lsp#message#Initialize	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path, initialization_options) abort$/;"	f
ale#lsp#message#Initialized	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#References	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#References(buffer, line, column) abort$/;"	f
ale#lsp#message#Shutdown	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#message#Symbol	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Symbol(query) abort$/;"	f
ale#lsp#message#TypeDefinition	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp#reset#StopAllLSPs	plugged/ale/autoload/ale/lsp/reset.vim	/^function! ale#lsp#reset#StopAllLSPs() abort$/;"	f
ale#lsp#response#GetErrorMessage	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#GetErrorMessage(response) abort$/;"	f
ale#lsp#response#ReadDiagnostics	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abo/;"	f
ale#lsp#tsserver_message#Completions	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions(buffer, line, column, prefix) abort$/;"	f
ale#lsp#tsserver_message#Definition	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Geterr	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#lsp#tsserver_message#Quickinfo	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Quickinfo(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#References	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#References(buffer, line, column) abort$/;"	f
ale#lsp_linter#CheckWithLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#CheckWithLSP(buffer, linter) abort$/;"	f
ale#lsp_linter#ClearLSPData	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#ClearLSPData() abort$/;"	f
ale#lsp_linter#FindProjectRoot	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#FindProjectRoot(buffer, linter) abort$/;"	f
ale#lsp_linter#GetConfig	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetConfig(buffer, linter) abort$/;"	f
ale#lsp_linter#GetOptions	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetOptions(buffer, linter) abort$/;"	f
ale#lsp_linter#HandleLSPResponse	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#lsp_linter#OnInit	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#OnInit(linter, details, Callback) abort$/;"	f
ale#lsp_linter#SetLSPLinterMap	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SetLSPLinterMap(replacement_map) abort$/;"	f
ale#lsp_linter#StartLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#StartLSP(buffer, linter, Callback) abort$/;"	f
ale#node#Executable	plugged/ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#node#FindExecutable	plugged/ale/autoload/ale/node.vim	/^function! ale#node#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#other_source#ShowResults	plugged/ale/autoload/ale/other_source.vim	/^function! ale#other_source#ShowResults(buffer, linter_name, loclist) abort$/;"	f
ale#other_source#StartChecking	plugged/ale/autoload/ale/other_source.vim	/^function! ale#other_source#StartChecking(buffer, linter_name) abort$/;"	f
ale#path#BufferCdString	plugged/ale/autoload/ale/path.vim	/^function! ale#path#BufferCdString(buffer) abort$/;"	f
ale#path#CdString	plugged/ale/autoload/ale/path.vim	/^function! ale#path#CdString(directory) abort$/;"	f
ale#path#Dirname	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Dirname(path) abort$/;"	f
ale#path#FindNearestDirectory	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestFile	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#ResolveLocalPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	plugged/ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#pattern_options#SetOptions	plugged/ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#powershell#RunPowerShell	plugged/ale/autoload/ale/powershell.vim	/^function! ale#powershell#RunPowerShell(buffer, base_var_name, command) abort$/;"	f
ale#preview#CloseIfTypeMatches	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#CloseIfTypeMatches(filetype) abort$/;"	f
ale#preview#OpenSelectionInBuffer	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInBuffer() abort$/;"	f
ale#preview#OpenSelectionInTab	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInTab() abort$/;"	f
ale#preview#Show	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines, ...) abort$/;"	f
ale#preview#ShowSelection	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#ShowSelection(item_list, ...) abort$/;"	f
ale#python#FindExecutable	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#python#HandleTraceback	plugged/ale/autoload/ale/python.vim	/^function! ale#python#HandleTraceback(lines, limit) abort$/;"	f
ale#python#PipenvPresent	plugged/ale/autoload/ale/python.vim	/^function! ale#python#PipenvPresent(buffer) abort$/;"	f
ale#references#ClearLSPData	plugged/ale/autoload/ale/references.vim	/^function! ale#references#ClearLSPData() abort$/;"	f
ale#references#Find	plugged/ale/autoload/ale/references.vim	/^function! ale#references#Find(...) abort$/;"	f
ale#references#GetMap	plugged/ale/autoload/ale/references.vim	/^function! ale#references#GetMap() abort$/;"	f
ale#references#HandleLSPResponse	plugged/ale/autoload/ale/references.vim	/^function! ale#references#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#references#HandleTSServerResponse	plugged/ale/autoload/ale/references.vim	/^function! ale#references#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#references#SetMap	plugged/ale/autoload/ale/references.vim	/^function! ale#references#SetMap(map) abort$/;"	f
ale#ruby#FindProjectRoot	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindProjectRoot(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#ruby#HandleRubocopOutput	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#HandleRubocopOutput(buffer, lines) abort$/;"	f
ale#semver#GTE	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#ParseVersion	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#ParseVersion(version_lines) abort$/;"	f
ale#semver#ResetVersionCache	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#semver#RunWithVersionCheck	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#RunWithVersionCheck(buffer, executable, command, Callback) abort$/;"	f
ale#sign#FindCurrentSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParseSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ReadSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#sign#SetUpDefaultColumnWithoutErrorsHighlight	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#SetUpDefaultColumnWithoutErrorsHighlight() abort$/;"	f
ale#socket#Close	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Close(channel_id) abort$/;"	f
ale#socket#GetAddress	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#GetAddress(channel_id) abort$/;"	f
ale#socket#IsOpen	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#IsOpen(channel_id) abort$/;"	f
ale#socket#Open	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Open(address, options) abort$/;"	f
ale#socket#Send	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Send(channel_id, data) abort$/;"	f
ale#statusline#Count	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#FirstProblem	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#FirstProblem(buffer, type) abort$/;"	f
ale#statusline#Update	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#swift#FindProjectRoot	plugged/ale/autoload/ale/swift.vim	/^function! ale#swift#FindProjectRoot(buffer) abort$/;"	f
ale#symbol#ClearLSPData	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#ClearLSPData() abort$/;"	f
ale#symbol#GetMap	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#GetMap() abort$/;"	f
ale#symbol#HandleLSPResponse	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#symbol#Search	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#Search(args) abort$/;"	f
ale#symbol#SetMap	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#SetMap(map) abort$/;"	f
ale#test#FlushJobs	plugged/ale/autoload/ale/test.vim	/^function! ale#test#FlushJobs() abort$/;"	f
ale#test#GetLoclistWithoutModule	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetLoclistWithoutModule() abort$/;"	f
ale#test#GetPreviewWindowText	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetPreviewWindowText() abort$/;"	f
ale#test#GetQflistWithoutModule	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetQflistWithoutModule() abort$/;"	f
ale#test#RestoreDirectory	plugged/ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	plugged/ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	plugged/ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#test#WaitForJobs	plugged/ale/autoload/ale/test.vim	/^function! ale#test#WaitForJobs(deadline) abort$/;"	f
ale#toggle#Disable	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#Reset	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	plugged/ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	plugged/ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	plugged/ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#Col	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Col(str, chr) abort$/;"	f
ale#util#EscapePCRE	plugged/ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#EscapeVim	plugged/ale/autoload/ale/util.vim	/^function! ale#util#EscapeVim(unsafe_string) abort$/;"	f
ale#util#Execute	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Execute(expr) abort$/;"	f
ale#util#FeedKeys	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FindItemAtCursor	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FindItemAtCursor(buffer) abort$/;"	f
ale#util#FunctionArgCount	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetItemPriority	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetItemPriority(item) abort$/;"	f
ale#util#GetLineCount	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#InSandbox	plugged/ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#JoinNeovimOutput	plugged/ale/autoload/ale/util.vim	/^function! ale#util#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#util#LocItemCompare	plugged/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	plugged/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#Mode	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#Open	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Open(filename, line, column, options) abort$/;"	f
ale#util#ShowMessage	plugged/ale/autoload/ale/util.vim	/^function! ale#util#ShowMessage(string) abort$/;"	f
ale#util#StartPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Tempname	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Tempname() abort$/;"	f
ale#util#Writefile	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale#virtualtext#Clear	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#Clear() abort$/;"	f
ale#virtualtext#ShowCursorWarning	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarning(...) abort$/;"	f
ale#virtualtext#ShowCursorWarningWithDelay	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarningWithDelay() abort$/;"	f
ale#virtualtext#ShowMessage	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowMessage(message, hl_group) abort$/;"	f
ale_linters#ada#gcc#GetCommand	plugged/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#ada#gcc#Handle	plugged/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#ansible#ansible_lint#GetExecutable	plugged/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	plugged/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	plugged/ale/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	plugged/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	plugged/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	plugged/ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#GetCommand	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#Handle	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#Handle(buffer, lines) abort$/;"	f
ale_linters#bib#bibclean#get_type	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#get_type(str) abort$/;"	f
ale_linters#bib#bibclean#match_entry	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_entry(line) abort$/;"	f
ale_linters#bib#bibclean#match_msg	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_msg(line) abort$/;"	f
ale_linters#bib#bibclean#match_value	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_value(line) abort$/;"	f
ale_linters#c#clang#GetCommand	plugged/ale/ale_linters/c/clang.vim	/^function! ale_linters#c#clang#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#clangd#GetCommand	plugged/ale/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangd#GetProjectRoot	plugged/ale/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	plugged/ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	plugged/ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cquery#GetInitializationOptions	plugged/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#c#cquery#GetProjectRoot	plugged/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#flawfinder#GetCommand	plugged/ale/ale_linters/c/flawfinder.vim	/^function! ale_linters#c#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#c#gcc#GetCommand	plugged/ale/ale_linters/c/gcc.vim	/^function! ale_linters#c#gcc#GetCommand(buffer, output) abort$/;"	f
ale_linters#chef#cookstyle#GetCommand	plugged/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#Handle	plugged/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	plugged/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	plugged/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#clj_kondo#HandleCljKondoFormat	plugged/ale/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#HandleCljKondoFormat(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	plugged/ale/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cloudformation#cfn_python_lint#Handle	plugged/ale/ale_linters/cloudformation/cfn_python_lint.vim	/^function! ale_linters#cloudformation#cfn_python_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	plugged/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	plugged/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	plugged/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	plugged/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#clang#GetCommand	plugged/ale/ale_linters/cpp/clang.vim	/^function! ale_linters#cpp#clang#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	plugged/ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetCommand	plugged/ale/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetProjectRoot	plugged/ale/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	plugged/ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clazy#GetCommand	plugged/ale/ale_linters/cpp/clazy.vim	/^function! ale_linters#cpp#clazy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	plugged/ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	plugged/ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetInitializationOptions	plugged/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetProjectRoot	plugged/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#flawfinder#GetCommand	plugged/ale/ale_linters/cpp/flawfinder.vim	/^function! ale_linters#cpp#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#gcc#GetCommand	plugged/ale/ale_linters/cpp/gcc.vim	/^function! ale_linters#cpp#gcc#GetCommand(buffer, output) abort$/;"	f
ale_linters#crystal#ameba#GetCommand	plugged/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#HandleAmebaOutput	plugged/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#HandleAmebaOutput(buffer, lines) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	plugged/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	plugged/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	plugged/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	plugged/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	plugged/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	plugged/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	plugged/ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	plugged/ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#GetCommand	plugged/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#Handle	plugged/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#Handle(buffer, lines) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	plugged/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	plugged/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#cypher#cypher_lint#Handle	plugged/ale/ale_linters/cypher/cypher_lint.vim	/^function! ale_linters#cypher#cypher_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dls#FindProjectRoot	plugged/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#d#dls#GetExecutable	plugged/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#GetExecutable(buffer) abort$/;"	f
ale_linters#d#dmd#DMDCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output, meta) abort$/;"	f
ale_linters#d#dmd#GetDUBCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#GetDUBCommand(buffer) abort$/;"	f
ale_linters#d#dmd#Handle	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dmd#RunDUBCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#RunDUBCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#Handle	plugged/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	plugged/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	plugged/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	plugged/ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetCommand	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetType	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetType(type) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#Handle	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#GetCommand	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#credo#GetMode	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetMode() abort$/;"	f
ale_linters#elixir#credo#Handle	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dialyxir#GetCommand	plugged/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#dialyxir#Handle	plugged/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#GetCommand	plugged/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#dogma#Handle	plugged/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#elixir_ls#GetExecutable	plugged/ale/ale_linters/elixir/elixir_ls.vim	/^function! ale_linters#elixir#elixir_ls#GetExecutable(buffer) abort$/;"	f
ale_linters#elixir#mix#GetCommand	plugged/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#mix#Handle	plugged/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#FileIsBuffer	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#FileIsBuffer(path) abort$/;"	f
ale_linters#elm#make#GetCommand	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#GetPackageFile	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetPackageFile(buffer) abort$/;"	f
ale_linters#elm#make#GetRootDir	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetRootDir(buffer) abort$/;"	f
ale_linters#elm#make#Handle	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#HandleElm018Line	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm018Line(line, output) abort$/;"	f
ale_linters#elm#make#HandleElm019Line	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm019Line(line, output) abort$/;"	f
ale_linters#elm#make#IsTest	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsTest(buffer) abort$/;"	f
ale_linters#elm#make#IsVersionGte19	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsVersionGte19(buffer) abort$/;"	f
ale_linters#elm#make#ParseMessage	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessage(message) abort$/;"	f
ale_linters#elm#make#ParseMessageItem	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessageItem(item) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	plugged/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	plugged/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#RunHelpCommand	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#RunHelpCommand(buffer) abort$/;"	f
ale_linters#eruby#erb#GetCommand	plugged/ale/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erubi#GetCommand	plugged/ale/ale_linters/eruby/erubi.vim	/^function! ale_linters#eruby#erubi#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	plugged/ale/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetCommand	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetType	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetType(severity) abort$/;"	f
ale_linters#eruby#ruumba#Handle	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#Handle(buffer, lines) abort$/;"	f
ale_linters#fish#fish#Handle	plugged/ale/ale_linters/fish/fish.vim	/^function! ale_linters#fish#fish#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	plugged/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	plugged/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#language_server#GetProjectRoot	plugged/ale/ale_linters/fortran/language_server.vim	/^function! ale_linters#fortran#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	plugged/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	plugged/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#gitcommit#gitlint#GetCommand	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#GetExecutable	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#Handle	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	plugged/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	plugged/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	plugged/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	plugged/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#FindProjectRoot	plugged/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#GetCommand	plugged/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetMatches	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#Handler	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golangci_lint#GetCommand	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetMatches	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetMatches(lines) abort$/;"	f
ale_linters#go#golangci_lint#Handler	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golint#GetCommand	plugged/ale/ale_linters/go/golint.vim	/^function! ale_linters#go#golint#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gopls#FindProjectRoot	plugged/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#gopls#GetCommand	plugged/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#GetCommand(buffer) abort$/;"	f
ale_linters#go#gosimple#GetCommand	plugged/ale/ale_linters/go/gosimple.vim	/^function! ale_linters#go#gosimple#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetCommand	plugged/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetCommand(buffer) abort$/;"	f
ale_linters#go#govet#GetCommand	plugged/ale/ale_linters/go/govet.vim	/^function! ale_linters#go#govet#GetCommand(buffer) abort$/;"	f
ale_linters#go#langserver#GetCommand	plugged/ale/ale_linters/go/langserver.vim	/^function! ale_linters#go#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#go#staticcheck#GetCommand	plugged/ale/ale_linters/go/staticcheck.vim	/^function! ale_linters#go#staticcheck#GetCommand(buffer) abort$/;"	f
ale_linters#graphql#gqlint#GetCommand	plugged/ale/ale_linters/graphql/gqlint.vim	/^function! ale_linters#graphql#gqlint#GetCommand(buffer) abort$/;"	f
ale_linters#hack#hack#GetExecutable	plugged/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hack#GetProjectRoot	plugged/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetProjectRoot(buffer) abort$/;"	f
ale_linters#hack#hhast#GetExecutable	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hhast#GetInitializationOptions	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#hack#hhast#GetProjectRoot	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetExecutable	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	plugged/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#cabal_ghc#GetCommand	plugged/ale/ale_linters/haskell/cabal_ghc.vim	/^function! ale_linters#haskell#cabal_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc#GetCommand	plugged/ale/ale_linters/haskell/ghc.vim	/^function! ale_linters#haskell#ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc_mod#GetCommand	plugged/ale/ale_linters/haskell/ghc_mod.vim	/^function! ale_linters#haskell#ghc_mod#GetCommand (buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	plugged/ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetCommand	plugged/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetProjectRoot	plugged/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#hlint#GetCommand	plugged/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	plugged/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	plugged/ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#stack_ghc#GetCommand	plugged/ale/ale_linters/haskell/stack_ghc.vim	/^function! ale_linters#haskell#stack_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	plugged/ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetCommand	plugged/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetExecutable	plugged/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	plugged/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	plugged/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	plugged/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	plugged/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#ispc#ispc#GetCommand	plugged/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#Handle	plugged/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	plugged/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	plugged/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#eclipselsp#Command	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Command(buffer, version) abort$/;"	f
ale_linters#java#eclipselsp#CommandWithVersion	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#CommandWithVersion(buffer, version_lines, meta) abort$/;"	f
ale_linters#java#eclipselsp#ConfigurationPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#ConfigurationPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Executable	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Executable(buffer) abort$/;"	f
ale_linters#java#eclipselsp#JarPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#JarPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#RunWithVersionCheck	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#java#eclipselsp#TargetPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#TargetPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#VersionCheck	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#VersionCheck(version_lines) abort$/;"	f
ale_linters#java#javac#GetCommand	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#java#javac#Handle	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#RunWithImportPaths	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#java#javalsp#Command	plugged/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Command(buffer) abort$/;"	f
ale_linters#java#javalsp#Executable	plugged/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Executable(buffer) abort$/;"	f
ale_linters#java#pmd#GetCommand	plugged/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#GetCommand(buffer) abort$/;"	f
ale_linters#java#pmd#Handle	plugged/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow_ls#FindProjectRoot	plugged/ale/ale_linters/javascript/flow_ls.vim	/^function! ale_linters#javascript#flow_ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	plugged/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	plugged/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	plugged/ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	plugged/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	plugged/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#xo#GetCommand	plugged/ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#xo#GetExecutable	plugged/ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetCommand	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetCommand(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetExecutable	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#julia#languageserver#GetCommand	plugged/ale/ale_linters/julia/languageserver.vim	/^function! ale_linters#julia#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#RunWithImportPaths	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#languageserver#GetProjectRoot	plugged/ale/ale_linters/kotlin/languageserver.vim	/^function! ale_linters#kotlin#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#less#lessc#GetCommand	plugged/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	plugged/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	plugged/ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	plugged/ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luac#Handle	plugged/ale/ale_linters/lua/luac.vim	/^function! ale_linters#lua#luac#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	plugged/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	plugged/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	plugged/ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#mdl#GetCommand	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetExecutable	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetExecutable(buffer) abort$/;"	f
ale_linters#markdown#mdl#Handle	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#GetCommand	plugged/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	plugged/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#matlab#mlint#Handle	plugged/ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#mercury#mmc#GetCommand	plugged/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#GetCommand(buffer) abort$/;"	f
ale_linters#mercury#mmc#Handle	plugged/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#Handle(buffer, lines) abort$/;"	f
ale_linters#nasm#nasm#GetCommand	plugged/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#GetCommand(buffer) abort$/;"	f
ale_linters#nasm#nasm#Handle	plugged/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	plugged/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	plugged/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nix#nix#Handle	plugged/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#objc#clang#GetCommand	plugged/ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetCommand	plugged/ale/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetProjectRoot	plugged/ale/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetProjectRoot(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	plugged/ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetCommand	plugged/ale/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetProjectRoot	plugged/ale/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetProjectRoot(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	plugged/ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	plugged/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	plugged/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#perl6#perl6#ExtractError	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#ExtractError(dict, item, type, buffer) abort$/;"	f
ale_linters#perl6#perl6#GetCommand	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetCommand(buffer) abort$/;"	f
ale_linters#perl6#perl6#GetExecutable	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetExecutable(buffer) abort$/;"	f
ale_linters#perl6#perl6#Handle	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#Handle(buffer, lines) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	plugged/ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#GetExecutable	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phan#Handle	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	plugged/ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	plugged/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	plugged/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	plugged/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	plugged/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	plugged/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer, version) abort$/;"	f
ale_linters#php#phpstan#Handle	plugged/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#psalm#GetProjectRoot	plugged/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetProjectRoot(buffer) abort$/;"	f
ale_linters#po#msgfmt#Handle	plugged/ale/ale_linters/po/msgfmt.vim	/^function! ale_linters#po#msgfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#pony#ponyc#GetCommand	plugged/ale/ale_linters/pony/ponyc.vim	/^function! ale_linters#pony#ponyc#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetCommand	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetExecutable	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#powershell#Handle	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#Handle(buffer, lines) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetCommand	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetExecutable	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#Handle	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#prolog#swipl#GetCommand	plugged/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#GetCommand(buffer) abort$/;"	f
ale_linters#prolog#swipl#Handle	plugged/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	plugged/ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	plugged/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#languageserver#GetProjectRoot	plugged/ale/ale_linters/puppet/languageserver.vim	/^function! ale_linters#puppet#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#puppet#puppet#GetCommand	plugged/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	plugged/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	plugged/ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#GetCommand	plugged/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#Handle	plugged/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#Handle(buffer, lines) abort$/;"	f
ale_linters#python#bandit#GetCommand	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetCommand(buffer) abort$/;"	f
ale_linters#python#bandit#GetExecutable	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetExecutable(buffer) abort$/;"	f
ale_linters#python#bandit#Handle	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#GetCommand	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flake8#GetExecutable	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#RunWithVersionCheck	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pydocstyle#GetCommand	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pydocstyle#GetExecutable	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pydocstyle#Handle	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylama#GetCommand	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylama#GetExecutable	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylama#Handle	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylint#GetExecutable	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetCommand	plugged/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyls#GetExecutable	plugged/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyre#GetCommand	plugged/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyre#GetExecutable	plugged/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#GetCommand	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCommand(buffer) abort$/;"	f
ale_linters#python#vulture#GetExecutable	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#Handle	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmlfmt#Handle	plugged/ale/ale_linters/qml/qmlfmt.vim	/^function! ale_linters#qml#qmlfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmllint#Handle	plugged/ale/ale_linters/qml/qmllint.vim	/^function! ale_linters#qml#qmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#r#lintr#GetCommand	plugged/ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#racket#raco#Handle	plugged/ale/ale_linters/racket/raco.vim	/^function! ale_linters#racket#raco#Handle(buffer, lines) abort$/;"	f
ale_linters#reason#merlin#Handle	plugged/ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#GetCommand	plugged/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#GetCommand(buffer) abort$/;"	f
ale_linters#rst#rstcheck#Handle	plugged/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	plugged/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	plugged/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	plugged/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	plugged/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#GetCommand	plugged/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#GetCommand(buffer, version) abort$/;"	f
ale_linters#ruby#reek#Handle	plugged/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	plugged/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	plugged/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#solargraph#GetCommand	plugged/ale/ale_linters/ruby/solargraph.vim	/^function! ale_linters#ruby#solargraph#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#standardrb#GetCommand	plugged/ale/ale_linters/ruby/standardrb.vim	/^function! ale_linters#ruby#standardrb#GetCommand(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	plugged/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	plugged/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version) abort$/;"	f
ale_linters#rust#rls#GetCommand	plugged/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	plugged/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	plugged/ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetCommand	plugged/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetExecutable	plugged/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetAddress	plugged/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetAddress(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetProjectRoot	plugged/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	plugged/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	plugged/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#sasslint#GetCommand	plugged/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#sasslint#GetExecutable	plugged/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scss#scsslint#Handle	plugged/ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	plugged/ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetCommand	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetExecutable	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#language_server#GetProjectRoot	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#shellcheck#GetCommand	plugged/ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetCommand(buffer, version) abort$/;"	f
ale_linters#sh#shellcheck#GetDialectArgument	plugged/ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale_linters#sh#shellcheck#Handle	plugged/ale/ale_linters/sh/shellcheck.vim	/^function! ale_linters#sh#shellcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	plugged/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	plugged/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	plugged/ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solhint#Handle	plugged/ale/ale_linters/solidity/solhint.vim	/^function! ale_linters#solidity#solhint#Handle(buffer, lines) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	plugged/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#Handle	plugged/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	plugged/ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	plugged/ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sugarss#stylelint#GetCommand	plugged/ale/ale_linters/sugarss/stylelint.vim	/^function! ale_linters#sugarss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetCommand	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetExecutable	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	plugged/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	plugged/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	plugged/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	plugged/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	plugged/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	plugged/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#Handle	plugged/ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	plugged/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	plugged/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	plugged/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	plugged/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#typecheck#Handle	plugged/ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	plugged/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	plugged/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	plugged/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	plugged/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#vlog#GetCommand	plugged/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#vlog#Handle	plugged/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#xvlog#GetCommand	plugged/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#xvlog#Handle	plugged/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#ghdl#GetCommand	plugged/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#ghdl#Handle	plugged/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#vcom#GetCommand	plugged/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#vcom#Handle	plugged/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#xvhdl#GetCommand	plugged/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#xvhdl#Handle	plugged/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCommand	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCommand(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetExecutable	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetExecutable(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#Handle	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vint#GetCommand	plugged/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version) abort$/;"	f
ale_linters#vim#vint#Handle	plugged/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vue#vls#GetProjectRoot	plugged/ale/ale_linters/vue/vls.vim	/^function! ale_linters#vue#vls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	plugged/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	plugged/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#Handle	plugged/ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#yamllint#GetCommand	plugged/ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#yamllint#Handle	plugged/ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yang#yang_lsp#GetProjectRoot	plugged/ale/ale_linters/yang/yang_lsp.vim	/^function! ale_linters#yang#yang_lsp#GetProjectRoot(buffer) abort$/;"	f
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    alias_filenames = []$/;"	v	class:Lexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    alias_filenames = ['*.incl', '*.inc', '*.las']$/;"	v	class:LassoLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css', '*.tpl']$/;"	v	class:CssSmartyLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssDjangoLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssErbLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssGenshiLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:CssPhpLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.css']$/;"	v	class:LassoCssLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.fhtml']$/;"	v	class:VelocityHtmlLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoHtmlLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml', '*.tpl']$/;"	v	class:HtmlSmartyLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlDjangoLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:HtmlGenshiLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.html', '*.htm', '*.xhtml']$/;"	v	class:RhtmlLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js', '*.tpl']$/;"	v	class:JavascriptSmartyLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptDjangoLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptErbLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptGenshiLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:JavascriptPhpLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.js']$/;"	v	class:LassoJavascriptLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.php', '*.html', '*.htm', '*.xhtml',$/;"	v	class:HtmlPhpLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.lasso', '*.lasso[89]',$/;"	v	class:LassoXmlLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.php', '*.php[345]']$/;"	v	class:XmlPhpLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.tpl']$/;"	v	class:XmlSmartyLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml', '*.vm']$/;"	v	class:VelocityXmlLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:GenshiLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlDjangoLexer
alias_filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    alias_filenames = ['*.xml']$/;"	v	class:XmlErbLexer
aliases	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    aliases = 0$/;"	v	class:GoParser
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    aliases = []$/;"	v	class:Formatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    aliases = ['bbcode', 'bb']$/;"	v	class:BBCodeFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    aliases = ['html']$/;"	v	class:HtmlFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    aliases = ['bmp', 'bitmap']$/;"	v	class:BmpImageFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    aliases = ['gif']$/;"	v	class:GifImageFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    aliases = ['img', 'IMG', 'png']$/;"	v	class:ImageFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    aliases = ['jpg', 'jpeg']$/;"	v	class:JpgImageFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    aliases = ['irc', 'IRC']$/;"	v	class:IRCFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    aliases = ['latex', 'tex']$/;"	v	class:LatexFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    aliases = ['raw', 'tokens']$/;"	v	class:RawTokenFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    aliases = ['testcase']$/;"	v	class:TestcaseFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    aliases = ['text', 'null']$/;"	v	class:NullFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    aliases = ['rtf']$/;"	v	class:RtfFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    aliases = ['svg']$/;"	v	class:SvgFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    aliases = ['terminal', 'console']$/;"	v	class:TerminalFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    aliases = ['terminal16m', 'console16m', '16m']$/;"	v	class:TerminalTrueColorFormatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    aliases = ['terminal256', 'console256', '256']$/;"	v	class:Terminal256Formatter
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    aliases = []$/;"	v	class:Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    aliases = ['as', 'actionscript']$/;"	v	class:ActionScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    aliases = ['as3', 'actionscript3']$/;"	v	class:ActionScript3Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    aliases = ['mxml']$/;"	v	class:MxmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    aliases = ['bc']$/;"	v	class:BCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    aliases = ['gap']$/;"	v	class:GAPLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    aliases = ['mathematica', 'mma', 'nb']$/;"	v	class:MathematicaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    aliases = ['mupad']$/;"	v	class:MuPADLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    aliases = ['at', 'ambienttalk', 'ambienttalk\/2']$/;"	v	class:AmbientTalkLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^    aliases = ['ampl']$/;"	v	class:AmplLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^    aliases = ['apl']$/;"	v	class:APLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    aliases = ['adl']$/;"	v	class:AdlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    aliases = ['cadl']$/;"	v	class:CadlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    aliases = ['odin']$/;"	v	class:OdinLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['c-objdump']$/;"	v	class:CObjdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['ca65']$/;"	v	class:Ca65Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['cpp-objdump', 'c++-objdumb', 'cxx-objdump']$/;"	v	class:CppObjdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['d-objdump']$/;"	v	class:DObjdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['gas', 'asm']$/;"	v	class:GasLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['hsail', 'hsa']$/;"	v	class:HsailLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['llvm']$/;"	v	class:LlvmLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['nasm']$/;"	v	class:NasmLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['objdump']$/;"	v	class:ObjdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['objdump-nasm']$/;"	v	class:NasmObjdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    aliases = ['tasm']$/;"	v	class:TasmLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    aliases = ['ahk', 'autohotkey']$/;"	v	class:AutohotkeyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    aliases = ['autoit']$/;"	v	class:AutoItLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    aliases = ['blitzbasic', 'b3d', 'bplus']$/;"	v	class:BlitzBasicLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    aliases = ['blitzmax', 'bmax']$/;"	v	class:BlitzMaxLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    aliases = ['cbmbas']$/;"	v	class:CbmBasicV2Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    aliases = ['monkey']$/;"	v	class:MonkeyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    aliases = ['qbasic', 'basic']$/;"	v	class:QBasicLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    aliases = ['bib', 'bibtex']$/;"	v	class:BibTeXLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    aliases = ['bst', 'bst-pybtex']$/;"	v	class:BSTLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['abap']$/;"	v	class:ABAPLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['cobol']$/;"	v	class:CobolLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['cobolfree']$/;"	v	class:CobolFreeformatLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['gooddata-cl']$/;"	v	class:GoodDataCLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['maql']$/;"	v	class:MaqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    aliases = ['openedge', 'abl', 'progress']$/;"	v	class:OpenEdgeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    aliases = ['c']$/;"	v	class:CLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    aliases = ['cpp', 'c++']$/;"	v	class:CppLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['arduino']$/;"	v	class:ArduinoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['clay']$/;"	v	class:ClayLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['cuda', 'cu']$/;"	v	class:CudaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['ec']$/;"	v	class:ECLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['mql', 'mq4', 'mq5', 'mql4', 'mql5']$/;"	v	class:MqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['nesc']$/;"	v	class:NesCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['pike']$/;"	v	class:PikeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['swig']$/;"	v	class:SwigLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    aliases = ['vala', 'vapi']$/;"	v	class:ValaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^    aliases = ['capnp']$/;"	v	class:CapnProtoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^    aliases = ['chapel', 'chpl']$/;"	v	class:ChapelLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    aliases = ['clean']$/;"	v	class:CleanLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['apacheconf', 'aconf', 'apache']$/;"	v	class:ApacheConfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['cfengine3', 'cf3']$/;"	v	class:Cfengine3Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['docker', 'dockerfile']$/;"	v	class:DockerLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['ini', 'cfg', 'dosini']$/;"	v	class:IniLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['kconfig', 'menuconfig', 'linux-config', 'kernel-config']$/;"	v	class:KconfigLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['lighty', 'lighttpd']$/;"	v	class:LighttpdConfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['nginx']$/;"	v	class:NginxConfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['pacmanconf']$/;"	v	class:PacmanConfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['pkgconfig']$/;"	v	class:PkgConfigLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['properties', 'jproperties']$/;"	v	class:PropertiesLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['registry']$/;"	v	class:RegeditLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['squidconf', 'squid.conf', 'squid']$/;"	v	class:SquidConfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['termcap']$/;"	v	class:TermcapLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['terminfo']$/;"	v	class:TerminfoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    aliases = ['terraform', 'tf']$/;"	v	class:TerraformLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    aliases = ["pypylog", "pypy"]$/;"	v	class:PyPyLogLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    aliases = ['vctreestatus']$/;"	v	class:VCTreeStatusLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    aliases = ['cr', 'crystal']$/;"	v	class:CrystalLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    aliases = ['csound', 'csound-orc']$/;"	v	class:CsoundOrchestraLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    aliases = ['csound-document', 'csound-csd']$/;"	v	class:CsoundDocumentLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    aliases = ['csound-score', 'csound-sco']$/;"	v	class:CsoundScoreLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    aliases = ['css']$/;"	v	class:CssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    aliases = ['less']$/;"	v	class:LessCssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    aliases = ['sass']$/;"	v	class:SassLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    aliases = ['scss']$/;"	v	class:ScssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    aliases = ['croc']$/;"	v	class:CrocLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    aliases = ['d']$/;"	v	class:DLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    aliases = ['minid']$/;"	v	class:MiniDLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    aliases = ['smali']$/;"	v	class:SmaliLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    aliases = ['json']$/;"	v	class:JsonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    aliases = ['json-object']$/;"	v	class:JsonBareObjectLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    aliases = ['jsonld', 'json-ld']$/;"	v	class:JsonLdLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    aliases = ['yaml']$/;"	v	class:YamlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    aliases = ['diff', 'udiff']$/;"	v	class:DiffLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    aliases = ['dpatch']$/;"	v	class:DarcsPatchLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    aliases = ['wdiff']$/;"	v	class:WDiffLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['aspx-cs']$/;"	v	class:CSharpAspxLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['aspx-vb']$/;"	v	class:VbNetAspxLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['boo']$/;"	v	class:BooLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['csharp', 'c#']$/;"	v	class:CSharpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['fsharp']$/;"	v	class:FSharpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['nemerle']$/;"	v	class:NemerleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    aliases = ['vb.net', 'vbnet']$/;"	v	class:VbNetLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['alloy']$/;"	v	class:AlloyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['bro']$/;"	v	class:BroLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['crmsh', 'pcmk']$/;"	v	class:CrmshLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['flatline']$/;"	v	class:FlatlineLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['mscgen', 'msc']$/;"	v	class:MscgenLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['pan']$/;"	v	class:PanLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['protobuf', 'proto']$/;"	v	class:ProtoBufLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['puppet']$/;"	v	class:PuppetLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['rsl']$/;"	v	class:RslLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['snowball']$/;"	v	class:SnowballLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['thrift']$/;"	v	class:ThriftLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    aliases = ['vgl']$/;"	v	class:VGLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    aliases = ['dylan']$/;"	v	class:DylanLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    aliases = ['dylan-console', 'dylan-repl']$/;"	v	class:DylanConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    aliases = ['dylan-lid', 'lid']$/;"	v	class:DylanLidLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    aliases = ['ecl']$/;"	v	class:ECLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^    aliases = ['eiffel']$/;"	v	class:EiffelLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    aliases = ['elm']$/;"	v	class:ElmLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    aliases = ['elixir', 'ex', 'exs']$/;"	v	class:ElixirLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    aliases = ['erl']$/;"	v	class:ErlangShellLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    aliases = ['erlang']$/;"	v	class:ErlangLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    aliases = ['iex']$/;"	v	class:ElixirConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['aheui']$/;"	v	class:AheuiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['befunge']$/;"	v	class:BefungeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['brainfuck', 'bf']$/;"	v	class:BrainfuckLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['camkes', 'idl4']$/;"	v	class:CAmkESLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['capdl']$/;"	v	class:CapDLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    aliases = ['redcode']$/;"	v	class:RedcodeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    aliases = ['ezhil']$/;"	v	class:EzhilLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    aliases = ['factor']$/;"	v	class:FactorLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    aliases = ['fan']$/;"	v	class:FantomLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    aliases = ['felix', 'flx']$/;"	v	class:FelixLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    aliases = ['forth']$/;"	v	class:ForthLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    aliases = ['fortran']$/;"	v	class:FortranLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    aliases = ['fortranfixed']$/;"	v	class:FortranFixedLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    aliases = ['foxpro', 'vfp', 'clipper', 'xbase']$/;"	v	class:FoxProLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    aliases = ['go']$/;"	v	class:GoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    aliases = ['abnf']$/;"	v	class:AbnfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    aliases = ['bnf']$/;"	v	class:BnfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    aliases = ['jsgf']$/;"	v	class:JsgfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^    aliases = ['cypher']$/;"	v	class:CypherLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    aliases = ['asy', 'asymptote']$/;"	v	class:AsymptoteLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    aliases = ['glsl']$/;"	v	class:GLShaderLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    aliases = ['gnuplot']$/;"	v	class:GnuplotLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    aliases = ['postscript', 'postscr']$/;"	v	class:PostScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    aliases = ['pov']$/;"	v	class:PovrayLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['agda']$/;"	v	class:AgdaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['cryptol', 'cry']$/;"	v	class:CryptolLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['haskell', 'hs']$/;"	v	class:HaskellLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['idris', 'idr']$/;"	v	class:IdrisLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['koka']$/;"	v	class:KokaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['lagda', 'literate-agda']$/;"	v	class:LiterateAgdaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['lcry', 'literate-cryptol', 'lcryptol']$/;"	v	class:LiterateCryptolLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['lhs', 'literate-haskell', 'lhaskell']$/;"	v	class:LiterateHaskellLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    aliases = ['lidr', 'literate-idris', 'lidris']$/;"	v	class:LiterateIdrisLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    aliases = ['haxeml', 'hxml']$/;"	v	class:HxmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    aliases = ['hx', 'haxe', 'hxsl']$/;"	v	class:HaxeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    aliases = ['systemverilog', 'sv']$/;"	v	class:SystemVerilogLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    aliases = ['verilog', 'v']$/;"	v	class:VerilogLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    aliases = ['vhdl']$/;"	v	class:VhdlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^    aliases = ['hexdump']$/;"	v	class:HexdumpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['dtd']$/;"	v	class:DtdLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['haml']$/;"	v	class:HamlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['html']$/;"	v	class:HtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['pug', 'jade']$/;"	v	class:PugLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['scaml']$/;"	v	class:ScamlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['xml']$/;"	v	class:XmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    aliases = ['xslt']$/;"	v	class:XsltLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    aliases = ['idl']$/;"	v	class:IDLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    aliases = ['igor', 'igorpro']$/;"	v	class:IgorLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    aliases = ['limbo']$/;"	v	class:LimboLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    aliases = ['control', 'debcontrol']$/;"	v	class:DebianControlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    aliases = ['nsis', 'nsi', 'nsh']$/;"	v	class:NSISLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    aliases = ['sourceslist', 'sources.list', 'debsources']$/;"	v	class:SourcesListLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    aliases = ['spec']$/;"	v	class:RPMSpecLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    aliases = ['i6t']$/;"	v	class:Inform6TemplateLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    aliases = ['inform6', 'i6']$/;"	v	class:Inform6Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    aliases = ['inform7', 'i7']$/;"	v	class:Inform7Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    aliases = ['tads3']$/;"	v	class:Tads3Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^    aliases = ['io']$/;"	v	class:IoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    aliases = ['j']$/;"	v	class:JLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['coffee-script', 'coffeescript', 'coffee']$/;"	v	class:CoffeeScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['dart']$/;"	v	class:DartLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['earl-grey', 'earlgrey', 'eg']$/;"	v	class:EarlGreyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['js', 'javascript']$/;"	v	class:JavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['juttle', 'juttle']$/;"	v	class:JuttleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['kal']$/;"	v	class:KalLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['lasso', 'lassoscript']$/;"	v	class:LassoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['live-script', 'livescript']$/;"	v	class:LiveScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['mask']$/;"	v	class:MaskLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['objective-j', 'objectivej', 'obj-j', 'objj']$/;"	v	class:ObjectiveJLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    aliases = ['ts', 'typescript']$/;"	v	class:TypeScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    aliases = ['jlcon']$/;"	v	class:JuliaConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    aliases = ['julia', 'jl']$/;"	v	class:JuliaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['aspectj']$/;"	v	class:AspectJLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['ceylon']$/;"	v	class:CeylonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['clojure', 'clj']$/;"	v	class:ClojureLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['clojurescript', 'cljs']$/;"	v	class:ClojureScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['golo']$/;"	v	class:GoloLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['gosu']$/;"	v	class:GosuLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['groovy']$/;"	v	class:GroovyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['gst']$/;"	v	class:GosuTemplateLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['ioke', 'ik']$/;"	v	class:IokeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['jasmin', 'jasminxt']$/;"	v	class:JasminLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['java']$/;"	v	class:JavaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['kotlin']$/;"	v	class:KotlinLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['pig']$/;"	v	class:PigLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['scala']$/;"	v	class:ScalaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    aliases = ['xtend']$/;"	v	class:XtendLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['common-lisp', 'cl', 'lisp']$/;"	v	class:CommonLispLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['cpsa']$/;"	v	class:CPSALexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['emacs', 'elisp', 'emacs-lisp']$/;"	v	class:EmacsLispLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['extempore']$/;"	v	class:XtlangLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['hylang']$/;"	v	class:HyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['newlisp']$/;"	v	class:NewLispLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['racket', 'rkt']$/;"	v	class:RacketLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['scheme', 'scm']$/;"	v	class:SchemeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    aliases = ['shen']$/;"	v	class:ShenLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    aliases = ['basemake']$/;"	v	class:BaseMakefileLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    aliases = ['cmake']$/;"	v	class:CMakeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    aliases = ['make', 'makefile', 'mf', 'bsdmake']$/;"	v	class:MakefileLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['bbcode']$/;"	v	class:BBCodeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['css+mozpreproc']$/;"	v	class:MozPreprocCssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['groff', 'nroff', 'man']$/;"	v	class:GroffLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['javascript+mozpreproc']$/;"	v	class:MozPreprocJavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['md']$/;"	v	class:MarkdownLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['rst', 'rest', 'restructuredtext']$/;"	v	class:RstLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['tex', 'latex']$/;"	v	class:TexLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['trac-wiki', 'moin']$/;"	v	class:MoinWikiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = ['xul+mozpreproc']$/;"	v	class:MozPreprocXulLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocHashLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    aliases = [name]$/;"	v	class:MozPreprocPercentLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    aliases = ['matlab']$/;"	v	class:MatlabLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    aliases = ['matlabsession']$/;"	v	class:MatlabSessionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    aliases = ['octave']$/;"	v	class:OctaveLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    aliases = ['scilab']$/;"	v	class:ScilabLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    aliases = ['ocaml']$/;"	v	class:OcamlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    aliases = ['opa']$/;"	v	class:OpaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    aliases = ['sml']$/;"	v	class:SMLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    aliases = ['bugs', 'winbugs', 'openbugs']$/;"	v	class:BugsLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    aliases = ['jags']$/;"	v	class:JagsLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    aliases = ['modelica']$/;"	v	class:ModelicaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    aliases = ['stan']$/;"	v	class:StanLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    aliases = ['modula2', 'm2']$/;"	v	class:Modula2Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^    aliases = ['monte']$/;"	v	class:MonteLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    aliases = ['ncl']$/;"	v	class:NCLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    aliases = ['nim', 'nimrod']$/;"	v	class:NimrodLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^    aliases = ['nit']$/;"	v	class:NitLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    aliases = ['nixos', 'nix']$/;"	v	class:NixLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    aliases = ['componentpascal', 'cp']$/;"	v	class:ComponentPascalLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    aliases = ['logos']$/;"	v	class:LogosLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    aliases = ['objective-c', 'objectivec', 'obj-c', 'objc']$/;"	v	class:ObjectiveCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    aliases = ['objective-c++', 'objectivec++', 'obj-c++', 'objc++']$/;"	v	class:ObjectiveCppLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    aliases = ['swift']$/;"	v	class:SwiftLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^    aliases = ['ooc']$/;"	v	class:OocLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    aliases = ['parasail']$/;"	v	class:ParaSailLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr']$/;"	v	class:AntlrLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-as', 'antlr-actionscript']$/;"	v	class:AntlrActionScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-cpp']$/;"	v	class:AntlrCppLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-csharp', 'antlr-c#']$/;"	v	class:AntlrCSharpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-java']$/;"	v	class:AntlrJavaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-objc']$/;"	v	class:AntlrObjectiveCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-perl']$/;"	v	class:AntlrPerlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-python']$/;"	v	class:AntlrPythonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['antlr-ruby', 'antlr-rb']$/;"	v	class:AntlrRubyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ebnf']$/;"	v	class:EbnfLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel']$/;"	v	class:RagelLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-c']$/;"	v	class:RagelCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-cpp']$/;"	v	class:RagelCppLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-d']$/;"	v	class:RagelDLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-em']$/;"	v	class:RagelEmbeddedLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-java']$/;"	v	class:RagelJavaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-objc']$/;"	v	class:RagelObjectiveCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['ragel-ruby', 'ragel-rb']$/;"	v	class:RagelRubyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    aliases = ['treetop']$/;"	v	class:TreetopLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    aliases = ['ada', 'ada95', 'ada2005']$/;"	v	class:AdaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    aliases = ['delphi', 'pas', 'pascal', 'objectpascal']$/;"	v	class:DelphiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    aliases = ['pawn']$/;"	v	class:PawnLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    aliases = ['sp']$/;"	v	class:SourcePawnLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    aliases = ['perl', 'pl']$/;"	v	class:PerlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    aliases = ['perl6', 'pl6']$/;"	v	class:Perl6Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    aliases = ['php', 'php3', 'php4', 'php5']$/;"	v	class:PhpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    aliases = ['zephir']$/;"	v	class:ZephirLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    aliases = ['praat']$/;"	v	class:PraatLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    aliases = ['logtalk']$/;"	v	class:LogtalkLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    aliases = ['prolog']$/;"	v	class:PrologLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['cython', 'pyx', 'pyrex']$/;"	v	class:CythonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['dg']$/;"	v	class:DgLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['numpy']$/;"	v	class:NumPyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['py3tb']$/;"	v	class:Python3TracebackLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['pycon']$/;"	v	class:PythonConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['pytb']$/;"	v	class:PythonTracebackLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['python', 'py', 'sage']$/;"	v	class:PythonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    aliases = ['python3', 'py3']$/;"	v	class:Python3Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^    aliases = ['qvto', 'qvt']$/;"	v	class:QVToLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    aliases = ['rconsole', 'rout']$/;"	v	class:RConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    aliases = ['rd']$/;"	v	class:RdLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    aliases = ['splus', 's', 'r']$/;"	v	class:SLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    aliases = ['sparql']$/;"	v	class:SparqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    aliases = ['turtle']$/;"	v	class:TurtleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    aliases = ['rebol']$/;"	v	class:RebolLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    aliases = ['red', 'red\/system']$/;"	v	class:RedLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    aliases = ['resource', 'resourcebundle']$/;"	v	class:ResourceLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^    aliases = ['rnc', 'rng-compact']$/;"	v	class:RNCCompactLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    aliases = ['roboconf-graph']$/;"	v	class:RoboconfGraphLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    aliases = ['roboconf-instances']$/;"	v	class:RoboconfInstancesLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    aliases = ['robotframework']$/;"	v	class:RobotFrameworkLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    aliases = ['fancy', 'fy']$/;"	v	class:FancyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    aliases = ['rb', 'ruby', 'duby']$/;"	v	class:RubyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    aliases = ['rbcon', 'irb']$/;"	v	class:RubyConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    aliases = ['rust']$/;"	v	class:RustLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    aliases   = ['sas']$/;"	v	class:SASLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ["moon", "moonscript"]$/;"	v	class:MoonScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['applescript']$/;"	v	class:AppleScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['chai', 'chaiscript']$/;"	v	class:ChaiscriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['easytrieve']$/;"	v	class:EasytrieveLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['hybris', 'hy']$/;"	v	class:HybrisLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['jcl']$/;"	v	class:JclLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['lsl']$/;"	v	class:LSLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['lua']$/;"	v	class:LuaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['moocode', 'moo']$/;"	v	class:MOOCodeLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    aliases = ['rexx', 'arexx']$/;"	v	class:RexxLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['bash', 'sh', 'ksh', 'zsh', 'shell']$/;"	v	class:BashLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['bat', 'batch', 'dosbatch', 'winbatch']$/;"	v	class:BatchLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['console', 'shell-session']$/;"	v	class:BashSessionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['doscon']$/;"	v	class:MSDOSSessionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['fish', 'fishshell']$/;"	v	class:FishShellLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['powershell', 'posh', 'ps1', 'psm1']$/;"	v	class:PowerShellLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['ps1con']$/;"	v	class:PowerShellSessionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['tcsh', 'csh']$/;"	v	class:TcshLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    aliases = ['tcshcon']$/;"	v	class:TcshSessionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    aliases = ['newspeak', ]$/;"	v	class:NewspeakLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    aliases = ['smalltalk', 'squeak', 'st']$/;"	v	class:SmalltalkLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^    aliases = ['nusmv']$/;"	v	class:NuSMVLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^    aliases = ["snobol"]$/;"	v	class:SnobolLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    aliases = ['raw']$/;"	v	class:RawTokenLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    aliases = ['text']$/;"	v	class:TextLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['mysql']$/;"	v	class:MySqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['plpgsql']$/;"	v	class:PlPgsqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['postgresql', 'postgres']$/;"	v	class:PostgresLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['psql', 'postgresql-console', 'postgres-console']$/;"	v	class:PostgresConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['rql']$/;"	v	class:RqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['sql']$/;"	v	class:SqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['sqlite3']$/;"	v	class:SqliteConsoleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = ['tsql', 't-sql']$/;"	v	class:TransactSqlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    aliases = []    # not public$/;"	v	class:PsqlRegexLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^    aliases   = ['stata', 'do']$/;"	v	class:StataLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    aliases = ['sc', 'supercollider']$/;"	v	class:SuperColliderLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    aliases = ['tcl']$/;"	v	class:TclLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ["html+handlebars"]$/;"	v	class:HandlebarsHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ["html+ng2"]$/;"	v	class:Angular2HtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ["html+twig"]$/;"	v	class:TwigHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['cf']$/;"	v	class:ColdfusionMarkupLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['cfc']$/;"	v	class:ColdfusionCFCLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['cfm']$/;"	v	class:ColdfusionHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['cfs']$/;"	v	class:ColdfusionLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['cheetah', 'spitfire']$/;"	v	class:CheetahLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+django', 'css+jinja']$/;"	v	class:CssDjangoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+erb', 'css+ruby']$/;"	v	class:CssErbLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+genshitext', 'css+genshi']$/;"	v	class:CssGenshiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+lasso']$/;"	v	class:LassoCssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+mako']$/;"	v	class:MakoCssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+myghty']$/;"	v	class:MyghtyCssLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+php']$/;"	v	class:CssPhpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['css+smarty']$/;"	v	class:CssSmartyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['django', 'jinja']$/;"	v	class:DjangoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['erb']$/;"	v	class:ErbLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['evoque']$/;"	v	class:EvoqueLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['genshi', 'kid', 'xml+genshi', 'xml+kid']$/;"	v	class:GenshiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['genshitext']$/;"	v	class:GenshiTextLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['handlebars']$/;"	v	class:HandlebarsLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+cheetah', 'html+spitfire', 'htmlcheetah']$/;"	v	class:CheetahHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+django', 'html+jinja', 'htmldjango']$/;"	v	class:HtmlDjangoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+evoque']$/;"	v	class:EvoqueHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+genshi', 'html+kid']$/;"	v	class:HtmlGenshiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+lasso']$/;"	v	class:LassoHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+mako']$/;"	v	class:MakoHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+myghty']$/;"	v	class:MyghtyHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+php']$/;"	v	class:HtmlPhpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+smarty']$/;"	v	class:HtmlSmartyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['html+velocity']$/;"	v	class:VelocityHtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+cheetah', 'javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+django', 'javascript+django',$/;"	v	class:JavascriptDjangoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+erb', 'javascript+erb', 'js+ruby', 'javascript+ruby']$/;"	v	class:JavascriptErbLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+genshitext', 'js+genshi', 'javascript+genshitext',$/;"	v	class:JavascriptGenshiLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+lasso', 'javascript+lasso']$/;"	v	class:LassoJavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+mako', 'javascript+mako']$/;"	v	class:MakoJavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+myghty', 'javascript+myghty']$/;"	v	class:MyghtyJavascriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+php', 'javascript+php']$/;"	v	class:JavascriptPhpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['js+smarty', 'javascript+smarty']$/;"	v	class:JavascriptSmartyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['jsp']$/;"	v	class:JspLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['liquid']$/;"	v	class:LiquidLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['mako']$/;"	v	class:MakoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['mason']$/;"	v	class:MasonLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['myghty']$/;"	v	class:MyghtyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['ng2']$/;"	v	class:Angular2Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['rhtml', 'html+erb', 'html+ruby']$/;"	v	class:RhtmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['smarty']$/;"	v	class:SmartyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['ssp']$/;"	v	class:SspLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['tea']$/;"	v	class:TeaTemplateLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['twig']$/;"	v	class:TwigLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['velocity']$/;"	v	class:VelocityLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+cheetah', 'xml+spitfire']$/;"	v	class:CheetahXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+django', 'xml+jinja']$/;"	v	class:XmlDjangoLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+erb', 'xml+ruby']$/;"	v	class:XmlErbLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+evoque']$/;"	v	class:EvoqueXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+lasso']$/;"	v	class:LassoXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+mako']$/;"	v	class:MakoXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+myghty']$/;"	v	class:MyghtyXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+php']$/;"	v	class:XmlPhpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+smarty']$/;"	v	class:XmlSmartyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['xml+velocity']$/;"	v	class:VelocityXmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    aliases = ['yaml+jinja', 'salt', 'sls']$/;"	v	class:YamlJinjaLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    aliases = ['cucumber', 'gherkin']$/;"	v	class:GherkinLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    aliases = ['tap']$/;"	v	class:TAPLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    aliases = ['awk', 'gawk', 'mawk', 'nawk']$/;"	v	class:AwkLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    aliases = ['vim']$/;"	v	class:VimLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    aliases = ['http']$/;"	v	class:HttpLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    aliases = ['irc']$/;"	v	class:IrcLogsLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    aliases = ['pot', 'po']$/;"	v	class:GettextLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    aliases = ['todotxt']$/;"	v	class:TodotxtLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    aliases = ['coq']$/;"	v	class:CoqLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    aliases = ['isabelle']$/;"	v	class:IsabelleLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    aliases = ['lean']$/;"	v	class:LeanLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^    aliases = ['rts','trafficscript']$/;"	v	class:RtsLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    aliases = ['typoscript']$/;"	v	class:TypoScriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    aliases = ['typoscriptcssdata']$/;"	v	class:TypoScriptCssDataLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    aliases = ['typoscripthtmldata']$/;"	v	class:TypoScriptHtmlDataLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    aliases = ['urbiscript']$/;"	v	class:UrbiscriptLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    aliases = ['vcl']$/;"	v	class:VCLLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    aliases = ['vclsnippets', 'vclsnippet']$/;"	v	class:VCLSnippetLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    aliases = ['boogie']$/;"	v	class:BoogieLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    aliases = ['silver']$/;"	v	class:SilverLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aliases = ['cirru']$/;"	v	class:CirruLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aliases = ['duel', 'jbst', 'jsonml+bst']$/;"	v	class:DuelLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aliases = ['qml', 'qbs']$/;"	v	class:QmlLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aliases = ['slim']$/;"	v	class:SlimLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aliases = ['xquery', 'xqy', 'xq', 'xql', 'xqm']$/;"	v	class:XQueryLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^    aliases = ['whiley']$/;"	v	class:WhileyLexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    aliases = ['x10', 'xten']$/;"	v	class:X10Lexer
aliases	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^    aliases = ['xorg.conf']$/;"	v	class:XorgLexer
alignQual	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    alignQual = r'(align\\(\\d+\\))'$/;"	v	class:HsailLexer
all	plugged/emmet-vim/Makefile	/^all : emmet-vim.zip$/;"	t
all	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
all	plugged/javascript-libraries-syntax.vim/Makefile	/^all: install-deps install$/;"	t
all	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def all(seq):$/;"	f
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerCommand
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerModule
allOf	plugged/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerSocket
all_interfaces	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^    all_interfaces = set()$/;"	v
all_primitives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^    all_primitives = set()$/;"	v
all_protocols	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^    all_protocols  = set()$/;"	v
all_timezones	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^all_timezones = LazyList($/;"	v
all_timezones	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^all_timezones = \\$/;"	v
all_timezones_set	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^all_timezones_set = LazySet(all_timezones)$/;"	v
allexcept	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^def allexcept(*args):$/;"	f
allocQual	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    allocQual = r'(alloc\\(agent\\))'$/;"	v	class:HsailLexer
allowUnreachableCode	plugged/coc.nvim/tsconfig.json	/^    "allowUnreachableCode": false,$/;"	b	object:compilerOptions
allow_or_ignore_nan	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int allow_or_ignore_nan;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
allowed_gai_family	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^def allowed_gai_family():$/;"	f
allowed_variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^allowed_variable = ($/;"	v
alnum	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    alnum = '\\w'$/;"	v	class:ElixirLexer
alphanumid_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    alphanumid_re = r"[a-zA-Z][\\w']*"$/;"	v	class:SMLLexer
alphanumid_reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    alphanumid_reserved = set(($/;"	v	class:SMLLexer
alsaconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "alsaconf": null,$/;"	z
amiga	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "amiga": null,$/;"	z
aml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "aml": null,$/;"	z
ampl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ampl": null,$/;"	z
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def analyse_text(text):$/;"	m	class:Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    def analyse_text(text):$/;"	m	class:ActionScript3Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    def analyse_text(self, text):$/;"	m	class:Ca65Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    def analyse_text(text):$/;"	m	class:GasLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    def analyse_text(self, text):$/;"	m	class:CbmBasicV2Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    def analyse_text(text):$/;"	m	class:QBasicLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    def analyse_text(text):$/;"	m	class:CppLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    def analyse_text(text):$/;"	m	class:SwigLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:IniLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    def analyse_text(text):$/;"	m	class:RegeditLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    def analyse_text(text):$/;"	m	class:SmaliLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    def analyse_text(text):$/;"	m	class:DiffLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:CSharpAspxLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetAspxLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    def analyse_text(text):$/;"	m	class:VbNetLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def analyse_text(text):$/;"	m	class:RslLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    def analyse_text(text):$/;"	m	class:HaxeLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:DtdLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:HtmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    def analyse_text(text):$/;"	m	class:XsltLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    def analyse_text(text):$/;"	m	class:LimboLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    def analyse_text(text):$/;"	m	class:SourcesListLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:LassoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:ObjectiveJLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    def analyse_text(text):$/;"	m	class:TypeScriptLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    def analyse_text(text):$/;"	m	class:JuliaLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:GroovyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    def analyse_text(text):$/;"	m	class:JasminLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def analyse_text(text):$/;"	m	class:HyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:CMakeLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    def analyse_text(text):$/;"	m	class:MakefileLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:GroffLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:RstLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    def analyse_text(text):$/;"	m	class:TexLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    def analyse_text(text):$/;"	m	class:MatlabLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:BugsLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:JagsLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    def analyse_text(text):$/;"	m	class:StanLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    def analyse_text(text):$/;"	m	class:NixLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^        def analyse_text(text):$/;"	m	class:objective.GeneratedObjectiveCVariant
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    def analyse_text(text):$/;"	m	class:LogosLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrActionScriptLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCSharpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrCppLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrJavaLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrObjectiveCLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPerlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrPythonLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:AntlrRubyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelCppLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelDLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelEmbeddedLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelJavaLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelObjectiveCLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    def analyse_text(text):$/;"	m	class:RagelRubyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:Perl6Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def analyse_text(text):$/;"	m	class:PerlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    def analyse_text(text):$/;"	m	class:PhpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:LogtalkLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    def analyse_text(text):$/;"	m	class:PrologLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:NumPyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:Python3Lexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def analyse_text(text):$/;"	m	class:PythonLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    def analyse_text(text):$/;"	m	class:SLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    def analyse_text(text):$/;"	m	class:RebolLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    def analyse_text(text):$/;"	m	class:ResourceLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    def analyse_text(text):$/;"	m	class:RubyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def analyse_text(text):$/;"	m	class:EasytrieveLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def analyse_text(text):$/;"	m	class:JclLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def analyse_text(text):$/;"	m	class:RexxLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def analyse_text(text):$/;"	m	class:BashLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    def analyse_text(text):$/;"	m	class:TextLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    def analyse_text(text):$/;"	m	class:TclLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssDjangoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssErbLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssGenshiLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssPhpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:CssSmartyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:DjangoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:ErbLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:GenshiLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlDjangoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlGenshiLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlPhpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:HtmlSmartyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptDjangoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptErbLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptGenshiLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptPhpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JavascriptSmartyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:JspLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoCssLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoHtmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoJavascriptLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:LassoXmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:MasonLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:RhtmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SmartyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:SspLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:TeaTemplateLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:VelocityXmlLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlDjangoLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlErbLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlPhpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def analyse_text(text):$/;"	m	class:XmlSmartyLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    def analyse_text(text):$/;"	m	class:HttpLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    def analyse_text(text):$/;"	m	class:CoqLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    def analyse_text(text):$/;"	m	class:TypoScriptLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    def analyse_text(text):$/;"	m	class:VCLLexer
analyse_text	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    def analyse_text(text):$/;"	m	class:VCLSnippetLexer
ansicolors	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^ansicolors = set(_ansimap)$/;"	v
ansiformat	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^def ansiformat(attr, text):$/;"	f
answer	plugged/ale/test/json_files/testfile.json	/^{"answer":42}$/;"	n
ant	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ant": null,$/;"	z
antlr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "antlr": null,$/;"	z
apache	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "apache": null,$/;"	z
apacheconf	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "apacheconf": "ApacheConf",$/;"	s
apachestyle	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "apachestyle": null,$/;"	z
aposattrcontentchar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    aposattrcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_`|~]'$/;"	v	class:XQueryLexer
apparent_encoding	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def apparent_encoding(self):$/;"	m	class:Response
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def append(self, dep, truncate=False, separator=None, truncate_to=None,$/;"	m	class:TokenParser
append	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def append(self, lineno, line):$/;"	m	class:ParsingError
applescript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "applescript": "AppleScript",$/;"	s
apply_filters	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^def apply_filters(stream, filters, lexer=None):$/;"	f
arch	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "arch": null,$/;"	z
argerror	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function argerror (caller, narg, extramsg)$/;"	f
args	plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerCommand.properties
args	plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerModule.properties
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ''$/;"	v	class:_AnonBase
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ''$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ''$/;"	v	class:_AddFuncBase
args	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    args = None$/;"	v	class:Heartbeat
args	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    args = None$/;"	v	class:Queue
art	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "art": null,$/;"	z
article	plugged/emmet-vim/docs/static/css/style-sites.css	/^article {$/;"	s
as_unicode	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def as_unicode(string):$/;"	f
as_vimencoding	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def as_vimencoding(string):$/;"	f
ascii	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:CryptolLexer
ascii	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:HaskellLexer
ascii	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    ascii = ('NUL', 'SOH', '[SE]TX', 'EOT', 'ENQ', 'ACK',$/;"	v	class:IdrisLexer
ascii	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def ascii(s):$/;"	f
ascii_char_size	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_char_size(JSON_UNICHR c)$/;"	f	typeref:typename:Py_ssize_t	file:
ascii_escape_char	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_char(JSON_UNICHR c, char *output, Py_ssize_t chars)$/;"	f	typeref:typename:Py_ssize_t	file:
ascii_escape_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_str(PyObject *pystr)$/;"	f	typeref:typename:PyObject *	file:
ascii_escape_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^ascii_escape_unicode(PyObject *pystr)$/;"	f	typeref:typename:PyObject *	file:
asciicast-4568	plugged/emmet-vim/docs/index.html	/^				<script type="text\/javascript" src="https:\/\/asciinema.org\/a\/4568.js" id="asciicast-4568/;"	I
asm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asm": "Assembly",$/;"	s
asm68k	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asm68k": "Assembly",$/;"	s
asmh8300	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asmh8300": "Assembly",$/;"	s
asn	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asn": null,$/;"	z
asp	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "asp": "ASP",$/;"	s
aspperl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "aspperl": null,$/;"	z
aspvbs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "aspvbs": null,$/;"	z
assembly	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "assembly": "Assembly",$/;"	s
assert	plugged/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const assert = tslib_1.__importStar(require("assert"));$/;"	C
assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def assertCountEqual(self, *args, **kwargs):$/;"	f
assertCountEqual	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def assertCountEqual(self, *args, **kwargs):$/;"	f
assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def assertRaisesRegex(self, *args, **kwargs):$/;"	f
assertRaisesRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def assertRaisesRegex(self, *args, **kwargs):$/;"	f
assertRegex	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def assertRegex(self, *args, **kwargs):$/;"	f
assertRegex	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def assertRegex(self, *args, **kwargs):$/;"	f
assert_fingerprint	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    assert_fingerprint = None$/;"	v	class:VerifiedHTTPSConnection
assert_fingerprint	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def assert_fingerprint(cert, fingerprint):$/;"	f
assert_header_parsing	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/response.py	/^def assert_header_parsing(headers):$/;"	f
assets	plugged/coc.nvim/package.json	/^    "assets": "lib\/**\/*.json"$/;"	s	object:pkg
asterisk	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asterisk": null,$/;"	z
asteriskvm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "asteriskvm": null,$/;"	z
atlas	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "atlas": null,$/;"	z
atom_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    atom_re = r"(?:[a-z]\\w*|'[^\\n']*[^\\\\]')"$/;"	v	class:ErlangLexer
author	plugged/coc.nvim/package.json	/^  "author": "Qiming Zhao <chemzqm@gmail.com>",$/;"	s
author	plugged/emmet-vim/docs/index.html	/^			<article id="author">$/;"	I
author	plugged/tcomment_vim/addon-info.json	/^    "author" : "Tom Link <micathom at gmail com>",$/;"	s
author	plugged/vim-snippets/addon-info.json	/^  "author" : "community",$/;"	s
auto	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^auto = _getauto()$/;"	v
autohotkey	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "autohotkey": null,$/;"	z
autoit	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "autoit": null,$/;"	z
automake	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "automake": null,$/;"	z
ave	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ave": null,$/;"	z
awk	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "awk": "Awk",$/;"	s
awk	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "awk": null,$/;"	z
ayacc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ayacc": null,$/;"	z
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = '', ''$/;"	v	class:TestEmptyString
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'Hello', 'Hello\\nWorld\\nWorld\\nWorld'$/;"	v	class:TestLotsaNewlines
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'abc', 'def'$/;"	v	class:TestNoSubstring
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'abcdef', 'abcdef'$/;"	v	class:TestAllMatch
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = 'hasomelongertextbl', 'hol'$/;"	v	class:TestCommonCharacters
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello   World']$/;"	v	class:TestGuessing_InsertOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello   World']$/;"	v	class:TestGuessing_InsertOneChar1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello World']$/;"	v	class:TestGuessing_BackspaceOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ['Hello  World'], ['Hello World']$/;"	v	class:TestGuessing_DeleteOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = [], []$/;"	v	class:TestGuessing_Noop0
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne Hinten'$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne hallo  Hinten'$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'hallo Blah mitte=sdfdsfsd\\nhallo b mittekjshdkfhkhsdfdsf'$/;"	v	class:TestCrash
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'hallo End t'$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'hi first line\\nsecond line k world'$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'n'$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 's'$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'this is it a this is it'$/;"	v	class:TestUltiSnipsProblem
b	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "b": null,$/;"	z
b	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    def b(s):$/;"	f
b	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def b(s):$/;"	f
b	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def b(s):$/;"	f
b:current_syntax	plugged/ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:current_syntax	plugged/ale/syntax/ale-preview-selection.vim	/^let b:current_syntax = 'ale-preview-selection'$/;"	v
b:current_syntax	plugged/php.vim/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/vim-blade/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	plugged/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-syntax-extra/after/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	plugged/vim-syntax-extra/after/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	plugged/vim-vue/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-blade/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugged/vim-blade/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-vue/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:done_vimsnippets	plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_skip	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:match_words	plugged/vim-blade/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:sql_type_override	plugged/php.vim/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_indent	plugged/vim-javascript/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
baan	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "baan": null,$/;"	z
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    background_color = '#ffffff'$/;"	v	class:Style
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol.py	/^    background_color = "#ffffff"$/;"	v	class:AlgolStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol_nu.py	/^    background_color = "#ffffff"$/;"	v	class:Algol_NuStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/arduino.py	/^    background_color = "#ffffff"$/;"	v	class:ArduinoStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/bw.py	/^    background_color = "#ffffff"$/;"	v	class:BlackWhiteStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/default.py	/^    background_color = "#f8f8f8"$/;"	v	class:DefaultStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/emacs.py	/^    background_color = "#f8f8f8"$/;"	v	class:EmacsStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/friendly.py	/^    background_color = "#f0f0f0"$/;"	v	class:FriendlyStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/fruity.py	/^    background_color = '#111111'$/;"	v	class:FruityStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/manni.py	/^    background_color = '#f0f3f3'$/;"	v	class:ManniStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/monokai.py	/^    background_color = "#272822"$/;"	v	class:MonokaiStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/native.py	/^    background_color = '#202020'$/;"	v	class:NativeStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoDarkStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^    background_color = BACKGROUND$/;"	v	class:ParaisoLightStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/perldoc.py	/^    background_color = '#eeeedd'$/;"	v	class:PerldocStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^    background_color = WHITE$/;"	v	class:RainbowDashStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rrt.py	/^    background_color = '#000000'$/;"	v	class:RrtStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/tango.py	/^    background_color = "#f8f8f8"$/;"	v	class:TangoStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vim.py	/^    background_color = "#000000"$/;"	v	class:VimStyle
background_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vs.py	/^    background_color = "#ffffff"$/;"	v	class:VisualStudioStyle
backport_makefile	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/backports/makefile.py	/^def backport_makefile(self, mode="r", buffering=None, encoding=None,$/;"	f
bar.foo	plugged/coc.nvim/src/__tests__/modules/settings.json	/^  "bar.foo": 2,$/;"	n
base	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^    base = os.path.join(os.path.dirname(__file__), 'zoneinfo')$/;"	v
base_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    base_re = r'(?:[2-9]|[12][0-9]|3[0-6])'$/;"	v	class:ErlangLexer
base_str	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    base_str = (bytes, str)$/;"	v
base_str	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    base_str = (str, unicode)$/;"	v
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
basestring	plugged/vim-wakatime/packages/wakatime/compat.py	/^    basestring = (str, bytes)$/;"	v
basestring	plugged/vim-wakatime/packages/wakatime/compat.py	/^    basestring = basestring$/;"	v
basestring	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    basestring = str$/;"	v
basestring	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    basestring = (str, bytes)$/;"	v
basestring	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    basestring = basestring$/;"	v
basestring	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^from .packages.six import string_types as basestring, binary_type, PY3$/;"	x
bash	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "bash": "Bash",$/;"	s
basic	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "basic": "Basic",$/;"	s
basic	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "basic": "Basic",$/;"	s
bb_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bb_name = r'[a-z]\\w*'$/;"	v	class:BlitzBasicLexer
bb_sktypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bb_sktypes = r'@{1,2}|[#$%]'$/;"	v	class:BlitzBasicLexer
bb_var	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bb_var = (r'(%s)(?:([ \\t]*)(%s)|([ \\t]*)([.])([ \\t]*)(?:(%s)))?') % \\$/;"	v	class:BlitzBasicLexer
bc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bc": null,$/;"	z
bcmath	plugged/php.vim/attic/syntax.ini	/^bcmath = yes$/;"	k	section:extensions
bdf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bdf": null,$/;"	z
before_get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_get(self, parser, section, option, value, defaults):$/;"	m	class:BasicInterpolation
before_get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_get(self, parser, section, option, value, defaults):$/;"	m	class:ExtendedInterpolation
before_get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_get(self, parser, section, option, value, defaults):$/;"	m	class:Interpolation
before_get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_get(self, parser, section, option, value, vars):$/;"	m	class:LegacyInterpolation
before_read	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_read(self, parser, section, option, value):$/;"	m	class:Interpolation
before_set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_set(self, parser, section, option, value):$/;"	m	class:BasicInterpolation
before_set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_set(self, parser, section, option, value):$/;"	m	class:ExtendedInterpolation
before_set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_set(self, parser, section, option, value):$/;"	m	class:Interpolation
before_set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_set(self, parser, section, option, value):$/;"	m	class:LegacyInterpolation
before_write	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def before_write(self, parser, section, option, value):$/;"	m	class:Interpolation
bib	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bib": null,$/;"	z
bin	plugged/coc.nvim/package.json	/^  "bin": ".\/bin\/server.js",$/;"	s
bin_ops	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    bin_ops = (r'(?:lt|gt|lte|gte|eq|ne)')$/;"	v	class:CrmshLexer
bin_rel	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    bin_rel = words(('and', 'or'), suffix=r'(?![\\w#$-])')$/;"	v	class:CrmshLexer
binary-search	plugged/coc.nvim/package.json	/^    "binary-search": "1.3.5",$/;"	s	object:dependencies
binary_location	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    binary_location = None$/;"	v	class:Subversion
binary_type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    binary_type = bytes$/;"	v
binary_type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    binary_type = str$/;"	v
binary_type	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    binary_type = bytes$/;"	v
binary_type	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    binary_type = str$/;"	v
binary_type	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    binary_type = bytes$/;"	v
binary_type	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    binary_type = str$/;"	v
bind	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def bind(self, *pos, **kw):$/;"	m	class:socksocket
bindReady	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function bindReady(){$/;"	f
bindeval	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def bindeval(text):$/;"	f
bindzone	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bindzone": null,$/;"	z
binn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    binn = r'[01]+b'$/;"	v	class:NasmLexer
binn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    binn = r'[01]+b'$/;"	v	class:TasmLexer
binop	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    binop = (r'(?:%=|&=|\\|=|\\^=|\\+=|\\-=|\\*=|\/=|<<=|>\\s*>\\s*=|>\\s*>\\s*>\\s*=|==|'$/;"	v	class:HaxeLexer
bird_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    bird_re = re.compile(r'(>[ \\t]*)(.*\\n)')$/;"	v	class:LiterateLexer
blank	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "blank": null,$/;"	z
blob_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    def blob_callback(lexer, match, ctx):$/;"	m	class:UrbiscriptLexer
blocks	plugged/php.vim/attic/20-generate.php	/^$blocks = array($/;"	v
blocks	plugged/php.vim/attic/30-update.php	/^$blocks = unserialize(file_get_contents('php:\/\/stdin'), ['allowed_classes' => false]);$/;"	v
bmax_func	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_func = bmax_var + r'?((?:[ \\t]|\\.\\.\\n)*)([(])'$/;"	v	class:BlitzMaxLexer
bmax_lktypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_lktypes = r'\\b(Int|Byte|Short|Float|Double|Long)\\b'$/;"	v	class:BlitzMaxLexer
bmax_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_name = r'[a-z_]\\w*'$/;"	v	class:BlitzMaxLexer
bmax_sktypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_sktypes = r'@{1,2}|[!#$%]'$/;"	v	class:BlitzMaxLexer
bmax_var	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_var = (r'(%s)(?:(?:([ \\t]*)(%s)|([ \\t]*:[ \\t]*\\b(?:Shl|Shr|Sar|Mod)\\b)'$/;"	v	class:BlitzMaxLexer
bmax_vopwords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    bmax_vopwords = r'\\b(Shl|Shr|Sar|Mod)\\b'$/;"	v	class:BlitzMaxLexer
body	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^    "body": [$/;"	a	object:For Loop
body	plugged/emmet-vim/docs/static/css/style-sites.css	/^body {$/;"	s
body	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var doc = document.documentElement, body = document.body;$/;"	v
boolean_or_list	plugged/vim-wakatime/packages/wakatime/arguments.py	/^def boolean_or_list(config_name, args, configs, alternative_names=[]):$/;"	f
border	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	function border(elem) {$/;"	f
boundary	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    boundary = '(?![\\w\/])'$/;"	v	class:KokaLexer
box	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var box = elem.getBoundingClientRect();$/;"	v
brackets_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def brackets_callback(token_class):$/;"	m	class:Perl6Lexer
branch	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    branch = None$/;"	v	class:Heartbeat
branch	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^    def branch(self):$/;"	m	class:BaseProject
branch	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def branch(self):$/;"	m	class:Git
branch	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^    def branch(self):$/;"	m	class:Mercurial
branch	plugged/vim-wakatime/packages/wakatime/projects/projectfile.py	/^    def branch(self):$/;"	m	class:ProjectFile
branch	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^    def branch(self):$/;"	m	class:ProjectMap
branch	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def branch(self):$/;"	m	class:Subversion
brightscript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "brightscript": "BrightScript",$/;"	s
browser	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.browser = {$/;"	c	class:jQuery
bst	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bst": null,$/;"	z
btm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "btm": null,$/;"	z
buf	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    buffer = u('')$/;"	v	class:CSharpParser
buffer	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    buffer = u('')$/;"	v	class:JavaParser
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ('', '')$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ('H', 'blah')$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buffergator#BuffergatorCycleMru	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#BuffergatorCycleMru(dir, bufopencmd)$/;"	f
buffergator#BuffergatorEchoMruList	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#BuffergatorEchoMruList(bang)$/;"	f
buffergator#CloseBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#CloseBuffergator()$/;"	f
buffergator#CloseBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#CloseBuffergatorTabs()$/;"	f
buffergator#OpenBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#OpenBuffergator()$/;"	f
buffergator#OpenBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#OpenBuffergatorTabs()$/;"	f
buffergator#ReopenBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ReopenBuffergator()$/;"	f
buffergator#ToggleBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ToggleBuffergator()$/;"	f
buffergator#ToggleBuffergatorTabs	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#ToggleBuffergatorTabs()$/;"	f
buffergator#UpdateBuffergator	plugged/vim-buffergator/autoload/buffergator.vim	/^function! buffergator#UpdateBuffergator(event, affected)$/;"	f
bugs	plugged/coc.nvim/package.json	/^  "bugs": {$/;"	o
build	plugged/coc.nvim/package.json	/^    "build": "tsc -p tsconfig.json",$/;"	s	object:scripts
build_digest_header	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def build_digest_header(self, method, url):$/;"	m	class:HTTPDigestAuth
build_response	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def build_response(self, req, resp):$/;"	m	class:HTTPAdapter
build_tzinfo	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^def build_tzinfo(zone, fp):$/;"	f
builtin	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    builtin = words(('if:', 'then:', 'else:', 'when:', 'whenever:', 'discovered:',$/;"	v	class:AmbientTalkLexer
builtin	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    builtin = [$/;"	v	class:KokaLexer
builtinOps	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    builtinOps = ($/;"	v	class:ElmLexer
builtin_arrays	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_arrays = words(($/;"	v	class:FactorLexer
builtin_assocs	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_assocs = words(($/;"	v	class:FactorLexer
builtin_cmds_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    builtin_cmds_re = words(($/;"	v	class:TclLexer
builtin_combinators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_combinators = words(($/;"	v	class:FactorLexer
builtin_consts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    builtin_consts = ($/;"	v	class:OctaveLexer
builtin_continuations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_continuations = words(($/;"	v	class:FactorLexer
builtin_function	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    builtin_function = set(($/;"	v	class:EmacsLispLexer
builtin_function_highlighted	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    builtin_function_highlighted = set(($/;"	v	class:EmacsLispLexer
builtin_io	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_io = words(($/;"	v	class:FactorLexer
builtin_kernel	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_kernel = words(($/;"	v	class:FactorLexer
builtin_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    builtin_kw = ($/;"	v	class:OctaveLexer
builtin_math	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_math = words(($/;"	v	class:FactorLexer
builtin_namespaces	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_namespaces = words(($/;"	v	class:FactorLexer
builtin_sequences	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_sequences = words(($/;"	v	class:FactorLexer
builtin_str	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    builtin_str = str$/;"	v
builtin_strings	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_strings = words(($/;"	v	class:FactorLexer
builtin_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    builtin_types = (words(($/;"	v	class:RustLexer
builtin_vectors	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    builtin_vectors = words(($/;"	v	class:FactorLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    builtins = ($/;"	v	class:FlatlineLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    builtins = set(($/;"	v	class:DylanLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    builtins = (  # See erlang(3) man page$/;"	v	class:ErlangLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    builtins = ($/;"	v	class:ClojureLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:NewLispLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    builtins = ($/;"	v	class:SchemeLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    builtins = hy_builtins + hy_core$/;"	v	class:HyLexer
builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    builtins = ['import', 'abort', 'baseNameOf', 'dirOf', 'isNull', 'builtins',$/;"	v	class:NixLexer
builtins_base	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stata_builtins.py	/^builtins_base = ($/;"	v
builtins_base	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    builtins_base = ($/;"	v	class:SLexer
builtins_conditionals	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    builtins_conditionals = ($/;"	v	class:SASLexer
builtins_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    builtins_db = {$/;"	v	class:Modula2Lexer
builtins_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_stata_builtins.py	/^builtins_functions = ($/;"	v
builtins_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    builtins_functions = ($/;"	v	class:SASLexer
builtins_macros	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    builtins_macros = ($/;"	v	class:SASLexer
builtins_sql	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    builtins_sql = ($/;"	v	class:SASLexer
builtins_statements	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    builtins_statements = ($/;"	v	class:SASLexer
bundle	plugged/javascript-libraries-syntax.vim/Makefile	/^bundle: bundle-deps$/;"	t
bundle	plugged/ultisnips/utils/get_tm_snippets.py	/^    bundle = sys.argv[1]$/;"	v
bundle-deps	plugged/javascript-libraries-syntax.vim/Makefile	/^bundle-deps:$/;"	t
bundle-deps	plugged/javascript-libraries-syntax.vim/config.mk	/^bundle-deps:$/;"	t
bygroups	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^def bygroups(*args):$/;"	f
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
byte2int	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    byte2int = operator.itemgetter(0)$/;"	v
byte2int	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def byte2int(bs):$/;"	f
byte2int	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    byte2int = operator.itemgetter(0)$/;"	v
byte2int	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def byte2int(bs):$/;"	f
bytes	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    bytes = bytes$/;"	v
bytes	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    bytes = str$/;"	v
bz2	plugged/php.vim/attic/syntax.ini	/^bz2 = yes$/;"	k	section:extensions
bzr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "bzr": null,$/;"	z
c	plugged/coc.nvim/src/__tests__/modules/settings.json	/^    "c": {$/;"	o	object:servers
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "c": "C",$/;"	s
c	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "c": "C",$/;"	s
c	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^            c = u'\\\\' + c$/;"	v
c	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^        c = chr(code)$/;"	v
c#	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "c#": "C#",$/;"	s
c++	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "c++": "C++",$/;"	s
c2l	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def c2l(c):$/;"	f
c99_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    c99_types = set(($/;"	v	class:CFamilyLexer
cA	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cA    :<C-U>Gcommit --edit --squash=<C-R>=<SID>SquashArgument()<C/;"	m
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
c_encode_basestring_ascii	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^c_encode_basestring_ascii, c_make_encoder = _import_speedups()$/;"	v
c_make_encoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^c_encode_basestring_ascii, c_make_encoder = _import_speedups()$/;"	v
c_make_scanner	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^c_make_scanner = _import_c_make_scanner()$/;"	v
c_scanstring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^c_scanstring = _import_c_scanstring()$/;"	v
c_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mql_builtins.py	/^c_types = ($/;"	v
ca	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ca    :<C-U>Gcommit --amend<CR>$/;"	m
ca_cert_dir	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    ca_cert_dir = None$/;"	v	class:VerifiedHTTPSConnection
ca_certs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    ca_certs = None$/;"	v	class:VerifiedHTTPSConnection
cabal	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cabal": null,$/;"	z
calc_signature	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^def calc_signature(message, negotiate_flags, signing_key, seq_num, handle):$/;"	f
calendar	plugged/php.vim/attic/syntax.ini	/^calendar = no$/;"	k	section:extensions
calendar	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "calendar": null,$/;"	z
call_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    def call_indent(level):$/;"	m	class:KconfigLexer
callable	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    callable = callable$/;"	v
callable	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def callable(obj):$/;"	f
callable	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    callable = callable$/;"	v
callable	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def callable(obj):$/;"	f
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^        def callback(lexer, match, ctx=None):$/;"	f	function:using	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def callback(lexer, match, ctx=None):$/;"	f	function:bygroups	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    def callback(lexer, match, ctx):$/;"	f	function:_starts_block	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.parse_block_scalar_empty_line	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.parse_block_scalar_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.parse_plain_scalar_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.reset_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.save_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.set_block_scalar_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.set_indent	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^        def callback(lexer, match, context):$/;"	f	member:YamlLexer.something	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^        def callback(lexer, match, ctx):$/;"	f	member:SnowballLexer._string	file:
callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^        def callback(lexer, match, context):$/;"	f	member:Perl6Lexer.brackets_callback	file:
cat	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^        cat = unicodedata.category(c)$/;"	v
cat_dic	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^        cat_dic = categories_bmp if code < 0x10000 else categories_nonbmp$/;"	v
catalog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "catalog": null,$/;"	z
catalog_viewer.acquire_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.acquire_viewport(split_cmd)$/;"	f
catalog_viewer.activate_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.activate_viewport() dict$/;"	f
catalog_viewer.append_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.append_line(text, jump_to_bufnum) dict$/;"	f
catalog_viewer.append_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.append_line(text, jump_to_tabnum, jump_to_winnum) dict$/;"	f
catalog_viewer.claim_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.claim_buffer() dict$/;"	f
catalog_viewer.clear_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.clear_buffer() dict$/;"	f
catalog_viewer.close	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.close(restore_prev_window) dict$/;"	f
catalog_viewer.contract_screen	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.contract_screen() dict$/;"	f
catalog_viewer.create_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.create_buffer() dict$/;"	f
catalog_viewer.cycle_autodismiss_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_autodismiss_modes() dict$/;"	f
catalog_viewer.cycle_directory_path_display	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_directory_path_display() dict$/;"	f
catalog_viewer.cycle_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_display_regime() dict$/;"	f
catalog_viewer.cycle_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_sort_regime() dict$/;"	f
catalog_viewer.cycle_viewport_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.cycle_viewport_modes() dict$/;"	f
catalog_viewer.delete_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.delete_target(wipe, force) dict range$/;"	f
catalog_viewer.disable_editing_keymaps	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.disable_editing_keymaps() dict$/;"	f
catalog_viewer.expand_screen	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.expand_screen() dict$/;"	f
catalog_viewer.first_usable_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.first_usable_viewport() dict$/;"	f
catalog_viewer.get_target_bufnum	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.get_target_bufnum(cmd_count) dict$/;"	f
catalog_viewer.goto_index_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_index_entry(direction) dict$/;"	f
catalog_viewer.goto_index_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_index_entry(direction, visit_target, refocus_catalog) dict ran/;"	f
catalog_viewer.goto_pattern	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_pattern(pattern, direction) dict range$/;"	f
catalog_viewer.goto_win_entry	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.goto_win_entry(direction) dict$/;"	f
catalog_viewer.highlight_current_line	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.highlight_current_line()$/;"	f
catalog_viewer.initialize_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.initialize_buffer() dict$/;"	f
catalog_viewer.is_usable_viewport	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.is_usable_viewport(winnumber) dict$/;"	f
catalog_viewer.line_symbols	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.line_symbols(bufinfo) dict$/;"	f
catalog_viewer.list_buffers	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.list_buffers() dict$/;"	f
catalog_viewer.num_viewports_on_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.num_viewports_on_buffer(bnum) dict$/;"	f
catalog_viewer.open	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.open(...) dict$/;"	f
catalog_viewer.rebuild_catalog	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.rebuild_catalog() dict$/;"	f
catalog_viewer.render_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.render_buffer() dict$/;"	f
catalog_viewer.setup_buffer_commands	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_commands() dict$/;"	f
catalog_viewer.setup_buffer_folding	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_folding() dict$/;"	f
catalog_viewer.setup_buffer_keymaps	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_keymaps() dict$/;"	f
catalog_viewer.setup_buffer_opts	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_opts() dict$/;"	f
catalog_viewer.setup_buffer_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_statusline() dict$/;"	f
catalog_viewer.setup_buffer_syntax	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.setup_buffer_syntax() dict$/;"	f
catalog_viewer.toggle	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.toggle() dict$/;"	f
catalog_viewer.toggle_zoom	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.toggle_zoom() dict$/;"	f
catalog_viewer.unclaim_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.unclaim_buffer() dict$/;"	f
catalog_viewer.update_buffers_info	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.update_buffers_info() dict$/;"	f
catalog_viewer.visit_buffer	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_buffer(bufnum, split_cmd) dict$/;"	f
catalog_viewer.visit_open_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_open_target(unconditional, keep_catalog, split_cmd) dict rang/;"	f
catalog_viewer.visit_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_target() dict$/;"	f
catalog_viewer.visit_target	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! catalog_viewer.visit_target(keep_catalog, refocus_catalog, split_cmd) dict range$/;"	f
categories_bmp	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^    categories_bmp = {'xid_start': [], 'xid_continue': []}$/;"	v
categories_nonbmp	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^    categories_nonbmp = {'xid_start': [], 'xid_continue': []}$/;"	v
category	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    category = None$/;"	v	class:Heartbeat
cats	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^        cats = sorted(categories_bmp)$/;"	v
cats	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^cats = ['Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc', 'Me', 'Mn', 'Nd', 'Nl'/;"	v
cc	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cc          <NOP>$/;"	m
cc	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cc    :<C-U>Gcommit<CR>$/;"	m
cd	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cd          :call b:buffergator_catalog_viewer.cycle_displ/;"	m
cd	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> cd          :call b:buffergator_catalog_viewer.cycle_display_r/;"	m
cdl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cdl": null,$/;"	z
cdrdaoconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cdrdaoconf": null,$/;"	z
cdrtoc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cdrtoc": null,$/;"	z
ce	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ce    :<C-U>Gcommit --amend --no-edit<CR>$/;"	m
cert_reqs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    cert_reqs = None$/;"	v	class:VerifiedHTTPSConnection
cert_verify	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def cert_verify(self, conn, url, verify, cert):$/;"	m	class:HTTPAdapter
cf	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cf    :<C-U>Gcommit --fixup=<C-R>=<SID>SquashArgument()<CR>$/;"	m
cf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cf": null,$/;"	z
cfg	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cfg": null,$/;"	z
ch	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ch": null,$/;"	z
chaiscript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "chaiscript": null,$/;"	z
change	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "change": null,$/;"	z
changelog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "changelog": null,$/;"	z
char	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    char = r'[\\w$.@-]'$/;"	v	class:GasLexer
charref	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    charref = r'(?:&#[0-9]+;|&#x[0-9a-fA-F]+;)'$/;"	v	class:XQueryLexer
chars	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^}var chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?$/;"	v
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5prober.py	/^    def charset_name(self):$/;"	m	class:Big5Prober
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def charset_name(self):$/;"	m	class:CharSetGroupProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def charset_name(self):$/;"	m	class:CharSetProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/cp949prober.py	/^    def charset_name(self):$/;"	m	class:CP949Prober
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def charset_name(self):$/;"	m	class:EscCharSetProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def charset_name(self):$/;"	m	class:EUCJPProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrprober.py	/^    def charset_name(self):$/;"	m	class:EUCKRProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwprober.py	/^    def charset_name(self):$/;"	m	class:EUCTWProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312prober.py	/^    def charset_name(self):$/;"	m	class:GB2312Prober
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def charset_name(self):$/;"	m	class:HebrewProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def charset_name(self):$/;"	m	class:SJISContextAnalysis
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def charset_name(self):$/;"	m	class:Latin1Prober
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def charset_name(self):$/;"	m	class:MultiByteCharSetProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def charset_name(self):$/;"	m	class:SingleByteCharSetProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def charset_name(self):$/;"	m	class:SJISProber
charset_name	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def charset_name(self):$/;"	m	class:UTF8Prober
chaskell	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "chaskell": null,$/;"	z
check	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def check(self, pattern):$/;"	m	class:Scanner
check-require	plugged/javascript-libraries-syntax.vim/Makefile	/^check-require:$/;"	t
check_bidi	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def check_bidi(label, check_ltr=False):$/;"	f
check_class_not_import	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def check_class_not_import(lexer, match, ctx):$/;"	m	class:CleanLexer
check_compatibility	plugged/vim-wakatime/packages/wakatime/packages/requests/__init__.py	/^def check_compatibility(urllib3_version, chardet_version):$/;"	f
check_errors	plugged/ale/test/script/custom-linting-rules	/^check_errors() {$/;"	f
check_header_validity	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def check_header_validity(header):$/;"	f
check_hostname	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def check_hostname(self):$/;"	m	class:SecureTransportContext
check_hostname	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def check_hostname(self, value):$/;"	m	class:SecureTransportContext
check_hyphen_ok	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def check_hyphen_ok(label):$/;"	f
check_indent1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def check_indent1(lexer, match, ctx):$/;"	m	class:CleanLexer
check_indent2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def check_indent2(lexer, match, ctx):$/;"	m	class:CleanLexer
check_indent3	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def check_indent3(lexer, match, ctx):$/;"	m	class:CleanLexer
check_initial_combiner	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def check_initial_combiner(label):$/;"	f
check_instance_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def check_instance_class(lexer, match, ctx):$/;"	m	class:CleanLexer
check_label	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def check_label(label):$/;"	f
check_lines	plugged/ale/test/script/block-padding-checker	/^def check_lines(line_iter):$/;"	f
check_nfc	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def check_nfc(label):$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
checktype	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function checktype (caller, narg, arg, tname)$/;"	f
cheetah	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cheetah": null,$/;"	z
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chill	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "chill": null,$/;"	z
choose_boundary	plugged/vim-wakatime/packages/wakatime/packages/urllib3/filepost.py	/^def choose_boundary():$/;"	f
chordpro	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "chordpro": null,$/;"	z
cl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cl": null,$/;"	z
class	plugged/coc.nvim/data/schema.json	/^        "class": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
class2style	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^class2style = {}$/;"	v
class_types	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    class_types = (type, types.ClassType)$/;"	v
class_types	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    class_types = type,$/;"	v
class_types	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    class_types = (type, types.ClassType)$/;"	v
class_types	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    class_types = type,$/;"	v
clean	plugged/coc.nvim/package.json	/^    "clean": "rimraf lib build",$/;"	s	object:scripts
clean	plugged/javascript-libraries-syntax.vim/Makefile	/^clean: clean-bundle-deps$/;"	t
clean	plugged/vim-vue/Makefile	/^clean:$/;"	t
clean	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "clean": null,$/;"	z
clean-bundle-deps	plugged/javascript-libraries-syntax.vim/Makefile	/^clean-bundle-deps:$/;"	t
clear	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def clear(self):$/;"	m	class:_ChainMap
clear	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def clear(self):$/;"	m	class:RecentlyUsedContainer
clear	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def clear(self):$/;"	m	class:PoolManager
clearMocks	plugged/coc.nvim/package.json	/^    "clearMocks": true,$/;"	b	object:jest
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clipboard=unnamed register type fixing	plugged/nvim-miniyank/README.md	/^# clipboard=unnamed register type fixing$/;"	c
clipper	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "clipper": null,$/;"	z
clojure	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "clojure": "Clojure",$/;"	s
clone	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = ret.find("*").andSelf().each(function(){$/;"	v
clone	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def clone(self):$/;"	m	class:Timeout
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
close	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    def close(self):$/;"	m	class:UniversalDetector
close	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^        def close(self):$/;"	m	class:UnclosingTextIOWrapper
close	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def close(self):$/;"	m	class:BaseAdapter
close	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def close(self):$/;"	m	class:HTTPAdapter
close	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def close(self):$/;"	m	class:Response
close	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def close(self):$/;"	m	class:Session
close	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def close(self):$/;"	m	class:socksocket
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def close(self):$/;"	m	class:ConnectionPool
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def close(self):$/;"	m	class:HTTPConnectionPool
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def close(self):$/;"	m	class:WrappedSocket
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def close(self):$/;"	m	class:WrappedSocket
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def close(self):$/;"	m	class:HTTPResponse
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def close(self):$/;"	m	class:EpollSelector
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def close(self):$/;"	m	class:KqueueSelector
close	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def close(self):$/;"	m	class:BaseSelector
close_brace_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    def close_brace_callback(self, match, ctx):$/;"	m	class:BibTeXLexer
closed	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def closed(self):$/;"	m	class:HTTPResponse
closers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    closers = u'\\'")]}>\\u2019\\u201d\\xbb!?'$/;"	v	class:RstLexer
closing_brace_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def closing_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
cmake	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cmake": null,$/;"	z
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['ack', '--nogroup', '--column', '--nocolor',$/;"	v
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['ag', '--nogroup', '--column', '--nocolor', '--silent',$/;"	v
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['rg', '--no-heading', '--column', '--no-messages',$/;"	v
cmusrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cmusrc": null,$/;"	z
co	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> co    :<C-U>echoerr 'Use CTRL-W C'<CR>$/;"	m
cobol	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cobol": null,$/;"	z
coc#_cancel	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items)$/;"	f
coc#_hide	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_init	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_init()$/;"	f
coc#_insert_key	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_reload	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_reload()$/;"	f
coc#_select	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm()$/;"	f
coc#_selected	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_extension	plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#client#create	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#is_running	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#request	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#config	plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#expandable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#jumpable	plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#get_chars	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_chars()$/;"	f
coc#list#get_colors	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_colors()$/;"	f
coc#list#has_preview	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#options	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#prompt_start	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#prompt_start()$/;"	f
coc#list#restore	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore()$/;"	f
coc#list#setlines	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(lines, append)$/;"	f
coc#list#setup	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#start_prompt	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#start_prompt()$/;"	f
coc#list#status	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#list#stop_prompt	plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#stop_prompt()$/;"	f
coc#on_enter	plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#refresh	plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#init_vim_rpc	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#init_vim_rpc() abort$/;"	f
coc#rpc#install_node_rpc	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#install_node_rpc(...) abort$/;"	f
coc#rpc#kill	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#stop	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#rpc#vim_rpc_folder	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#vim_rpc_folder() abort$/;"	f
coc#snippet#_select_mappings	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	plugged/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#util#binary	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#binary()$/;"	f
coc#util#build	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#build()$/;"	f
coc#util#clear_signs	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_signs()$/;"	f
coc#util#clearmatches	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clearmatches(ids)$/;"	f
coc#util#close_popup	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_popup()$/;"	f
coc#util#close_win	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_win(id)$/;"	f
coc#util#cursor	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diff_content	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diff_content(lines) abort$/;"	f
coc#util#do_complete	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_line	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_line()$/;"	f
coc#util#echo_lines	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#execute	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#execute(cmd)$/;"	f
coc#util#extension_root	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#float_hide	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_hide()$/;"	f
coc#util#float_jump	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_jump()$/;"	f
coc#util#float_scroll	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scroll(forward)$/;"	f
coc#util#float_scrollable	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scrollable()$/;"	f
coc#util#get_bufoptions	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr) abort$/;"	f
coc#util#get_changeinfo	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config_home	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_content	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_content(bufnr)$/;"	f
coc#util#get_float	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_float()$/;"	f
coc#util#get_input	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#get_syntax_name	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_syntax_name(lnum, col)$/;"	f
coc#util#has_float	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_float()$/;"	f
coc#util#has_preview	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#init_extension_root	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#init_extension_root(root) abort$/;"	f
coc#util#install	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install(...) abort$/;"	f
coc#util#install_extension	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#is_preview	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#is_preview(bufnr)$/;"	f
coc#util#iterm_open	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#move_cursor	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#move_cursor(delta)$/;"	f
coc#util#on_error	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#on_error(msg) abort$/;"	f
coc#util#open_file	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_terminal	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#pick_color	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#platform	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#platform()$/;"	f
coc#util#preview_info	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, ...) abort$/;"	f
coc#util#prompt_confirm	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#prompt_confirm(title)$/;"	f
coc#util#rebuild	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#remote_fns	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns()$/;"	f
coc#util#run_terminal	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#setline	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unplace_signs	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unplace_signs(bufnr, sign_ids)$/;"	f
coc#util#update	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update()$/;"	f
coc#util#update_extensions	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions() abort$/;"	f
coc#util#valid_state	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#valid_state()$/;"	f
coc#util#version	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#win_position	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#win_position()$/;"	f
coc#util#yarn_cmd	plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#yarn_cmd()$/;"	f
coc.preferences.bracketEnterImprove	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.bracketEnterImprove": {$/;"	o	object:properties
coc.preferences.colorSupport	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.colorSupport": {$/;"	o	object:properties
coc.preferences.currentFunctionSymbolAutoUpdate	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.currentFunctionSymbolAutoUpdate": {$/;"	o	object:properties
coc.preferences.enableFloatHighlight	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableFloatHighlight": {$/;"	o	object:properties
coc.preferences.extensionUpdateCheck	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.extensionUpdateCheck": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["javascript", "vue", "json"],$/;"	a
coc.preferences.formatOnSaveFiletypes	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnSaveFiletypes": {$/;"	o	object:properties
coc.preferences.formatOnType	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnType": {$/;"	o	object:properties
coc.preferences.hoverTarget	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.hoverTarget": {$/;"	o	object:properties
coc.preferences.jumpCommand	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.jumpCommand": {$/;"	o	object:properties
coc.preferences.messageLevel	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.messageLevel": {$/;"	o	object:properties
coc.preferences.previewAutoClose	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.previewAutoClose": {$/;"	o	object:properties
coc.preferences.rootPath	plugged/coc.nvim/src/__tests__/sample/.vim/coc-settings.json	/^  "coc.preferences.rootPath": ".\/src"$/;"	s
coc.preferences.rootPatterns	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.rootPatterns": {$/;"	o	object:properties
coc.preferences.snippetStatusText	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippetStatusText": {$/;"	o	object:properties
coc.preferences.snippets.enable	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippets.enable": {$/;"	o	object:properties
coc.preferences.useQuickfixForLocations	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.useQuickfixForLocations": {$/;"	o	object:properties
coc.preferences.watchmanPath	plugged/coc.nvim/data/schema.json	/^    "coc.preferences.watchmanPath": {$/;"	o	object:properties
coc.source.around.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.disableSyntaxes": {$/;"	o	object:properties
coc.source.around.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.enable": {$/;"	o	object:properties
coc.source.around.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.priority": {$/;"	o	object:properties
coc.source.around.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.around.shortcut": {$/;"	o	object:properties
coc.source.buffer.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.disableSyntaxes": {$/;"	o	object:properties
coc.source.buffer.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.enable": {$/;"	o	object:properties
coc.source.buffer.ignoreGitignore	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.ignoreGitignore": {$/;"	o	object:properties
coc.source.buffer.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.priority": {$/;"	o	object:properties
coc.source.buffer.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.shortcut": {$/;"	o	object:properties
coc.source.file.disableSyntaxes	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.disableSyntaxes": {$/;"	o	object:properties
coc.source.file.enable	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.enable": {$/;"	o	object:properties
coc.source.file.ignoreHidden	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignoreHidden": {$/;"	o	object:properties
coc.source.file.ignorePatterns	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignorePatterns": {$/;"	o	object:properties
coc.source.file.priority	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.priority": {$/;"	o	object:properties
coc.source.file.shortcut	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.shortcut": {$/;"	o	object:properties
coc.source.file.triggerCharacters	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.triggerCharacters": {$/;"	o	object:properties
coc.source.file.trimSameExts	plugged/coc.nvim/data/schema.json	/^    "coc.source.file.trimSameExts": {$/;"	o	object:properties
coc_nvim	plugged/coc.nvim/plugin/coc.vim	/^  augroup coc_nvim$/;"	a
coco	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "coco": null,$/;"	z
cocoa	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "cocoa": "Cocoa",$/;"	s
code	plugged/ale/run-tests.bat	/^set code=%ERRORLEVEL%$/;"	v
codeLens.enable	plugged/coc.nvim/data/schema.json	/^    "codeLens.enable": {$/;"	o	object:properties
codeLens.separator	plugged/coc.nvim/data/schema.json	/^    "codeLens.separator": {$/;"	o	object:properties
codepoint_classes	plugged/vim-wakatime/packages/wakatime/packages/idna/idnadata.py	/^codepoint_classes = {$/;"	v
codes	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^codes = {}$/;"	v
codes	plugged/vim-wakatime/packages/wakatime/packages/requests/status_codes.py	/^codes = LookupDict(name='status_codes')$/;"	v
coffeescript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "coffeescript": "CoffeeScript",$/;"	s
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
coldfusion	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "coldfusion": "ColdFusion",$/;"	s
collected	plugged/php.vim/attic/10-collect.php	/^        $collected = array($/;"	v
collection	plugged/vim-blade/test.blade.php	/^    $collection = collect([$/;"	v
color	plugged/coc.nvim/data/schema.json	/^        "color": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
color	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function color( elem ) {$/;"	f	function:AnonymousFunctionc5b93c5c2900
color-vader-output	plugged/ale/test/script/run-vader-tests	/^function color-vader-output() {$/;"	f
color_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def color_string(self):$/;"	m	class:EscapeSequence
colorformat	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^        def colorformat(text):$/;"	f	member:StyleMeta.__new__	file:
colorize	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^def colorize(color_key, text):$/;"	f
colors	plugged/coc.nvim/package.json	/^    "colors": "^1.3.3",$/;"	s	object:devDependencies
colors	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mql_builtins.py	/^colors = ($/;"	v
com_dotnet	plugged/php.vim/attic/syntax.ini	/^com_dotnet = no$/;"	k	section:extensions
combine	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^def combine(*args):$/;"	f
combined	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class combined(tuple):  # pylint: disable=invalid-name$/;"	c
command	plugged/coc.nvim/data/schema.json	/^        "command": {$/;"	o	object:definitions.languageServerCommand.properties
command	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def command(cmd):$/;"	f
command	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^command = _getcommand()$/;"	v
command_exists	plugged/coc.nvim/install.sh	/^command_exists() {$/;"	f
command_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    command_kw = ("close", "load", "who", "whos")$/;"	v	class:OctaveLexer
commands_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^commands_kw = ($/;"	v
commenthelp	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    commenthelp = ($/;"	v	class:PowerShellLexer
common lisp	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "common lisp": "Common Lisp",$/;"	s
common_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    common_builtins = ($/;"	v	class:Modula2Lexer
common_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    common_functions = ($/;"	v	class:XtlangLexer
common_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    common_keywords = ($/;"	v	class:XtlangLexer
common_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    common_pseudo_builtins = ($/;"	v	class:Modula2Lexer
common_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    common_reserved_words = ($/;"	v	class:Modula2Lexer
common_sass_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^common_sass_tokens = {$/;"	v
common_timezones	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^common_timezones = LazyList($/;"	v
common_timezones	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^common_timezones = \\$/;"	v
common_timezones_set	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^common_timezones_set = LazySet(common_timezones)$/;"	v
comphash	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^import ntlm_auth.compute_hash as comphash$/;"	I
compilerOptions	plugged/coc.nvim/tsconfig.json	/^  "compilerOptions": {$/;"	o
compkeys	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^import ntlm_auth.compute_keys as compkeys$/;"	I
compkeys	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^import ntlm_auth.compute_keys as compkeys$/;"	I
complete	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function complete(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
complete	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		opt.complete = function(){$/;"	f	function:opt
complete	plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
complete_one_date_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    complete_one_date_regex = r'(x )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
complete_two_date_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    complete_two_date_regex = (complete_one_date_regex + r'( )(' +$/;"	v	class:TodotxtLexer
complex_name_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    complex_name_re = r'(?:%s|%s|%s)' % (name_re, modname_re, ops_re)$/;"	v	class:ElixirLexer
complexjson	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^from .compat import json as complexjson$/;"	x
conaryrecipe	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "conaryrecipe": null,$/;"	z
conf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "conf": null,$/;"	z
config	plugged/javascript-libraries-syntax.vim/Makefile	/^config:$/;"	t
config	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "config": null,$/;"	z
configs	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    configs = None$/;"	v	class:Heartbeat
configs	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    configs = None$/;"	v	class:Queue
configuration	plugged/php.vim/attic/10-collect.php	/^$configuration = parse_ini_file(__DIR__ . '\/syntax.ini', \/* $process_sections = *\/ true);$/;"	v
connect	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def connect(self):$/;"	m	class:Queue
connect	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def connect(self, dest_pair):$/;"	m	class:socksocket
connect	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:HTTPConnection
connect	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:HTTPSConnection
connect	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def connect(self):$/;"	m	class:VerifiedHTTPSConnection
connect	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    def connect(self):$/;"	m	class:SessionCache
connect_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def connect_timeout(self):$/;"	m	class:Timeout
connection	plugged/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^let connection = languageserver.createConnection()$/;"	v
connection	plugged/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^let connection = vscode_languageserver_1.createConnection();$/;"	v
connection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def connection(self):$/;"	m	class:HTTPResponse
connection_from_context	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def connection_from_context(self, request_context):$/;"	m	class:PoolManager
connection_from_host	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def connection_from_host(self, host, port=None, scheme='http', pool_kwargs=None):$/;"	m	class:PoolManager
connection_from_host	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def connection_from_host(self, host, port=None, scheme='http', pool_kwargs=None):$/;"	m	class:ProxyManager
connection_from_pool_key	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def connection_from_pool_key(self, pool_key, request_context=None):$/;"	m	class:PoolManager
connection_from_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^def connection_from_url(url, **kw):$/;"	f
connection_from_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def connection_from_url(self, url, pool_kwargs=None):$/;"	m	class:PoolManager
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
constant	plugged/coc.nvim/data/schema.json	/^        "constant": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mql_builtins.py	/^constants = ($/;"	v
constituent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    constituent = nonmacro + '|[#.:]'$/;"	v	class:CommonLispLexer
constituent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    constituent = nonmacro + '|[#.:]'$/;"	v	class:EmacsLispLexer
constructor	plugged/coc.nvim/data/schema.json	/^        "constructor": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
consume_optional	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def consume_optional(start_index):$/;"	f	member:ArgumentParser._parse_known_args	file:
consume_positionals	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def consume_positionals(start_index):$/;"	f	member:ArgumentParser._parse_known_args	file:
content	plugged/emmet-vim/docs/index.html	/^	<section id="content">$/;"	I
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^        content = content.replace("\\r\\n", "\\n")$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            content = open(headerFilePath).read()$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^        content = content.replace("\\r\\n", "\\n")$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^        content = f.read()$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^        content = fp.read()$/;"	v
content	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def content(self):$/;"	m	class:Response
content_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    def content_callback(self, match):$/;"	m	class:HttpLexer
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
context	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "context": null,$/;"	z
context_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    context_regex = r'@\\S+'$/;"	v	class:TodotxtLexer
continuous_header_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    def continuous_header_callback(self, match):$/;"	m	class:HttpLexer
contributes	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^  "contributes": {$/;"	o
conv	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f	function:escape	file:
convert_arg_line_to_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def convert_arg_line_to_args(self, arg_line):$/;"	m	class:ArgumentParser
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
converters	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def converters(self):$/;"	m	class:RawConfigParser
cookiejar_from_dict	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def cookiejar_from_dict(cookie_dict, cookiejar=None, overwrite=True):$/;"	f
cookielib	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    from http import cookiejar as cookielib$/;"	x
copy	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var src = target[ name ], copy = options[ name ];$/;"	v
copy	plugged/php.vim/attic/30-update.php	/^        $copy = preg_quote($groups['copy'], \/* $delimiter = *\/ '\/');$/;"	v
copy	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def copy(self):$/;"	m	class:_ChainMap
copy	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copy	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def copy(self):$/;"	m	class:RequestsCookieJar
copy	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def copy(self):$/;"	m	class:PreparedRequest
copy	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def copy(self):$/;"	m	class:CaseInsensitiveDict
copy	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copy	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def copy(self):$/;"	m	class:HTTPHeaderDict
copy	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def copy(self):$/;"	m	class:OrderedDict
core	plugged/php.vim/attic/syntax.ini	/^core = yes$/;"	k	section:extensions
core_foundation_path	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^core_foundation_path = find_library('CoreFoundation')$/;"	v
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
country_names	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^country_names = _CountryNameDict()$/;"	v
country_timezones	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^country_timezones = _CountryTimezoneDict()$/;"	v
coverageDirectory	plugged/coc.nvim/package.json	/^    "coverageDirectory": ".\/coverage\/"$/;"	s	object:jest
cp	plugged/coc.nvim/webpack.config.js	/^const cp = require('child_process')$/;"	C
cp	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cp          :call b:buffergator_catalog_viewer.cycle_direc/;"	m
cp	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cp    :<C-U>echoerr 'Use gC'<CR>$/;"	m
cpp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cpp": "C++",$/;"	s
cq	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cq          :call b:buffergator_catalog_viewer.cycle_autod/;"	m
create_authenticate_message	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^    def create_authenticate_message(self, user_name, password, domain_name=None, workstation=Non/;"	m	class:Ntlm
create_bound_method	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    create_bound_method = types.MethodType$/;"	v
create_bound_method	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def create_bound_method(func, obj):$/;"	f
create_bound_method	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    create_bound_method = types.MethodType$/;"	v
create_bound_method	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def create_bound_method(func, obj):$/;"	f
create_connection	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^def create_connection(dest_pair, proxy_type=None, proxy_addr=None,$/;"	f
create_connection	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^def create_connection(address, timeout=socket._GLOBAL_DEFAULT_TIMEOUT,$/;"	f
create_cookie	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def create_cookie(name, value, **kwargs):$/;"	f
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_negotiate_message	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^    def create_negotiate_message(self, domain_name=None, workstation=None):$/;"	m	class:Ntlm
create_unbound_method	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def create_unbound_method(func, cls):$/;"	f
create_unbound_method	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def create_unbound_method(func, cls):$/;"	f
create_urllib3_context	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def create_urllib3_context(ssl_version=None, cert_reqs=None,$/;"	f
crm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "crm": null,$/;"	z
crontab	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "crontab": "Crontab",$/;"	s
cryptography	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^    cryptography = None$/;"	v
cs	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cs          :call b:buffergator_catalog_viewer.cycle_sort_/;"	m
cs	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cs    :<C-U>Gcommit --squash=<C-R>=<SID>SquashArgument()<CR>$/;"	m
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
cs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cs": "C#",$/;"	s
csc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "csc": null,$/;"	z
csh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "csh": null,$/;"	z
cshtml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "cshtml": "CSHTML",$/;"	s
csp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "csp": null,$/;"	z
css	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    css          = jQuery.curCSS,$/;"	v
css	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "css": "CSS",$/;"	s
css	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "css": null,$/;"	z
ctags	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    ctags = None$/;"	v
cterm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cterm": null,$/;"	z
ctrlh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ctrlh": null,$/;"	z
ctrlp#acceptfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#addfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#addfile(ch, file)$/;"	f
ctrlp#autoignore#get_patterns	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#get_patterns(root_dir) abort$/;"	f
ctrlp#autoignore#ignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore(item, type) abort$/;"	f
ctrlp#autoignore#ignore_close	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_close() abort$/;"	f
ctrlp#autoignore#ignore_init	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_init() abort$/;"	f
ctrlp#bookmarkdir#accept	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(bang, dir, ...)$/;"	f
ctrlp#bookmarkdir#id	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clearmarkedlist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clearmarkedlist()$/;"	f
ctrlp#clr	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(dict)$/;"	f
ctrlp#line#cmd	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#setpathmode	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setpathmode(pmode, ...)$/;"	f
ctrlp#statusline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
ctrlp.vim	plugged/ctrlp.vim/readme.md	/^# ctrlp.vim$/;"	c
ctype	plugged/php.vim/attic/syntax.ini	/^ctype = no$/;"	k	section:extensions
cucumber	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cucumber": null,$/;"	z
cuda	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cuda": null,$/;"	z
cupl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cupl": null,$/;"	z
cuplsim	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cuplsim": null,$/;"	z
cur	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	cur: function(force){$/;"	m	class:jQuery.fx
curl	plugged/php.vim/attic/syntax.ini	/^curl = yes$/;"	k	section:extensions
current_attr	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    current_attr = None$/;"	v	class:HtmlParser
current_attr_value	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    current_attr_value = None$/;"	v	class:HtmlParser
current_compiler	plugged/vim-javascript/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
current_tag	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def current_tag(self):$/;"	m	class:HtmlParser
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
current_time	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^current_time = getattr(time, "monotonic", time.time)$/;"	v
cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor_loader	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function cursor_loader (ld)$/;"	f
cursor_string	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function cursor_string (str)$/;"	f
cursorpos	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    cursorpos = None$/;"	v	class:Heartbeat
custom	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	custom: function(from, to, unit){$/;"	m	class:jQuery.fx
custom_pygments_guess_lexer_for_filename	plugged/vim-wakatime/packages/wakatime/stats.py	/^def custom_pygments_guess_lexer_for_filename(_fn, _text, **options):$/;"	f
customize_lexer_priority	plugged/vim-wakatime/packages/wakatime/stats.py	/^def customize_lexer_priority(file_name, accuracy, lexer):$/;"	f
cva	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cva   :<C-U>Gcommit -v --amend<CR>$/;"	m
cvc	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cvc   :<C-U>Gcommit -v<CR>$/;"	m
cvs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cvs": null,$/;"	z
cvsrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cvsrc": null,$/;"	z
cw	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> cw          :call b:buffergator_catalog_viewer.cycle_viewp/;"	m
cw	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cw    :<C-U>Gcommit --amend --only<CR>$/;"	m
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {$/;"	o	object:definitions.languageServerBase.properties
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerCommand.properties
cwd	plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerModule.properties
cweb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cweb": null,$/;"	z
cynlib	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cynlib": null,$/;"	z
cynpp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "cynpp": null,$/;"	z
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.d = function(exports, name, getter) {$/;"	f	function:__webpack_require__
d	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> d           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
d	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> d           :call b:buffergator_catalog_viewer.delete_targ/;"	m
d	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "d": null,$/;"	z
dark_colors	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^dark_colors = ["black", "darkred", "darkgreen", "brown", "darkblue",$/;"	v
dart	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "dart": "Dart",$/;"	s
data	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    data = None$/;"	v	class:LazyDict
data	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def data(self):$/;"	m	class:HTTPResponse
datascript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "datascript": null,$/;"	z
datatype	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    datatype = (r'db|dd|dw|T[A-Z][a-z]+')$/;"	v	class:TasmLexer
datatypeMod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    datatypeMod = (r'_('$/;"	v	class:HsailLexer
date	plugged/php.vim/attic/syntax.ini	/^date = yes$/;"	k	section:extensions
date_exp	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    date_exp = words(('in_range', 'date', 'spec', 'in'), suffix=r'(?![\\w#$-])')$/;"	v	class:CrmshLexer
date_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    date_regex = r'\\d{4,}-\\d{2}-\\d{2}'$/;"	v	class:TodotxtLexer
db_file	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    db_file = '.wakatime.db'$/;"	v	class:Queue
db_file	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    db_file = '.wakatime.db'$/;"	v	class:SessionCache
dba	plugged/php.vim/attic/syntax.ini	/^dba = no$/;"	k	section:extensions
dcd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dcd": null,$/;"	z
dcl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dcl": null,$/;"	z
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
dd	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dd :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
debchangelog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "debchangelog": null,$/;"	z
debcontrol	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "debcontrol": null,$/;"	z
debounce	plugged/coc.nvim/package.json	/^    "debounce": "^1.2.0",$/;"	s	object:dependencies
debsources	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "debsources": null,$/;"	z
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
dec	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^    from . import decoder as dec$/;"	x	function:_toggle_speedups	file:
decimal_suffixes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    decimal_suffixes = '([tTsSiIlLvV]|ll|LL|([iIuU])(8|16|32|64))?'$/;"	v	class:FelixLexer
declaration	plugged/coc.nvim/tsconfig.json	/^    "declaration": true,$/;"	b	object:compilerOptions
declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    declarations = ('DATA', 'LET')$/;"	v	class:QBasicLexer
declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    declarations = ($/;"	v	class:ClojureLexer
declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    declarations = ($/;"	v	class:HyLexer
declkw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    declkw = r'(?:res|d)[bwdqt]|times'$/;"	v	class:NasmLexer
declkw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    declkw = r'(?:res|d)[bwdqt]|times'$/;"	v	class:TasmLexer
decn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    decn = r'[0-9]+'$/;"	v	class:NasmLexer
decn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    decn = r'[0-9]+'$/;"	v	class:TasmLexer
decode	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^    def decode(self, data, errors='strict'):$/;"	m	class:Codec
decode	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def decode(s, strict=False, uts46=False, std3_rules=False):$/;"	f
decode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^    def decode(self, s, _w=WHITESPACE.match, _PY3=PY3):$/;"	m	class:JSONDecoder
decompress	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def decompress(self, data):$/;"	m	class:DeflateDecoder
decompress	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def decompress(self, data):$/;"	m	class:GzipDecoder
decorating_function	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def decorating_function(user_function):$/;"	f	function:recursive_repr	file:
decrypt	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^    def decrypt(self, crypted_text):$/;"	m	class:DES
decrypt	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^    def decrypt(self, str):$/;"	m	class:DES
deep	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
def	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "def": null,$/;"	z
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerBase.properties.cwd
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerCommand.properties.command
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.module
default	plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.runtime
default	plugged/coc.nvim/data/schema.json	/^          "default": "127.0.0.1",$/;"	s	object:definitions.languageServerSocket.properties.host
default	plugged/coc.nvim/data/schema.json	/^          "default": "ipc",$/;"	s	object:definitions.languageServerModule.properties.transport
default	plugged/coc.nvim/data/schema.json	/^          "default": "never",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
default	plugged/coc.nvim/data/schema.json	/^          "default": "off",$/;"	s	object:definitions.languageServerBase.properties.trace.server
default	plugged/coc.nvim/data/schema.json	/^          "default": "utf8",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.additionalSchemes
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.filetypes
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.ignoredRootPaths
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.rootPatterns
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerCommand.properties.args
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.args
default	plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.execArgv
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableWorkspaceFolders
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.requireRootPattern
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.detached
default	plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.shell
default	plugged/coc.nvim/data/schema.json	/^          "default": null,$/;"	z	object:definitions.languageServerBase.properties.env
default	plugged/coc.nvim/data/schema.json	/^          "default": true$/;"	b	object:definitions.languageServerBase.properties.enable
default	plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.initializationOptions
default	plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.settings
default	plugged/coc.nvim/data/schema.json	/^        "default": {"type": "string"}$/;"	o	object:properties.suggest.completionItemKindLabels.properties
default	plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.diagnostic.virtualTextPrefix
default	plugged/coc.nvim/data/schema.json	/^      "default": " \\\\ "$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
default	plugged/coc.nvim/data/schema.json	/^      "default": "",$/;"	s	object:properties.http.proxy
default	plugged/coc.nvim/data/schema.json	/^      "default": "*",$/;"	s	object:properties.list.selectedSignText
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.list.nextKeymap
default	plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.list.previousKeymap
default	plugged/coc.nvim/data/schema.json	/^      "default": ">",$/;"	s	object:properties.list.indicator
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.errorSign
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.hintSign
default	plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.infoSign
default	plugged/coc.nvim/data/schema.json	/^      "default": "@,48-57,_192-255,<,>,$,#,-,`,*",$/;"	s	object:properties.suggest.previewIsKeyword
default	plugged/coc.nvim/data/schema.json	/^      "default": "A"$/;"	s	object:properties.coc.source.around.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "B"$/;"	s	object:properties.coc.source.buffer.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "F"$/;"	s	object:properties.coc.source.file.shortcut
default	plugged/coc.nvim/data/schema.json	/^      "default": "SNIP",$/;"	s	object:properties.coc.preferences.snippetStatusText
default	plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.previewHighlightGroup
default	plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.diagnostic.enableMessage
default	plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.suggest.autoTrigger
default	plugged/coc.nvim/data/schema.json	/^      "default": "daily",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
default	plugged/coc.nvim/data/schema.json	/^      "default": "edit",$/;"	s	object:properties.coc.preferences.jumpCommand
default	plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.diagnostic.messageTarget
default	plugged/coc.nvim/data/schema.json	/^      "default": "hint",$/;"	s	object:properties.diagnostic.level
default	plugged/coc.nvim/data/schema.json	/^      "default": "menu",$/;"	s	object:properties.suggest.detailField
default	plugged/coc.nvim/data/schema.json	/^      "default": "more",$/;"	s	object:properties.coc.preferences.messageLevel
default	plugged/coc.nvim/data/schema.json	/^      "default": "~",$/;"	s	object:properties.suggest.snippetIndicator
default	plugged/coc.nvim/data/schema.json	/^      "default": "‣"$/;"	s	object:properties.codeLens.separator
default	plugged/coc.nvim/data/schema.json	/^      "default": "⚠"$/;"	s	object:properties.diagnostic.warningSign
default	plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.around.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.buffer.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.suggest.minTriggerInputLength
default	plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.coc.source.file.priority
default	plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.list.maxHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 100$/;"	n	object:properties.suggest.detailMaxLength
default	plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlightOffset
default	plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.signOffset
default	plugged/coc.nvim/data/schema.json	/^      "default": 1000,$/;"	n	object:properties.list.limitLines
default	plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.list.maxPreviewHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 2000,$/;"	n	object:properties.suggest.timeout
default	plugged/coc.nvim/data/schema.json	/^      "default": 3$/;"	n	object:properties.diagnostic.virtualTextLines
default	plugged/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxCompleteItemCount
default	plugged/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxPreviewWidth
default	plugged/coc.nvim/data/schema.json	/^      "default": 60,$/;"	n	object:properties.suggest.triggerCompletionWait
default	plugged/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.diagnostic.maxWindowHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.signature.maxWindowHeight
default	plugged/coc.nvim/data/schema.json	/^      "default": 900,$/;"	n	object:properties.list.signOffset
default	plugged/coc.nvim/data/schema.json	/^      "default": 99,$/;"	n	object:properties.suggest.languageSourcePriority
default	plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	a	object:properties.coc.source.file.trimSameExts
default	plugged/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	a	object:properties.coc.preferences.rootPatterns
default	plugged/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	a	object:properties.coc.source.file.triggerCharacters
default	plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	a	object:properties.workspace.ignoredFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnSaveFiletypes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.around.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.buffer.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.disableSyntaxes
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.ignorePatterns
default	plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.outline.ctagsFilestypes
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.formatOnType
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.useQuickfixForLocations
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.codeLens.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.checkCurrentLine
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.displayByAle
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.joinMessageLines
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshAfterSave
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshOnInsertMode
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.virtualText
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.signature.hideOnTextChange
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableKind
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenu
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreview
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.keepCompleteopt
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.numberSelect
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.preferCompleteThanJumpPlaceholder
default	plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.triggerAfterInsertEnter
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.acceptSuggestionOnCommitCharacter
default	plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.echodocSupport
default	plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.coc.preferences.watchmanPath
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.bracketEnterImprove
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.colorSupport
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableFloatHighlight
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.previewAutoClose
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.snippets.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.file.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.locationlist
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.http.proxyStrictSSL
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.enable
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.preferShownAbove
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.fixInsertedWord
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.localityBonus
default	plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.noselect
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.buffer.ignoreGitignore
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.file.ignoreHidden
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableSign
default	plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.autoResize
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.languageserver
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.insertMappings
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.normalMappings
default	plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.suggest.completionItemKindLabels
default	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class default:$/;"	c
default	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def default(self, o):$/;"	m	class:JSONEncoder
default.nvim	README.md	/^# default.nvim$/;"	c
defaultView	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	defaultView = document.defaultView || {};$/;"	v
default_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
default_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def default_headers():$/;"	f
default_hooks	plugged/vim-wakatime/packages/wakatime/packages/requests/hooks.py	/^def default_hooks():$/;"	f
default_image_format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    default_image_format = 'bmp'$/;"	v	class:BmpImageFormatter
default_image_format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    default_image_format = 'gif'$/;"	v	class:GifImageFormatter
default_image_format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    default_image_format = 'jpeg'$/;"	v	class:JpgImageFormatter
default_image_format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    default_image_format = 'png'$/;"	v	class:ImageFormatter
default_port	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    default_port = port_by_scheme['http']$/;"	v	class:HTTPConnection
default_port	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    default_port = port_by_scheme['https']$/;"	v	class:HTTPSConnection
default_proxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    default_proxy = None$/;"	v	class:socksocket
default_socket_options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    default_socket_options = [(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)]$/;"	v	class:HTTPConnection
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/abap.py	/^    default_style = ""$/;"	v	class:AbapStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol.py	/^    default_style = ""$/;"	v	class:AlgolStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol_nu.py	/^    default_style = ""$/;"	v	class:Algol_NuStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/arduino.py	/^    default_style = ""$/;"	v	class:ArduinoStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/autumn.py	/^    default_style = ""$/;"	v	class:AutumnStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/borland.py	/^    default_style = ''$/;"	v	class:BorlandStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/bw.py	/^    default_style = ""$/;"	v	class:BlackWhiteStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/colorful.py	/^    default_style = ""$/;"	v	class:ColorfulStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/default.py	/^    default_style = ""$/;"	v	class:DefaultStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/emacs.py	/^    default_style = ""$/;"	v	class:EmacsStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/friendly.py	/^    default_style = ""$/;"	v	class:FriendlyStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/igor.py	/^    default_style = ""$/;"	v	class:IgorStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    default_style =  '#222222'$/;"	v	class:LovelaceStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/murphy.py	/^    default_style = ""$/;"	v	class:MurphyStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^    default_style = ''$/;"	v	class:ParaisoDarkStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^    default_style = ''$/;"	v	class:ParaisoLightStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/pastie.py	/^    default_style = ''$/;"	v	class:PastieStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/perldoc.py	/^    default_style = ''$/;"	v	class:PerldocStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/sas.py	/^    default_style = ''$/;"	v	class:SasStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/stata.py	/^    default_style = ''$/;"	v	class:StataStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/tango.py	/^    default_style = ""$/;"	v	class:TangoStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/trac.py	/^    default_style = ''$/;"	v	class:TracStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vim.py	/^    default_style = "#cccccc"$/;"	v	class:VimStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vs.py	/^    default_style = ""$/;"	v	class:VisualStudioStyle
default_style	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/xcode.py	/^    default_style = ''$/;"	v	class:XcodeStyle
default_user_agent	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def default_user_agent(name="python-requests"):$/;"	f
defaultfn	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *defaultfn;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
defaults	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def defaults(self):$/;"	m	class:RawConfigParser
definitions	plugged/coc.nvim/data/schema.json	/^  "definitions": {$/;"	o
del_cl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    del_cl = r"\\-\\]"$/;"	v	class:WDiffLexer
del_op	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    del_op = r"\\[\\-"$/;"	v	class:WDiffLexer
delete	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def delete(url, **kwargs):$/;"	f
delete	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def delete(self, url, **kwargs):$/;"	m	class:Session
delete	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    def delete(self):$/;"	m	class:SessionCache
delete_mark	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def delete_mark(name):$/;"	f
delimiter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    delimiter = r'\\s'$/;"	v	class:ForthLexer
delimiter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    delimiter = r'()<>\\[\\]{}\/%\\s'$/;"	v	class:PostScriptLexer
delimiter_end	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    delimiter_end = r'(?=[%s])' % delimiter$/;"	v	class:ForthLexer
delimiter_end	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    delimiter_end = r'(?=[%s])' % delimiter$/;"	v	class:PostScriptLexer
delphi	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "delphi": "Delphi",$/;"	s
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
denyhosts	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "denyhosts": null,$/;"	z
dep_from_git	plugged/javascript-libraries-syntax.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	plugged/javascript-libraries-syntax.vim/Makefile	/^dep_from_svn = \\$/;"	m
dependencies	plugged/coc.nvim/package.json	/^  "dependencies": {$/;"	o
dependencies	plugged/tcomment_vim/addon-info.json	/^    "dependencies" : {},$/;"	o
dependencies	plugged/vim-snippets/addon-info.json	/^  "dependencies" : {$/;"	o
dependencies	plugged/vim-vue/Makefile	/^dependencies = \\$/;"	m
dependencies	plugged/vim-vue/Makefile	/^dependencies:$/;"	t
dependencies	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    dependencies = None$/;"	v	class:Heartbeat
dequeue	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.dequeue = function(type){$/;"	f	function:jQuery.fn
deregister_hook	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def deregister_hook(self, event, hook):$/;"	m	class:RequestHooksMixin
des_SPtrans	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_data.py	/^des_SPtrans = \\$/;"	v
des_c_obj	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^    des_c_obj = None$/;"	v	class:DES
des_ecb_encrypt	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def des_ecb_encrypt(input, ks, encrypt):$/;"	f
des_encript	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def des_encript(input, ks, encrypt):$/;"	f
des_set_key	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def des_set_key(key):$/;"	f
des_skb	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_data.py	/^des_skb = \\$/;"	v
desc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "desc": null,$/;"	z
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of javascript file, should works in IPC mode"$/;"	s	object:definitions.languageServerModule.properties.module
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of node runtime."$/;"	s	object:definitions.languageServerModule.properties.runtime
description	plugged/coc.nvim/data/schema.json	/^          "description": "Absolute root paths that language server should not use as rootPath, h/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
description	plugged/coc.nvim/data/schema.json	/^          "description": "Additional uri schemes, default schemes including file & untitled.",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
description	plugged/coc.nvim/data/schema.json	/^          "description": "Arguments of command",$/;"	s	object:definitions.languageServerCommand.properties.args
description	plugged/coc.nvim/data/schema.json	/^          "description": "Argv passed to node when using module, normally used for debugging, ex/;"	s	object:definitions.languageServerModule.properties.execArgv
description	plugged/coc.nvim/data/schema.json	/^          "description": "Configure message level to show the output channel buffer",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
description	plugged/coc.nvim/data/schema.json	/^          "description": "Detach the languageserver process"$/;"	s	object:definitions.languageServerCommand.properties.detached
description	plugged/coc.nvim/data/schema.json	/^          "description": "Disable workspaceFolders feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
description	plugged/coc.nvim/data/schema.json	/^          "description": "Encoding used for stdio of child process."$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
description	plugged/coc.nvim/data/schema.json	/^          "description": "Environment variables for child process."$/;"	s	object:definitions.languageServerBase.properties.env
description	plugged/coc.nvim/data/schema.json	/^          "description": "Executable in $PATH to start languageserver, should not used with modu/;"	s	object:definitions.languageServerCommand.properties.command
description	plugged/coc.nvim/data/schema.json	/^          "description": "Extra arguments of module",$/;"	s	object:definitions.languageServerModule.properties.args
description	plugged/coc.nvim/data/schema.json	/^          "description": "Host of server"$/;"	s	object:definitions.languageServerSocket.properties.host
description	plugged/coc.nvim/data/schema.json	/^          "description": "If true, doesn't start server when root pattern not found."$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
description	plugged/coc.nvim/data/schema.json	/^          "description": "Port number of socket server"$/;"	s	object:definitions.languageServerSocket.properties.port
description	plugged/coc.nvim/data/schema.json	/^          "description": "Port number used when transport is 'socket'"$/;"	s	object:definitions.languageServerModule.properties.transportPort
description	plugged/coc.nvim/data/schema.json	/^          "description": "Root patterns used for reoslve rootPath from current file, default to /;"	s	object:definitions.languageServerBase.properties.rootPatterns
description	plugged/coc.nvim/data/schema.json	/^          "description": "Settings of languageserver"$/;"	s	object:definitions.languageServerBase.properties.settings
description	plugged/coc.nvim/data/schema.json	/^          "description": "Supported filetypes, use empty array for all filetypes.",$/;"	s	object:definitions.languageServerBase.properties.filetypes
description	plugged/coc.nvim/data/schema.json	/^          "description": "Trace level of communication between server and client"$/;"	s	object:definitions.languageServerBase.properties.trace.server
description	plugged/coc.nvim/data/schema.json	/^          "description": "Transport kind used by server, could be 'ipc', 'stdio', 'socket' and '/;"	s	object:definitions.languageServerModule.properties.transport
description	plugged/coc.nvim/data/schema.json	/^          "description": "Use shell for process"$/;"	s	object:definitions.languageServerCommand.properties.shell
description	plugged/coc.nvim/data/schema.json	/^          "description": "Working directory of languageserver, absolute path or relative to work/;"	s	object:definitions.languageServerBase.properties.cwd
description	plugged/coc.nvim/data/schema.json	/^          "description": "initializationOptions passed to languageserver"$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
description	plugged/coc.nvim/data/schema.json	/^      "description": "'iskeyword' option on floating preview buffer."$/;"	s	object:properties.suggest.previewIsKeyword
description	plugged/coc.nvim/data/schema.json	/^      "description": "Add preview option to completeopt, default: false.",$/;"	s	object:properties.suggest.enablePreview
description	plugged/coc.nvim/data/schema.json	/^      "description": "Auto close preview window on cursor move.",$/;"	s	object:properties.coc.preferences.previewAutoClose
description	plugged/coc.nvim/data/schema.json	/^      "description": "Automatically update the value of b:coc_current_function on CursorHold eve/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
description	plugged/coc.nvim/data/schema.json	/^      "description": "Boost suggestions that appear closer to the cursor position.",$/;"	s	object:properties.suggest.localityBonus
description	plugged/coc.nvim/data/schema.json	/^      "description": "Command used for location jump, like goto definition, goto references etc./;"	s	object:properties.coc.preferences.jumpCommand
description	plugged/coc.nvim/data/schema.json	/^      "description": "Confirm completion instead of jump to next placeholder when completion is /;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
description	plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether suggestions should be accepted on commit characters. For /;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
description	plugged/coc.nvim/data/schema.json	/^      "description": "Create location list for error & warning",$/;"	s	object:properties.diagnostic.locationlist
description	plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on insert mode."$/;"	s	object:properties.list.insertMappings
description	plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on normal mode."$/;"	s	object:properties.list.normalMappings
description	plugged/coc.nvim/data/schema.json	/^      "description": "Diagnostic message target.",$/;"	s	object:properties.diagnostic.messageTarget
description	plugged/coc.nvim/data/schema.json	/^      "description": "Dictionary of languageservers, key is used as id of languageserver.",$/;"	s	object:properties.languageserver
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable auto resize feature."$/;"	s	object:properties.list.autoResize
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable codeLens feature, require neovim with set virtual text feature.",$/;"	s	object:properties.codeLens.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable color highlight if language server support it.",$/;"	s	object:properties.coc.preferences.colorSupport
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable diagnostic refresh on insert mode, default false.",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlight for floating window.",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable signature help when trigger character typed, require restart servic/;"	s	object:properties.signature.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Enable signs for diagnostics."$/;"	s	object:properties.diagnostic.enableSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should be ignored for resolve workspace folder.",$/;"	s	object:properties.workspace.ignoredFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on save.",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should use ctags for outline instead of language server.",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
description	plugged/coc.nvim/data/schema.json	/^      "description": "Hide signature float window when text changed, require restart service on /;"	s	object:properties.signature.hideOnTextChange
description	plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for highlight the range in preview window."$/;"	s	object:properties.list.previewHighlightGroup
description	plugged/coc.nvim/data/schema.json	/^      "description": "How should completion be triggered",$/;"	s	object:properties.suggest.autoTrigger
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore completion for hidden files"$/;"	s	object:properties.coc.source.file.ignoreHidden
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore git ignored files for buffer words"$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
description	plugged/coc.nvim/data/schema.json	/^      "description": "Ignore patterns of matcher",$/;"	s	object:properties.coc.source.file.ignorePatterns
description	plugged/coc.nvim/data/schema.json	/^      "description": "Improve enter inside bracket `<> {} [] ()` by add new empty line below and/;"	s	object:properties.coc.preferences.bracketEnterImprove
description	plugged/coc.nvim/data/schema.json	/^      "description": "Input number to select complete item, it could wrong when using <up> and </;"	s	object:properties.suggest.numberSelect
description	plugged/coc.nvim/data/schema.json	/^      "description": "Interval for check extension update, could be daily, weekly, never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
description	plugged/coc.nvim/data/schema.json	/^      "description": "Join lines messages to reduce lines of floating window.",$/;"	s	object:properties.diagnostic.joinMessageLines
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select next line on insert mode."$/;"	s	object:properties.list.nextKeymap
description	plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select previous line on insert mode."$/;"	s	object:properties.list.previousKeymap
description	plugged/coc.nvim/data/schema.json	/^      "description": "Limit lines for list buffer."$/;"	s	object:properties.list.limitLines
description	plugged/coc.nvim/data/schema.json	/^      "description": "Make inserted word replace word characters after cursor position.",$/;"	s	object:properties.suggest.fixInsertedWord
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max height for preview window of list."$/;"	s	object:properties.list.maxPreviewHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority bigger than or equal to 90."$/;"	s	object:properties.suggest.highPrioritySourceLimit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority lower than 90."$/;"	s	object:properties.suggest.lowPrioritySourceLimit
description	plugged/coc.nvim/data/schema.json	/^      "description": "Max length of detail that should be shown in popup menu.",$/;"	s	object:properties.suggest.detailMaxLength
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maxmium height of diagnostics floating window.",$/;"	s	object:properties.diagnostic.maxWindowHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maxmium height of floating signature help window.",$/;"	s	object:properties.signature.maxWindowHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maxmium height of list window."$/;"	s	object:properties.list.maxHeight
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maxmium number of complete items shown in vim"$/;"	s	object:properties.suggest.maxCompleteItemCount
description	plugged/coc.nvim/data/schema.json	/^      "description": "Maxmium width of floating preview window."$/;"	s	object:properties.suggest.maxPreviewWidth
description	plugged/coc.nvim/data/schema.json	/^      "description": "Message level for filter echoed messages, could be 'more', 'warning' and '/;"	s	object:properties.coc.preferences.messageLevel
description	plugged/coc.nvim/data/schema.json	/^      "description": "Mininal input length for trigger completion, default 1"$/;"	s	object:properties.suggest.minTriggerInputLength
description	plugged/coc.nvim/data/schema.json	/^      "description": "Not make vim select first item on completion start",$/;"	s	object:properties.suggest.noselect
description	plugged/coc.nvim/data/schema.json	/^      "description": "Offset number of buffer.addHighlight, neovim only.",$/;"	s	object:properties.diagnostic.highlightOffset
description	plugged/coc.nvim/data/schema.json	/^      "description": "Offset number of sign",$/;"	s	object:properties.diagnostic.signOffset
description	plugged/coc.nvim/data/schema.json	/^      "description": "Only refresh diagnostics after save, default false.",$/;"	s	object:properties.diagnostic.refreshAfterSave
description	plugged/coc.nvim/data/schema.json	/^      "description": "Priority of language sources."$/;"	s	object:properties.suggest.languageSourcePriority
description	plugged/coc.nvim/data/schema.json	/^      "description": "Remove kind field from vim complete item.",$/;"	s	object:properties.suggest.disableKind
description	plugged/coc.nvim/data/schema.json	/^      "description": "Remove menu field from vim complete item.",$/;"	s	object:properties.suggest.disableMenu
description	plugged/coc.nvim/data/schema.json	/^      "description": "Root patterns to resolve workspaceFolder from parent folders of opened fil/;"	s	object:properties.coc.preferences.rootPatterns
description	plugged/coc.nvim/data/schema.json	/^      "description": "Separator text for codeLens in virtual text",$/;"	s	object:properties.codeLens.separator
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set custom labels to completion items' kinds.",$/;"	s	object:properties.suggest.completionItemKindLabels
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable diagnostic display",$/;"	s	object:properties.diagnostic.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable snippets support.",$/;"	s	object:properties.coc.preferences.snippets.enable
description	plugged/coc.nvim/data/schema.json	/^      "description": "Set to true to enable format on type",$/;"	s	object:properties.coc.preferences.formatOnType
description	plugged/coc.nvim/data/schema.json	/^      "description": "Show signature help float window above cursor when possible, require resta/;"	s	object:properties.signature.preferShownAbove
description	plugged/coc.nvim/data/schema.json	/^      "description": "Sign offset of list, should be different from other plugins."$/;"	s	object:properties.list.signOffset
description	plugged/coc.nvim/data/schema.json	/^      "description": "Sign text for selected lines."$/;"	s	object:properties.list.selectedSignText
description	plugged/coc.nvim/data/schema.json	/^      "description": "Target of signature help, use float when possible by default.",$/;"	s	object:properties.signature.target
description	plugged/coc.nvim/data/schema.json	/^      "description": "Target to show hover information, default is floating window when possible/;"	s	object:properties.coc.preferences.hoverTarget
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of error sign",$/;"	s	object:properties.diagnostic.errorSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of hint sign",$/;"	s	object:properties.diagnostic.hintSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of info sign",$/;"	s	object:properties.diagnostic.infoSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text of warning sign",$/;"	s	object:properties.diagnostic.warningSign
description	plugged/coc.nvim/data/schema.json	/^      "description": "Text shown in statusline to indicate snippet session is activated."$/;"	s	object:properties.coc.preferences.snippetStatusText
description	plugged/coc.nvim/data/schema.json	/^      "description": "The characer used as first characer in prompt line"$/;"	s	object:properties.list.indicator
description	plugged/coc.nvim/data/schema.json	/^      "description": "The character used in abbr of complete item to indicate the item could be /;"	s	object:properties.suggest.snippetIndicator
description	plugged/coc.nvim/data/schema.json	/^      "description": "The number of non empty lines from a diagnostic to display",$/;"	s	object:properties.diagnostic.virtualTextLines
description	plugged/coc.nvim/data/schema.json	/^      "description": "The prefix added virtual text diagnostics",$/;"	s	object:properties.diagnostic.virtualTextPrefix
description	plugged/coc.nvim/data/schema.json	/^      "description": "The text that will mark a line end from the diagnostic message",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
description	plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for completion, in miliseconds."$/;"	s	object:properties.suggest.timeout
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trigger completion after InsertEnter, auto trigger should be 'always' to e/;"	s	object:properties.suggest.triggerAfterInsertEnter
description	plugged/coc.nvim/data/schema.json	/^      "description": "Trim same extension on file completion",$/;"	s	object:properties.coc.source.file.trimSameExts
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use Ale for display diagnostics in vim, will disable coc for display diagn/;"	s	object:properties.diagnostic.displayByAle
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use NeoVim virtual text to display diagnostics",$/;"	s	object:properties.diagnostic.virtualText
description	plugged/coc.nvim/data/schema.json	/^      "description": "Use vim's quickfix list for jump locations,\\n need restart on change.",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
description	plugged/coc.nvim/data/schema.json	/^      "description": "Used for filter diagnostics by diagnostic severity.",$/;"	s	object:properties.diagnostic.level
description	plugged/coc.nvim/data/schema.json	/^      "description": "Wait time between trigger character type and completion start, for wait se/;"	s	object:properties.suggest.triggerCompletionWait
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, add function signature to user_data.signature to support ech/;"	s	object:properties.suggest.echodocSupport
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, completeopt is not overriden, auto completion will be disabl/;"	s	object:properties.suggest.keepCompleteopt
description	plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, show all diagnostics of current line instead of current posi/;"	s	object:properties.diagnostic.checkCurrentLine
description	plugged/coc.nvim/data/schema.json	/^      "description": "When to enable echo messages of diagnostics.",$/;"	s	object:properties.diagnostic.enableMessage
description	plugged/coc.nvim/data/schema.json	/^      "description": "Where to add the detail in complete item when it's less than max length.",$/;"	s	object:properties.suggest.detailField
description	plugged/coc.nvim/data/schema.json	/^      "description": "executable path for https:\/\/facebook.github.io\/watchman\/, detected fro/;"	s	object:properties.coc.preferences.watchmanPath
description	plugged/coc.nvim/data/schema.json	/^      "description": "http proxy used for json server"$/;"	s	object:properties.http.proxy
description	plugged/coc.nvim/data/schema.json	/^  "description": "Configuration file for coc.nvim",$/;"	s
description	plugged/coc.nvim/package.json	/^  "description": "LSP based intellisense engine for neovim & vim8.",$/;"	s
description	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^    "description": "For Loop"$/;"	s	object:For Loop
description	plugged/tcomment_vim/addon-info.json	/^    "description" : "An easily extensible & universal comment plugin"$/;"	s
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
description	plugged/vim-snippets/addon-info.json	/^  "description" : "community driven set of snippets for snipmate"$/;"	s
description_of	plugged/vim-wakatime/packages/wakatime/packages/chardet/cli/chardetect.py	/^def description_of(lines, name='stdin'):$/;"	f
desktop	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "desktop": null,$/;"	z
dest	plugged/coc.nvim/plugin/coc.vim	/^  let dest = $HOME."\/vimfiles\/coc-settings.json"$/;"	v
detached	plugged/coc.nvim/data/schema.json	/^        "detached": {$/;"	o	object:definitions.languageServerCommand.properties
detect	plugged/vim-wakatime/packages/wakatime/packages/chardet/__init__.py	/^def detect(byte_str):$/;"	f
devDependencies	plugged/coc.nvim/package.json	/^  "devDependencies": {$/;"	o
devicons#plugins#ctrlp#init	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^function! devicons#plugins#ctrlp#init() abort$/;"	f
devicons#plugins#denite#init	plugged/vim-devicons/autoload/devicons/plugins/denite.vim	/^function! devicons#plugins#denite#init() abort$/;"	f
devicons#plugins#flagship#init	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^function! devicons#plugins#flagship#init() abort$/;"	f
devicons#plugins#startify#init	plugged/vim-devicons/autoload/devicons/plugins/startify.vim	/^function! devicons#plugins#startify#init() abort$/;"	f
devicons#plugins#unite#init	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^function! devicons#plugins#unite#init() abort$/;"	f
devicons#plugins#vimfiler#init	plugged/vim-devicons/autoload/devicons/plugins/vimfiler.vim	/^function! devicons#plugins#vimfiler#init() abort$/;"	f
dh	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dh :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
diagnostic.checkCurrentLine	plugged/coc.nvim/data/schema.json	/^    "diagnostic.checkCurrentLine": {$/;"	o	object:properties
diagnostic.displayByAle	plugged/coc.nvim/data/schema.json	/^    "diagnostic.displayByAle": {$/;"	o	object:properties
diagnostic.enable	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enable": {$/;"	o	object:properties
diagnostic.enableMessage	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableMessage": {$/;"	o	object:properties
diagnostic.enableSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableSign": {$/;"	o	object:properties
diagnostic.errorSign	coc-settings.json	/^  "diagnostic.errorSign": "•",$/;"	s
diagnostic.errorSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.errorSign": {$/;"	o	object:properties
diagnostic.highlightOffset	plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlightOffset": {$/;"	o	object:properties
diagnostic.hintSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.hintSign": {$/;"	o	object:properties
diagnostic.infoSign	coc-settings.json	/^  "diagnostic.infoSign": "•"$/;"	s
diagnostic.infoSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.infoSign": {$/;"	o	object:properties
diagnostic.joinMessageLines	plugged/coc.nvim/data/schema.json	/^    "diagnostic.joinMessageLines": {$/;"	o	object:properties
diagnostic.level	plugged/coc.nvim/data/schema.json	/^    "diagnostic.level": {$/;"	o	object:properties
diagnostic.locationlist	plugged/coc.nvim/data/schema.json	/^    "diagnostic.locationlist": {$/;"	o	object:properties
diagnostic.maxWindowHeight	plugged/coc.nvim/data/schema.json	/^    "diagnostic.maxWindowHeight": {$/;"	o	object:properties
diagnostic.messageTarget	plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageTarget": {$/;"	o	object:properties
diagnostic.refreshAfterSave	plugged/coc.nvim/data/schema.json	/^    "diagnostic.refreshAfterSave": {$/;"	o	object:properties
diagnostic.refreshOnInsertMode	plugged/coc.nvim/data/schema.json	/^    "diagnostic.refreshOnInsertMode": {$/;"	o	object:properties
diagnostic.signOffset	plugged/coc.nvim/data/schema.json	/^    "diagnostic.signOffset": {$/;"	o	object:properties
diagnostic.virtualText	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualText": {$/;"	o	object:properties
diagnostic.virtualTextLineSeparator	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLineSeparator": {$/;"	o	object:properties
diagnostic.virtualTextLines	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLines": {$/;"	o	object:properties
diagnostic.virtualTextPrefix	plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextPrefix": {$/;"	o	object:properties
diagnostic.warningSign	coc-settings.json	/^  "diagnostic.warningSign": "•",$/;"	s
diagnostic.warningSign	plugged/coc.nvim/data/schema.json	/^    "diagnostic.warningSign": {$/;"	o	object:properties
dialects	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    dialects = ($/;"	v	class:Modula2Lexer
dict	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def dict(self):$/;"	m	class:Heartbeat
dict_from_cookiejar	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def dict_from_cookiejar(cj):$/;"	f
dict_to_sequence	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def dict_to_sequence(d):$/;"	f
dictconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dictconf": null,$/;"	z
dictdconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dictdconf": null,$/;"	z
did_angularjs_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    let did_angularjs_coffee_syntax_inits = 1$/;"	v
did_angularjs_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    let did_angularjs_javascript_syntax_inits = 1$/;"	v
did_angularjs_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    let did_angularjs_ls_syntax_inits = 1$/;"	v
did_angularjs_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    let did_angularjs_typescript_syntax_inits = 1$/;"	v
did_angularui_router_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    let did_angularui_router_coffee_syntax_inits = 1$/;"	v
did_angularui_router_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    let did_angularui_router_javascript_syntax_inits = 1$/;"	v
did_angularui_router_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    let did_angularui_router_ls_syntax_inits = 1$/;"	v
did_angularui_router_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    let did_angularui_router_typescript_syntax_inits = 1$/;"	v
did_backbone_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    let did_backbone_coffee_syntax_inits = 1$/;"	v
did_backbone_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    let did_backbone_javascript_syntax_inits = 1$/;"	v
did_backbone_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    let did_backbone_ls_syntax_inits = 1$/;"	v
did_backbone_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    let did_backbone_typescript_syntax_inits = 1$/;"	v
did_chai_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    let did_chai_coffee_syntax_inits = 1$/;"	v
did_chai_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    let did_chai_javascript_syntax_inits = 1$/;"	v
did_chai_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    let did_chai_ls_syntax_inits = 1$/;"	v
did_chai_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    let did_chai_typescript_syntax_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/vue.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
did_prelude_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_ramda_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.coffee.vim	/^    let did_ramda_coffee_syntax_inits = 1$/;"	v
did_ramda_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.javascript.vim	/^    let did_ramda_javascript_syntax_inits = 1$/;"	v
did_ramda_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.ls.vim	/^    let did_ramda_ls_syntax_inits = 1$/;"	v
did_ramda_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/ramda.typescript.vim	/^    let did_ramda_typescript_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/tape.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/d3.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	plugged/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
diff	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def diff(a, b, sline=0):$/;"	f
diff	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "diff": null,$/;"	z
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
dircolors	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dircolors": null,$/;"	z
directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    directives = (r'BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|'$/;"	v	class:NasmLexer
directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    directives = (r'BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|'$/;"	v	class:TasmLexer
directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    directives = ('lib', 'link', 'flag', 'include', 'hide', 'freeze', 'access',$/;"	v	class:IdrisLexer
disable	plugged/numbers.vim/plugin/numbers.vim	/^    augroup disable$/;"	a
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {$/;"	o	object:definitions.languageServerBase.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerCommand.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerModule.properties
disableWorkspaceFolders	plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerSocket.properties
disable_warnings	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^def disable_warnings(category=exceptions.HTTPWarning):$/;"	f
discard	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def discard(self, key):$/;"	m	class:HTTPHeaderDict
dispatch_hook	plugged/vim-wakatime/packages/wakatime/packages/requests/hooks.py	/^def dispatch_hook(key, hooks, hook_data, **kwargs):$/;"	f
display	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
dist	plugged/javascript-libraries-syntax.vim/Makefile	/^dist: bundle mkfilelist$/;"	t
diva	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "diva": null,$/;"	z
django	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "django": null,$/;"	z
dns	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dns": null,$/;"	z
do_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    def do_indent(level):$/;"	m	class:KconfigLexer
do_insertions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^def do_insertions(insertions, tokens):$/;"	f
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^do_re = re.compile(r'\\bDO\\b', re.IGNORECASE) $/;"	v
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
doc	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var doc = document.documentElement, body = document.body;$/;"	v
doc	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    doc          = elem.ownerDocument,$/;"	v
docbk	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "docbk": null,$/;"	z
docbksgml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "docbksgml": null,$/;"	z
docbkxml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "docbkxml": null,$/;"	z
docstring_headline	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def docstring_headline(obj):$/;"	f
doctype_lookup_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^doctype_lookup_re = re.compile(r'''$/;"	v
doctype_matches	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def doctype_matches(text, regex):$/;"	f
document_filters	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    def document_filters(self):$/;"	m	class:PygmentsDoc
document_formatters	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    def document_formatters(self):$/;"	m	class:PygmentsDoc
document_lexers	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    def document_lexers(self):$/;"	m	class:PygmentsDoc
documents	plugged/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^let documents = new languageserver.TextDocuments()$/;"	v
documents	plugged/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^let documents = new vscode_languageserver_1.TextDocuments();$/;"	v
dom	plugged/php.vim/attic/syntax.ini	/^dom = yes$/;"	k	section:extensions
dosbatch	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dosbatch": null,$/;"	z
dosini	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dosini": null,$/;"	z
dot	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dot": null,$/;"	z
dotted_netmask	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def dotted_netmask(mask):$/;"	f
download	plugged/coc.nvim/install.sh	/^download() {$/;"	f
doxygen	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "doxygen": null,$/;"	z
dp	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dp :<C-U>execute <SID>StageDiffEdit()<CR>$/;"	m
dracula	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dracula": null,$/;"	z
drain_and_release_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^        def drain_and_release_conn(response):$/;"	f	member:HTTPConnectionPool.urlopen	file:
ds	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ds :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dsl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dsl": null,$/;"	z
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def dst(self, dt):$/;"	m	class:UTC
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def dst(self, dt):$/;"	m	class:_FixedOffset
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:FixedOffset
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:LocalTimezone
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def dst(self, dt):$/;"	m	class:USTimeZone
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
dst	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def dst(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
dtd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dtd": null,$/;"	z
dtml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dtml": null,$/;"	z
dtrace	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dtrace": null,$/;"	z
dump	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def dump(obj, fp, skipkeys=False, ensure_ascii=True, check_circular=True,$/;"	f
dumps	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True,$/;"	f
duplicates_removed	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def duplicates_removed(it, already_seen=()):$/;"	f
dv	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dv :<C-U>execute <SID>StageDiff('Gvdiff')<CR>$/;"	m
dylan	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dylan": null,$/;"	z
dylanintr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dylanintr": null,$/;"	z
dylanlid	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "dylanlid": null,$/;"	z
ecd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ecd": null,$/;"	z
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
edif	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "edif": null,$/;"	z
ei	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ei          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
eiffel	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "eiffel": null,$/;"	z
elapsed	plugged/vim-gitgutter/unplace.vim	/^let elapsed = reltime(start)$/;"	v
elem	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					var elem = document.getElementById( match[3] );$/;"	v
elem	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    elem = words(($/;"	v	class:CrmshLexer
elementcontentchar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    elementcontentchar = r'[A-Za-z]|\\s|\\d|[!"#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
elems	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = this.length > 1, elems;$/;"	v
elems	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var elems = jQuery.map(this, function(elem){$/;"	v
elf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "elf": null,$/;"	z
elfun	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    elfun = ("sin", "sind", "sinh", "asin", "asind", "asinh", "cos", "cosd", "cosh",$/;"	v	class:MatlabLexer
elinks	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "elinks": null,$/;"	z
elixir	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "elixir": "Elixir",$/;"	s
elm	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "elm": "Elm",$/;"	s
elm_lsp#GetRootDir	plugged/ale/ale_linters/elm/elm_lsp.vim	/^function! elm_lsp#GetRootDir(buffer) abort$/;"	f
elmat	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    elmat = ("zeros", "ones", "eye", "repmat", "rand", "randn", "linspace", "logspace",$/;"	v	class:MatlabLexer
elmfilt	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "elmfilt": null,$/;"	z
emacs lisp	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "emacs lisp": "Emacs Lisp",$/;"	s
embedded_perl6_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def embedded_perl6_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
emit	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def emit(self, record):$/;"	m	class:NeoVimLoggerHandler
emit	plugged/vim-wakatime/packages/wakatime/packages/requests/__init__.py	/^        def emit(self, record):$/;"	m	class:NullHandler
emit	plugged/vim-wakatime/packages/wakatime/packages/urllib3/__init__.py	/^        def emit(self, record):$/;"	m	class:NullHandler
emmet#anchorizeURL	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#css#toggleComment	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#findTokens	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#renderNode	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#toString	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#haml#toggleComment	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#html#toggleComment	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#jade#toggleComment	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#less#toggleComment	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#sass#toggleComment	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#scss#toggleComment	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#slim#toggleComment	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet-vim.zip	plugged/emmet-vim/Makefile	/^emmet-vim.zip: remove-zip$/;"	t
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {$/;"	o	object:definitions.languageServerBase.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerCommand.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerModule.properties
enable	plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerSocket.properties
enable	plugged/numbers.vim/plugin/numbers.vim	/^    augroup enable$/;"	a
enc	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^    from . import encoder as enc$/;"	x	function:_toggle_speedups	file:
enchant	plugged/php.vim/attic/syntax.ini	/^enchant = no$/;"	k	section:extensions
encode	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^    def encode(self, data, errors='strict'):$/;"	m	class:Codec
encode	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def encode(s, strict=False, uts46=False, std3_rules=False, transitional=False):$/;"	f
encode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def encode(self, o):$/;"	m	class:JSONEncoder
encode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def encode(self, o):$/;"	m	class:JSONEncoderForHTML
encode_basestring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^def encode_basestring(s, _PY3=PY3, _q=u('"')):$/;"	f
encode_basestring_ascii	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^encode_basestring_ascii = ($/;"	v
encode_multipart_formdata	plugged/vim-wakatime/packages/wakatime/packages/urllib3/filepost.py	/^def encode_multipart_formdata(fields, boundary=None):$/;"	f
encoder	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoder;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
encoder_call	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_call(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:PyObject *	file:
encoder_clear	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_clear(PyObject *self)$/;"	f	typeref:typename:int	file:
encoder_dealloc	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_dealloc(PyObject *self)$/;"	f	typeref:typename:void	file:
encoder_dict_iteritems	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_dict_iteritems(PyEncoderObject *s, PyObject *dct)$/;"	f	typeref:typename:PyObject *	file:
encoder_encode_float	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_encode_float(PyEncoderObject *s, PyObject *obj)$/;"	f	typeref:typename:PyObject *	file:
encoder_encode_string	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_encode_string(PyEncoderObject *s, PyObject *obj)$/;"	f	typeref:typename:PyObject *	file:
encoder_init	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_init(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:int	file:
encoder_listencode_dict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_dict(PyEncoderObject *s, JSON_Accu *rval, PyObject *dct, Py_ssize_t indent_le/;"	f	typeref:typename:int	file:
encoder_listencode_list	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_list(PyEncoderObject *s, JSON_Accu *rval, PyObject *seq, Py_ssize_t indent_le/;"	f	typeref:typename:int	file:
encoder_listencode_obj	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_listencode_obj(PyEncoderObject *s, JSON_Accu *rval, PyObject *obj, Py_ssize_t indent_lev/;"	f	typeref:typename:int	file:
encoder_members	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMemberDef encoder_members[] = {$/;"	v	typeref:typename:PyMemberDef[]	file:
encoder_new	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:PyObject *	file:
encoder_stringify_key	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_stringify_key(PyEncoderObject *s, PyObject *key)$/;"	f	typeref:typename:PyObject *	file:
encoder_traverse	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^encoder_traverse(PyObject *self, visitproc visit, void *arg)$/;"	f	typeref:typename:int	file:
encoding	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoding;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
encoding	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *encoding;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject_HEAD PyObject *	file:
encrypt	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^    def encrypt(self, plain_text):$/;"	m	class:DES
encrypt	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^    def encrypt(self, plaintext):$/;"	m	class:DES
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
end	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def end(self, arg=None):$/;"	m	class:_PseudoMatch
end_id_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    def end_id_callback(self, match):$/;"	m	class:SMLLexer
end_row	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:SettingTable
end_row	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def end_row(self):$/;"	m	class:_Table
end_section	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def end_section(self):$/;"	m	class:HelpFormatter
end_string_suffix	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    end_string_suffix = (r'((?=$)|(?=[-\/:.,; \\n\\x00%s%s]))'$/;"	v	class:RstLexer
engines	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^  "engines": {$/;"	o
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
entity	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    entity = None$/;"	v	class:Heartbeat
entityref	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    entityref = r'(?:&(?:lt|gt|amp|quot|apos|nbsp);)'$/;"	v	class:XQueryLexer
entry	plugged/coc.nvim/webpack.config.js	/^  entry: '.\/bin\/server',$/;"	p	class:module.exports
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	a	object:definitions.languageServerBase.properties.revealOutputChannelOn
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	a	object:definitions.languageServerModule.properties.transport
enum	plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	a	object:definitions.languageServerBase.properties.trace.server
enum	plugged/coc.nvim/data/schema.json	/^        "enum": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	a	object:properties.suggest.detailField
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	a	object:properties.diagnostic.enableMessage
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	a	object:properties.suggest.autoTrigger
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	a	object:properties.coc.preferences.extensionUpdateCheck
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	a	object:properties.diagnostic.messageTarget
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	a	object:properties.coc.preferences.jumpCommand
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	a	object:properties.signature.target
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	a	object:properties.diagnostic.level
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	a	object:properties.coc.preferences.messageLevel
enum	plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	a	object:properties.coc.preferences.hoverTarget
enumMember	plugged/coc.nvim/data/schema.json	/^        "enumMember": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {$/;"	o	object:definitions.languageServerBase.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerCommand.properties
env	plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerModule.properties
envlist	plugged/ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^envlist =$/;"	k	section:tox
eo	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> eo          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
eos	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def eos(self):$/;"	m	class:Scanner
eos	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    eos = property(eos, eos.__doc__)$/;"	v	class:Scanner
ereg	plugged/php.vim/attic/syntax.ini	/^ereg = yes$/;"	k	section:extensions
erlang	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "erlang": "Erlang",$/;"	s
erlang	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "erlang": null,$/;"	z
errSSLCertExpired	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLCertExpired = -9814$/;"	v	class:SecurityConst
errSSLCertNotYetValid	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLCertNotYetValid = -9815$/;"	v	class:SecurityConst
errSSLClosedAbort	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLClosedAbort = -9806$/;"	v	class:SecurityConst
errSSLClosedGraceful	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLClosedGraceful = -9805$/;"	v	class:SecurityConst
errSSLClosedNoNotify	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLClosedNoNotify = -9816$/;"	v	class:SecurityConst
errSSLCrypto	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLCrypto = -9809$/;"	v	class:SecurityConst
errSSLHostNameMismatch	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLHostNameMismatch = -9843$/;"	v	class:SecurityConst
errSSLInternal	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLInternal = -9810$/;"	v	class:SecurityConst
errSSLNoRootCert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLNoRootCert = -9813$/;"	v	class:SecurityConst
errSSLPeerHandshakeFail	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLPeerHandshakeFail = -9824$/;"	v	class:SecurityConst
errSSLPeerUserCancelled	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLPeerUserCancelled = -9839$/;"	v	class:SecurityConst
errSSLProtocol	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLProtocol = -9800$/;"	v	class:SecurityConst
errSSLRecordOverflow	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLRecordOverflow = -9847$/;"	v	class:SecurityConst
errSSLServerAuthCompleted	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLServerAuthCompleted = -9841$/;"	v	class:SecurityConst
errSSLUnknownRootCert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLUnknownRootCert = -9812$/;"	v	class:SecurityConst
errSSLWeakPeerEphemeralDHKey	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLWeakPeerEphemeralDHKey = -9850$/;"	v	class:SecurityConst
errSSLWouldBlock	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLWouldBlock = -9803$/;"	v	class:SecurityConst
errSSLXCertChainInvalid	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSSLXCertChainInvalid = -9807$/;"	v	class:SecurityConst
errSecInvalidTrustSettings	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSecInvalidTrustSettings = -25262$/;"	v	class:SecurityConst
errSecItemNotFound	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSecItemNotFound = -25300$/;"	v	class:SecurityConst
errSecNoTrustSettings	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSecNoTrustSettings = -25263$/;"	v	class:SecurityConst
errSecVerifyFailed	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    errSecVerifyFailed = -67808$/;"	v	class:SecurityConst
errmsg	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^def errmsg(msg, doc, pos, end=None):$/;"	f
error	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def error(self, message):$/;"	m	class:ArgumentParser
error	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    error = _importer._get_module("moves.urllib_error")$/;"	v	class:Module_six_moves_urllib
error	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    error = _importer._get_module("moves.urllib_error")$/;"	v	class:Module_six_moves_urllib
error_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    error_keywords = set(($/;"	v	class:EmacsLispLexer
eruby	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "eruby": null,$/;"	z
es	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> es          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
esModuleInterop	plugged/coc.nvim/tsconfig.json	/^    "esModuleInterop": true,$/;"	b	object:compilerOptions
esc	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^esc = "\\x1b["$/;"	v
esc_char_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    esc_char_re = r'[bdefnrstv\\'"\\\\]'$/;"	v	class:ErlangLexer
esc_ctrl_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    esc_ctrl_re = r'\\^[a-zA-Z]'$/;"	v	class:ErlangLexer
esc_hex_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    esc_hex_re = r'(?:x[0-9a-fA-F]{2}|x\\{[0-9a-fA-F]+\\})'$/;"	v	class:ErlangLexer
esc_octal_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    esc_octal_re = r'[0-7][0-7]?[0-7]?'$/;"	v	class:ErlangLexer
escape	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def escape(self, attrs):$/;"	m	class:EscapeSequence
escape_char_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    escape_char_re = r'(\\\\[abdefnrstv])'$/;"	v	class:ElixirLexer
escape_html	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^def escape_html(text, table=_escape_html_table):$/;"	f
escape_html	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^def escape_html(text):$/;"	f
escape_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    escape_re = r'(?:\\\\(?:'+esc_char_re+r'|'+esc_octal_re+r'|'+esc_hex_re+r'|'+esc_ctrl_re+r')/;"	v	class:ErlangLexer
escape_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RebolLexer
escape_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    escape_re = r'(?:\\^\\([0-9a-f]{1,4}\\)*)'$/;"	v	class:RedLexer
escape_tex	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^def escape_tex(text, commandprefix):$/;"	f
eslint.filetypes	coc-settings.json	/^  "eslint.filetypes": [ "javascript", "vue" ],$/;"	a
esmtprc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "esmtprc": null,$/;"	z
esqlc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "esqlc": null,$/;"	z
esterel	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "esterel": null,$/;"	z
et	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> et          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
eterm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "eterm": null,$/;"	z
eval	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def eval(text):$/;"	f
evalScript	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function evalScript( i, elem ) {$/;"	f
event	plugged/coc.nvim/data/schema.json	/^        "event": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				event = !data[0] || !data[0].preventDefault;$/;"	v
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = { originalEvent: originalEvent };$/;"	c
event	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.event = {$/;"	c	class:jQuery
eviews	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "eviews": null,$/;"	z
examples_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    examples_keywords = u'^(\\\\s*)(예|例子|例|サンプル|امثلة|דוגמאות|Сце/;"	v	class:GherkinLexer
exclude	plugged/coc.nvim/tsconfig.json	/^  "exclude": []$/;"	a
exclude	plugged/coc.nvim/tslint.json	/^    "exclude": []$/;"	a	object:linterOptions
exclude	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	exclude = \/z-?index|font-?weight|opacity|zoom|line-?height\/i,$/;"	v
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    exclude = []$/;"	v	class:TokenParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    exclude = [$/;"	v	class:CParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    exclude = [$/;"	v	class:CSharpParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    exclude = [$/;"	v	class:GoParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    exclude = [$/;"	v	class:HaxeParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    exclude = [$/;"	v	class:JavaParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    exclude = [$/;"	v	class:KotlinParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    exclude = [$/;"	v	class:SwiftParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    exclude = [$/;"	v	class:PhpParser
exclude	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    exclude = [$/;"	v	class:PythonParser
exclusive	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var exclusive = true;$/;"	v
execArgv	plugged/coc.nvim/data/schema.json	/^        "execArgv": {$/;"	o	object:definitions.languageServerModule.properties
exec_	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def exec_(_code_, _globs_=None, _locs_=None):$/;"	f
exec_	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    exec_ = getattr(moves.builtins, "exec")$/;"	v
exec_	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def exec_(_code_, _globs_=None, _locs_=None):$/;"	f
exec_	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    exec_ = getattr(moves.builtins, "exec")$/;"	v
execute	plugged/vim-wakatime/packages/wakatime/main.py	/^def execute(argv=None):$/;"	f
execution_confs	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    execution_confs = set(('<<<', '>>>'))$/;"	v	class:CudaLexer
exif	plugged/php.vim/attic/syntax.ini	/^exif = no$/;"	k	section:extensions
exim	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "exim": null,$/;"	z
exit	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def exit(self, status=0, message=None):$/;"	m	class:ArgumentParser
exp_part	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    exp_part = r'[eE](\\+|-)?\\d+'$/;"	v	class:JsonLexer
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expando	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
expect	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "expect": null,$/;"	z
expected,	plugged/nvim-miniyank/lua/MessagePack.lua	/^        argerror('unpacker', 1, "string or function expected, got " .. type(src))$/;"	f
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = 'changes are untrackable'$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = 'line under the cursor was modified'$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ''$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = None # If set, we need to check that our Vim is running this pytho/;"	v	class:VimTestCase
experimentalDecorators	plugged/coc.nvim/tsconfig.json	/^    "experimentalDecorators": true,$/;"	b	object:compilerOptions
exports	plugged/coc.nvim/webpack.config.js	/^module.exports = {$/;"	c	class:module
exports	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "exports": null,$/;"	z
extend	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def extend(self, *args, **kwargs):$/;"	m	class:HTTPHeaderDict
extends	plugged/coc.nvim/tslint.json	/^  "extends": ".\/node_modules\/@chemzqm\/tslint-config\/tslint.json",$/;"	s
extension	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    extension = re.compile(r'\\.\\w{1,4}$')$/;"	v	class:JavascriptParser
extension	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    extension = re.compile(r'\\.[mh]$')$/;"	v	class:ObjectiveCParser
extensions	plugged/php.vim/attic/10-collect.php	/^$extensions = array();$/;"	v
extensions	plugged/php.vim/attic/20-generate.php	/^$extensions = [];$/;"	v
extensions	plugged/php.vim/attic/syntax.ini	/^[extensions]$/;"	s
extensions_in_same_folder	plugged/vim-wakatime/packages/wakatime/stats.py	/^def extensions_in_same_folder(file_name):$/;"	f
extract_completion	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    def extract_completion(var_type):$/;"	f
extract_cookies_to_jar	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def extract_cookies_to_jar(jar, request, response):$/;"	f
extract_from_urllib3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def extract_from_urllib3():$/;"	f
extract_from_urllib3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^def extract_from_urllib3():$/;"	f
f#	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "f#": "F#",$/;"	s
fan	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fan": null,$/;"	z
far#CheckFarWindowsToResizeHandler	plugged/far.vim/autoload/far.vim	/^function! far#CheckFarWindowsToResizeHandler(timer) abort$/;"	f
far#FarArgsComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarFileMaskComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarFileMaskComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarReplaceComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarReplaceComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarSearchComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarSearchComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FardoComplete	plugged/far.vim/autoload/far.vim	/^function! far#FardoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarundoComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarundoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindArgsComplete	plugged/far.vim/autoload/far.vim	/^function! far#FindArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindComplete	plugged/far.vim/autoload/far.vim	/^function! far#FindComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#RefarComplete	plugged/far.vim/autoload/far.vim	/^function! far#RefarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#apply_default_mappings	plugged/far.vim/autoload/far.vim	/^function! far#apply_default_mappings() abort "{{{$/;"	f
far#change_collapse_all	plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_all(cmode) abort "{{{$/;"	f
far#change_collapse_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_cursor(cmode) abort "{{{$/;"	f
far#change_exclude_all	plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_all(cmode) abort "{{{$/;"	f
far#change_exclude_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_cursor(cmode) abort "{{{$/;"	f
far#close_preview_window	plugged/far.vim/autoload/far.vim	/^function! far#close_preview_window() abort "{{{$/;"	f
far#executors#basic#execute	plugged/far.vim/autoload/far/executors/basic.vim	/^function! far#executors#basic#execute(exec_ctx, callback) abort$/;"	f
far#executors#nvim#callback	plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#callback(result, ctx_idx) abort$/;"	f
far#executors#nvim#execute	plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#execute(exec_ctx, callback) abort$/;"	f
far#executors#py3#execute	plugged/far.vim/autoload/far/executors/py3.vim	/^function! far#executors#py3#execute(exec_ctx, callback) abort$/;"	f
far#find	plugged/far.vim/autoload/far.vim	/^function! far#find(far_params, xargs) "{{{$/;"	f
far#jump_buffer_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#jump_buffer_under_cursor() abort "{{{$/;"	f
far#refind	plugged/far.vim/autoload/far.vim	/^function! far#refind(range, xargs) abort "{{{$/;"	f
far#replace	plugged/far.vim/autoload/far.vim	/^function! far#replace(xargs) abort "{{{$/;"	f
far#rpc#invoke	plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#invoke(imports, evalstr) abort "{{{$/;"	f
far#rpc#nvim_invoke	plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#nvim_invoke(execlist) abort "{{{$/;"	f
far#scroll_preview_window	plugged/far.vim/autoload/far.vim	/^function! far#scroll_preview_window(steps) abort "{{{$/;"	f
far#show_preview_window_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#show_preview_window_under_cursor() abort "{{{$/;"	f
far#sources#qf#search	plugged/far.vim/autoload/far/sources/qf.vim	/^function! far#sources#qf#search(ctx, fargs, cmdargs) abort "{{{$/;"	f
far#tools#centrify_text	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#centrify_text(text, width, val_col) abort "{{{$/;"	f
far#tools#cut_text_middle	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#cut_text_middle(text, width) abort "{{{$/;"	f
far#tools#echo_err	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_err(msg) abort "{{{$/;"	f
far#tools#echo_msg	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_msg(msg) abort "{{{$/;"	f
far#tools#ftlookup	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#ftlookup(ext) abort "{{{$/;"	f
far#tools#isdebug	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#isdebug()$/;"	f
far#tools#log	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#log(msg)$/;"	f
far#tools#matchcnt	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#matchcnt(pat, exp) abort "{{{$/;"	f
far#tools#replace	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#replace(text, str, repl) "{{{$/;"	f
far#tools#setdefault	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#setdefault(var, val) abort "{{{$/;"	f
far#tools#split_layout	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#split_layout(smode, bname, width, height) abort "{{{$/;"	f
far#tools#splitcmd	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#splitcmd(cmdline) "{{{$/;"	f
far#tools#undo_nextnr	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#undo_nextnr() "{{{$/;"	f
far#tools#visualtext	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#visualtext() "{{{$/;"	f
far#tools#win_layout	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#win_layout(win_params, param_prefix, fname) abort "{{{$/;"	f
far#undo	plugged/far.vim/autoload/far.vim	/^function! far#undo(xargs) abort "{{{$/;"	f
far.vim - Find And Replace Vim plugin	plugged/far.vim/README.md	/^# far.vim - Find And Replace Vim plugin$/;"	c
faraugroup	plugged/far.vim/autoload/far.vim	/^augroup faraugroup "{{{$/;"	a
farpy_path	plugged/far.vim/autoload/far/rpc.vim	/^let farpy_path = fnamemodify(expand('<sfile>'), ':p:h:h:h').'\/rplugin\/python3'$/;"	v
fasm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fasm": null,$/;"	z
fast-diff	plugged/coc.nvim/package.json	/^    "fast-diff": "^1.2.0",$/;"	s	object:dependencies
fast_encode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int fast_encode;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
fb-watchman	plugged/coc.nvim/package.json	/^    "fb-watchman": "^2.0.0",$/;"	s	object:dependencies
fdcc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fdcc": null,$/;"	z
feature_element_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    feature_element_keywords = u'^(\\\\s*)(시나리오 개요|시나리오|배경|背景|場景/;"	v	class:GherkinLexer
feature_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    feature_keywords = u'^(기능|機能|功能|フィーチャ|خاصية|תכונה|Функц/;"	v	class:GherkinLexer
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def feed(self, char, char_len):$/;"	m	class:CharDistributionAnalysis
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def feed(self, byte_str):$/;"	m	class:CharSetGroupProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def feed(self, buf):$/;"	m	class:CharSetProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def feed(self, byte_str):$/;"	m	class:EscCharSetProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def feed(self, byte_str):$/;"	m	class:EUCJPProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def feed(self, byte_str):$/;"	m	class:HebrewProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def feed(self, byte_str, num_bytes):$/;"	m	class:JapaneseContextAnalysis
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def feed(self, byte_str):$/;"	m	class:Latin1Prober
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def feed(self, byte_str):$/;"	m	class:MultiByteCharSetProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def feed(self, byte_str):$/;"	m	class:SingleByteCharSetProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def feed(self, byte_str):$/;"	m	class:SJISProber
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    def feed(self, byte_str):$/;"	m	class:UniversalDetector
feed	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def feed(self, byte_str):$/;"	m	class:UTF8Prober
feedkeys	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def feedkeys(keys, mode='n'):$/;"	f
fetch	plugged/coc.nvim/install.sh	/^fetch() {$/;"	f
fetch_github	plugged/javascript-libraries-syntax.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_local	plugged/javascript-libraries-syntax.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_snippets_from_dir	plugged/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	plugged/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
fetch_url	plugged/javascript-libraries-syntax.vim/Makefile	/^fetch_url = \\$/;"	m
fetchmail	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fetchmail": null,$/;"	z
fgl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fgl": null,$/;"	z
field	plugged/coc.nvim/data/schema.json	/^        "field": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	plugged/coc.nvim/data/schema.json	/^        "file": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	plugged/coc.nvim/plugin/coc.vim	/^  let file = $VIM."\/vimfiles\/coc-settings.json"$/;"	v
fileinfo	plugged/php.vim/attic/syntax.ini	/^fileinfo = no$/;"	k	section:extensions
filename	plugged/coc.nvim/webpack.config.js	/^    filename: 'index.js'$/;"	p	class:module.exports.output
filename	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def filename(self):$/;"	m	class:ParsingError
filename	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def filename(self, value):$/;"	m	class:ParsingError
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    filenames = []$/;"	v	class:Formatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    filenames = []$/;"	v	class:BBCodeFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    filenames = ['*.html', '*.htm']$/;"	v	class:HtmlFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    filenames = ['*.bmp']$/;"	v	class:BmpImageFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    filenames = ['*.gif']$/;"	v	class:GifImageFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    filenames = ['*.jpg']$/;"	v	class:JpgImageFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    filenames = ['*.png']$/;"	v	class:ImageFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    filenames = []$/;"	v	class:IRCFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    filenames = ['*.tex']$/;"	v	class:LatexFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    filenames = ['*.raw']$/;"	v	class:RawTokenFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    filenames = ['*.txt']$/;"	v	class:NullFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    filenames = ['*.rtf']$/;"	v	class:RtfFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    filenames = ['*.svg']$/;"	v	class:SvgFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    filenames = []$/;"	v	class:TerminalFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    filenames = []$/;"	v	class:Terminal256Formatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    filenames = []$/;"	v	class:TerminalTrueColorFormatter
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    filenames = []$/;"	v	class:Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScript3Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    filenames = ['*.as']$/;"	v	class:ActionScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    filenames = ['*.mxml']$/;"	v	class:MxmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    filenames = ['*.bc']$/;"	v	class:BCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    filenames = ['*.g', '*.gd', '*.gi', '*.gap']$/;"	v	class:GAPLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    filenames = ['*.mu']$/;"	v	class:MuPADLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    filenames = ['*.nb', '*.cdf', '*.nbp', '*.ma']$/;"	v	class:MathematicaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    filenames = ['*.at']$/;"	v	class:AmbientTalkLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^    filenames = ['*.run']$/;"	v	class:AmplLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^    filenames = ['*.apl']$/;"	v	class:APLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    filenames = ['*.adl', '*.adls', '*.adlf', '*.adlx']$/;"	v	class:AdlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    filenames = ['*.cadl']$/;"	v	class:CadlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    filenames = ['*.odin']$/;"	v	class:OdinLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.asm', '*.ASM', '*.tasm']$/;"	v	class:TasmLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.asm', '*.ASM']$/;"	v	class:NasmLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.c-objdump']$/;"	v	class:CObjdumpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.cpp-objdump', '*.c++-objdump', '*.cxx-objdump']$/;"	v	class:CppObjdumpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.d-objdump']$/;"	v	class:DObjdumpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.hsail']$/;"	v	class:HsailLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.ll']$/;"	v	class:LlvmLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.objdump']$/;"	v	class:ObjdumpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.objdump-intel']$/;"	v	class:NasmObjdumpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.s', '*.S']$/;"	v	class:GasLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    filenames = ['*.s']$/;"	v	class:Ca65Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    filenames = ['*.ahk', '*.ahkl']$/;"	v	class:AutohotkeyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    filenames = ['*.au3']$/;"	v	class:AutoItLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    filenames = ['*.BAS', '*.bas']$/;"	v	class:QBasicLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    filenames = ['*.bas']$/;"	v	class:CbmBasicV2Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    filenames = ['*.bb', '*.decls']$/;"	v	class:BlitzBasicLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    filenames = ['*.bmx']$/;"	v	class:BlitzMaxLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    filenames = ['*.monkey']$/;"	v	class:MonkeyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    filenames = ['*.bib']$/;"	v	class:BibTeXLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    filenames = ['*.bst']$/;"	v	class:BSTLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.abap', '*.ABAP']$/;"	v	class:ABAPLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.cbl', '*.CBL']$/;"	v	class:CobolFreeformatLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.cob', '*.COB', '*.cpy', '*.CPY']$/;"	v	class:CobolLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.gdc']$/;"	v	class:GoodDataCLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.maql']$/;"	v	class:MaqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    filenames = ['*.p', '*.cls']$/;"	v	class:OpenEdgeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    filenames = ['*.c', '*.h', '*.idc']$/;"	v	class:CLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    filenames = ['*.cpp', '*.hpp', '*.c++', '*.h++',$/;"	v	class:CppLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.clay']$/;"	v	class:ClayLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.cu', '*.cuh']$/;"	v	class:CudaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.ec', '*.eh']$/;"	v	class:ECLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.ino']$/;"	v	class:ArduinoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.mq4', '*.mq5', '*.mqh']$/;"	v	class:MqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.nc']$/;"	v	class:NesCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.pike', '*.pmod']$/;"	v	class:PikeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.swg', '*.i']$/;"	v	class:SwigLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    filenames = ['*.vala', '*.vapi']$/;"	v	class:ValaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^    filenames = ['*.capnp']$/;"	v	class:CapnProtoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^    filenames = ['*.chpl']$/;"	v	class:ChapelLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    filenames = ['*.icl', '*.dcl']$/;"	v	class:CleanLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.cf']$/;"	v	class:Cfengine3Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.ini', '*.cfg', '*.inf']$/;"	v	class:IniLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.pc']$/;"	v	class:PkgConfigLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.properties']$/;"	v	class:PropertiesLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.reg']$/;"	v	class:RegeditLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['*.tf']$/;"	v	class:TerraformLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['.htaccess', 'apache.conf', 'apache2.conf']$/;"	v	class:ApacheConfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['Dockerfile', '*.docker']$/;"	v	class:DockerLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['Kconfig', '*Config.in*', 'external.in*',$/;"	v	class:KconfigLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['nginx.conf']$/;"	v	class:NginxConfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['pacman.conf']$/;"	v	class:PacmanConfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['squid.conf']$/;"	v	class:SquidConfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['termcap', 'termcap.src']$/;"	v	class:TermcapLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = ['terminfo', 'terminfo.src']$/;"	v	class:TerminfoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    filenames = []$/;"	v	class:LighttpdConfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    filenames = ["*.pypylog"]$/;"	v	class:PyPyLogLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    filenames = []$/;"	v	class:VCTreeStatusLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    filenames = ['*.cr']$/;"	v	class:CrystalLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    filenames = ['*.csd']$/;"	v	class:CsoundDocumentLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    filenames = ['*.orc']$/;"	v	class:CsoundOrchestraLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    filenames = ['*.sco']$/;"	v	class:CsoundScoreLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    filenames = ['*.css']$/;"	v	class:CssLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    filenames = ['*.less']$/;"	v	class:LessCssLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    filenames = ['*.sass']$/;"	v	class:SassLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    filenames = ['*.scss']$/;"	v	class:ScssLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    filenames = ['*.croc']$/;"	v	class:CrocLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    filenames = ['*.d', '*.di']$/;"	v	class:DLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    filenames = []  # don't lex .md as MiniD, reserve for Markdown$/;"	v	class:MiniDLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    filenames = ['*.smali']$/;"	v	class:SmaliLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    filenames = ['*.json']$/;"	v	class:JsonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    filenames = ['*.jsonld']$/;"	v	class:JsonLdLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    filenames = ['*.yaml', '*.yml']$/;"	v	class:YamlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    filenames = []$/;"	v	class:JsonBareObjectLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    filenames = ['*.diff', '*.patch']$/;"	v	class:DiffLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    filenames = ['*.dpatch', '*.darcspatch']$/;"	v	class:DarcsPatchLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    filenames = ['*.wdiff']$/;"	v	class:WDiffLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:CSharpAspxLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.aspx', '*.asax', '*.ascx', '*.ashx', '*.asmx', '*.axd']$/;"	v	class:VbNetAspxLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.boo']$/;"	v	class:BooLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.cs']$/;"	v	class:CSharpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.fs', '*.fsi']$/;"	v	class:FSharpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.n']$/;"	v	class:NemerleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = ['*.vb', '*.bas']$/;"	v	class:VbNetLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    filenames = []$/;"	v	class:GenericAspxLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.als']$/;"	v	class:AlloyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.bro']$/;"	v	class:BroLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.crmsh', '*.pcmk']$/;"	v	class:CrmshLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.msc']$/;"	v	class:MscgenLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.pan']$/;"	v	class:PanLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.pp']$/;"	v	class:PuppetLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.proto']$/;"	v	class:ProtoBufLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.rpf']$/;"	v	class:VGLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.rsl']$/;"	v	class:RslLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.sbl']$/;"	v	class:SnowballLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = ['*.thrift']$/;"	v	class:ThriftLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    filenames = []$/;"	v	class:FlatlineLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    filenames = ['*.dylan', '*.dyl', '*.intr']$/;"	v	class:DylanLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    filenames = ['*.dylan-console']$/;"	v	class:DylanConsoleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    filenames = ['*.lid', '*.hdp']$/;"	v	class:DylanLidLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    filenames = ['*.ecl']$/;"	v	class:ECLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^    filenames = ['*.e']$/;"	v	class:EiffelLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    filenames = ['*.elm']$/;"	v	class:ElmLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    filenames = ['*.erl', '*.hrl', '*.es', '*.escript']$/;"	v	class:ErlangLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    filenames = ['*.erl-sh']$/;"	v	class:ErlangShellLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    filenames = ['*.ex', '*.exs']$/;"	v	class:ElixirLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.aheui']$/;"	v	class:AheuiLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.befunge']$/;"	v	class:BefungeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.bf', '*.b']$/;"	v	class:BrainfuckLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.camkes', '*.idl4']$/;"	v	class:CAmkESLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.cdl']$/;"	v	class:CapDLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    filenames = ['*.cw']$/;"	v	class:RedcodeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    filenames = ['*.n']$/;"	v	class:EzhilLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    filenames = ['*.factor']$/;"	v	class:FactorLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    filenames = ['*.fan']$/;"	v	class:FantomLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    filenames = ['*.flx', '*.flxh']$/;"	v	class:FelixLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    filenames = ['*.frt', '*.fs']$/;"	v	class:ForthLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    filenames = ['*.f', '*.F']$/;"	v	class:FortranFixedLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    filenames = ['*.f03', '*.f90', '*.F03', '*.F90']$/;"	v	class:FortranLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    filenames = ['*.PRG', '*.prg']$/;"	v	class:FoxProLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    filenames = ['*.go']$/;"	v	class:GoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    filenames = ['*.abnf']$/;"	v	class:AbnfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    filenames = ['*.bnf']$/;"	v	class:BnfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    filenames = ['*.jsgf']$/;"	v	class:JsgfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^    filenames = ['*.cyp', '*.cypher']$/;"	v	class:CypherLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    filenames = ['*.asy']$/;"	v	class:AsymptoteLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    filenames = ['*.plot', '*.plt']$/;"	v	class:GnuplotLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    filenames = ['*.pov', '*.inc']$/;"	v	class:PovrayLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    filenames = ['*.ps', '*.eps']$/;"	v	class:PostScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    filenames = ['*.vert', '*.frag', '*.geo']$/;"	v	class:GLShaderLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.agda']$/;"	v	class:AgdaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.cry']$/;"	v	class:CryptolLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.hs']$/;"	v	class:HaskellLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.idr']$/;"	v	class:IdrisLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.kk', '*.kki']$/;"	v	class:KokaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.lagda']$/;"	v	class:LiterateAgdaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.lcry']$/;"	v	class:LiterateCryptolLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.lhs']$/;"	v	class:LiterateHaskellLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    filenames = ['*.lidr']$/;"	v	class:LiterateIdrisLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    filenames = ['*.hx', '*.hxsl']$/;"	v	class:HaxeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    filenames = ['*.hxml']$/;"	v	class:HxmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    filenames = ['*.sv', '*.svh']$/;"	v	class:SystemVerilogLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    filenames = ['*.v']$/;"	v	class:VerilogLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    filenames = ['*.vhdl', '*.vhd']$/;"	v	class:VhdlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.dtd']$/;"	v	class:DtdLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.haml']$/;"	v	class:HamlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.html', '*.htm', '*.xhtml', '*.xslt']$/;"	v	class:HtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.pug', '*.jade']$/;"	v	class:PugLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.scaml']$/;"	v	class:ScamlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.xml', '*.xsl', '*.rss', '*.xslt', '*.xsd',$/;"	v	class:XmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    filenames = ['*.xsl', '*.xslt', '*.xpl']  # xpl is XProc$/;"	v	class:XsltLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    filenames = ['*.pro']$/;"	v	class:IDLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    filenames = ['*.ipf']$/;"	v	class:IgorLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    filenames = ['*.b']$/;"	v	class:LimboLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    filenames = ['*.nsi', '*.nsh']$/;"	v	class:NSISLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    filenames = ['*.spec']$/;"	v	class:RPMSpecLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    filenames = ['control']$/;"	v	class:DebianControlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    filenames = ['sources.list']$/;"	v	class:SourcesListLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    filenames = ['*.i6t']$/;"	v	class:Inform6TemplateLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    filenames = ['*.inf']$/;"	v	class:Inform6Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    filenames = ['*.ni', '*.i7x']$/;"	v	class:Inform7Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    filenames = ['*.t']$/;"	v	class:Tads3Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^    filenames = ['*.io']$/;"	v	class:IoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    filenames = ['*.ijs']$/;"	v	class:JLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.coffee']$/;"	v	class:CoffeeScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.dart']$/;"	v	class:DartLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.eg']$/;"	v	class:EarlGreyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.j']$/;"	v	class:ObjectiveJLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.js', '*.jsm', '*.mjs']$/;"	v	class:JavascriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.juttle']$/;"	v	class:JuttleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.kal']$/;"	v	class:KalLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.lasso', '*.lasso[89]']$/;"	v	class:LassoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.ls']$/;"	v	class:LiveScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.mask']$/;"	v	class:MaskLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    filenames = ['*.ts', '*.tsx']$/;"	v	class:TypeScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    filenames = ['*.jl']$/;"	v	class:JuliaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.aj']$/;"	v	class:AspectJLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.ceylon']$/;"	v	class:CeylonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.clj']$/;"	v	class:ClojureLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.cljs']$/;"	v	class:ClojureScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.golo']$/;"	v	class:GoloLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.groovy','*.gradle']$/;"	v	class:GroovyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.gs', '*.gsx', '*.gsp', '*.vark']$/;"	v	class:GosuLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.gst']$/;"	v	class:GosuTemplateLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.ik']$/;"	v	class:IokeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.j']$/;"	v	class:JasminLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.java']$/;"	v	class:JavaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.kt']$/;"	v	class:KotlinLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.pig']$/;"	v	class:PigLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.scala']$/;"	v	class:ScalaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    filenames = ['*.xtend']$/;"	v	class:XtendLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.cl', '*.lisp']$/;"	v	class:CommonLispLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.cpsa']$/;"	v	class:CPSALexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.el']$/;"	v	class:EmacsLispLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.hy']$/;"	v	class:HyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.lsp', '*.nl', '*.kif']$/;"	v	class:NewLispLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.rkt', '*.rktd', '*.rktl']$/;"	v	class:RacketLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.scm', '*.ss']$/;"	v	class:SchemeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.shen']$/;"	v	class:ShenLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    filenames = ['*.xtm']$/;"	v	class:XtlangLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    filenames = ['*.cmake', 'CMakeLists.txt']$/;"	v	class:CMakeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    filenames = ['*.mak', '*.mk', 'Makefile', 'makefile', 'Makefile.*', 'GNUmakefile']$/;"	v	class:MakefileLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    filenames = []$/;"	v	class:BaseMakefileLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.[1234567]', '*.man']$/;"	v	class:GroffLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.css.in']$/;"	v	class:MozPreprocCssLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.js.in']$/;"	v	class:MozPreprocJavascriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.md']$/;"	v	class:MarkdownLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.rst', '*.rest']$/;"	v	class:RstLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.tex', '*.aux', '*.toc']$/;"	v	class:TexLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = ['*.xul.in']$/;"	v	class:MozPreprocXulLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MoinWikiLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocHashLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    filenames = []$/;"	v	class:MozPreprocPercentLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:MatlabLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    filenames = ['*.m']$/;"	v	class:OctaveLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    filenames = ['*.sci', '*.sce', '*.tst']$/;"	v	class:ScilabLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    filenames = ['*.ml', '*.mli', '*.mll', '*.mly']$/;"	v	class:OcamlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    filenames = ['*.opa']$/;"	v	class:OpaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    filenames = ['*.sml', '*.sig', '*.fun']$/;"	v	class:SMLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    filenames = ['*.bug']$/;"	v	class:BugsLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    filenames = ['*.jag', '*.bug']$/;"	v	class:JagsLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    filenames = ['*.mo']$/;"	v	class:ModelicaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    filenames = ['*.stan']$/;"	v	class:StanLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    filenames = ['*.def', '*.mod']$/;"	v	class:Modula2Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^    filenames = ['*.mt']$/;"	v	class:MonteLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    filenames = ['*.ncl']$/;"	v	class:NCLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    filenames = ['*.nim', '*.nimrod']$/;"	v	class:NimrodLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^    filenames = ['*.nit']$/;"	v	class:NitLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    filenames = ['*.nix']$/;"	v	class:NixLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    filenames = ['*.cp', '*.cps']$/;"	v	class:ComponentPascalLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    filenames = ['*.m', '*.h']$/;"	v	class:ObjectiveCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    filenames = ['*.mm', '*.hh']$/;"	v	class:ObjectiveCppLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    filenames = ['*.swift']$/;"	v	class:SwiftLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    filenames = ['*.x', '*.xi', '*.xm', '*.xmi']$/;"	v	class:LogosLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^    filenames = ['*.ooc']$/;"	v	class:OocLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    filenames = ['*.psi', '*.psl']$/;"	v	class:ParaSailLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrActionScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCSharpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrCppLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrJavaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrObjectiveCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPerlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrPythonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.G', '*.g']$/;"	v	class:AntlrRubyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.ebnf']$/;"	v	class:EbnfLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelCppLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelDLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelEmbeddedLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelJavaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelObjectiveCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.rl']$/;"	v	class:RagelRubyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = ['*.treetop', '*.tt']$/;"	v	class:TreetopLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:AntlrLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    filenames = []$/;"	v	class:RagelLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    filenames = ['*.adb', '*.ads', '*.ada']$/;"	v	class:AdaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    filenames = ['*.pas', '*.dpr']$/;"	v	class:DelphiLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    filenames = ['*.p', '*.pwn', '*.inc']$/;"	v	class:PawnLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    filenames = ['*.sp']$/;"	v	class:SourcePawnLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.nqp', '*.p6', '*.6pl', '*.p6l', '*.pl6',$/;"	v	class:Perl6Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    filenames = ['*.pl', '*.pm', '*.t']$/;"	v	class:PerlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    filenames = ['*.php', '*.php[345]', '*.inc']$/;"	v	class:PhpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    filenames = ['*.zep']$/;"	v	class:ZephirLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    filenames = ['*.praat', '*.proc', '*.psc']$/;"	v	class:PraatLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    filenames = ['*.ecl', '*.prolog', '*.pro', '*.pl']$/;"	v	class:PrologLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    filenames = ['*.lgt', '*.logtalk']$/;"	v	class:LogtalkLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = ['*.dg']$/;"	v	class:DgLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = ['*.py', '*.pyw', '*.sc', 'SConstruct', 'SConscript', '*.tac', '*.sage']$/;"	v	class:PythonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = ['*.py3tb']$/;"	v	class:Python3TracebackLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = ['*.pytb']$/;"	v	class:PythonTracebackLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = ['*.pyx', '*.pxd', '*.pxi']$/;"	v	class:CythonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = []  # Nothing until Python 3 gets widespread$/;"	v	class:Python3Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    filenames = []$/;"	v	class:NumPyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^    filenames = ['*.qvto']$/;"	v	class:QVToLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    filenames = ['*.Rd']$/;"	v	class:RdLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    filenames = ['*.Rout']$/;"	v	class:RConsoleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    filenames = ['*.S', '*.R', '.Rhistory', '.Rprofile', '.Renviron']$/;"	v	class:SLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    filenames = ['*.rq', '*.sparql']$/;"	v	class:SparqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    filenames = ['*.ttl']$/;"	v	class:TurtleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    filenames = ['*.r', '*.r3', '*.reb']$/;"	v	class:RebolLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    filenames = ['*.red', '*.reds']$/;"	v	class:RedLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    filenames = ['*.txt']$/;"	v	class:ResourceLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^    filenames = ['*.rnc']$/;"	v	class:RNCCompactLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    filenames = ['*.graph']$/;"	v	class:RoboconfGraphLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    filenames = ['*.instances']$/;"	v	class:RoboconfInstancesLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    filenames = ['*.txt', '*.robot']$/;"	v	class:RobotFrameworkLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    filenames = ['*.fy', '*.fancypack']$/;"	v	class:FancyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    filenames = ['*.rb', '*.rbw', 'Rakefile', '*.rake', '*.gemspec',$/;"	v	class:RubyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    filenames = ['*.rs', '*.rs.in']$/;"	v	class:RustLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    filenames = ['*.SAS', '*.sas']$/;"	v	class:SASLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ["*.moon"]$/;"	v	class:MoonScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.applescript']$/;"	v	class:AppleScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.chai']$/;"	v	class:ChaiscriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.ezt', '*.mac']$/;"	v	class:EasytrieveLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.hy', '*.hyb']$/;"	v	class:HybrisLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.jcl']$/;"	v	class:JclLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.lsl']$/;"	v	class:LSLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.lua', '*.wlua']$/;"	v	class:LuaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.moo']$/;"	v	class:MOOCodeLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    filenames = ['*.rexx', '*.rex', '*.rx', '*.arexx']$/;"	v	class:RexxLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.bat', '*.cmd']$/;"	v	class:BatchLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.fish', '*.load']$/;"	v	class:FishShellLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.ps1', '*.psm1']$/;"	v	class:PowerShellLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.sh', '*.ksh', '*.bash', '*.ebuild', '*.eclass',$/;"	v	class:BashLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.sh-session', '*.shell-session']$/;"	v	class:BashSessionLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = ['*.tcsh', '*.csh']$/;"	v	class:TcshLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = []$/;"	v	class:MSDOSSessionLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = []$/;"	v	class:PowerShellSessionLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    filenames = []$/;"	v	class:TcshSessionLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    filenames = ['*.ns2']$/;"	v	class:NewspeakLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    filenames = ['*.st']$/;"	v	class:SmalltalkLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^    filenames = ['*.smv']$/;"	v	class:NuSMVLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^    filenames = ['*.snobol']$/;"	v	class:SnobolLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    filenames = ['*.txt']$/;"	v	class:TextLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    filenames = []$/;"	v	class:RawTokenLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    filenames = ['*.rql']$/;"	v	class:RqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    filenames = ['*.sql']$/;"	v	class:SqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    filenames = ['*.sql']$/;"	v	class:TransactSqlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    filenames = ['*.sqlite3-console']$/;"	v	class:SqliteConsoleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^    filenames = ['*.do', '*.ado']$/;"	v	class:StataLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    filenames = ['*.sc', '*.scd']$/;"	v	class:SuperColliderLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    filenames = ['*.tcl', '*.rvt']$/;"	v	class:TclLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.cfc']$/;"	v	class:ColdfusionCFCLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.cfm', '*.cfml']$/;"	v	class:ColdfusionHtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.evoque']$/;"	v	class:EvoqueLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.handlebars', '*.hbs']$/;"	v	class:HandlebarsHtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.html']$/;"	v	class:EvoqueHtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.jsp']$/;"	v	class:JspLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.kid']$/;"	v	class:GenshiLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.liquid']$/;"	v	class:LiquidLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.m', '*.mhtml', '*.mc', '*.mi', 'autohandler', 'dhandler']$/;"	v	class:MasonLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.mao']$/;"	v	class:MakoLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.myt', 'autodelegate']$/;"	v	class:MyghtyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.ng2']$/;"	v	class:Angular2HtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.phtml']$/;"	v	class:HtmlPhpLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.rhtml']$/;"	v	class:RhtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.sls']$/;"	v	class:YamlJinjaLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.ssp']$/;"	v	class:SspLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.tea']$/;"	v	class:TeaTemplateLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.tmpl', '*.spt']$/;"	v	class:CheetahLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.tpl']$/;"	v	class:SmartyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.twig']$/;"	v	class:TwigHtmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.vm', '*.fhtml']$/;"	v	class:VelocityLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = ['*.xml']$/;"	v	class:EvoqueXmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    filenames = []$/;"	v	class:ColdfusionMarkupLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    filenames = ['*.feature']$/;"	v	class:GherkinLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    filenames = ['*.tap']$/;"	v	class:TAPLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    filenames = ['*.awk']$/;"	v	class:AwkLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    filenames = ['*.vim', '.vimrc', '.exrc', '.gvimrc',$/;"	v	class:VimLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    filenames = ['*.pot', '*.po']$/;"	v	class:GettextLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    filenames = ['*.weechatlog']$/;"	v	class:IrcLogsLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    filenames = ['todo.txt', '*.todotxt']$/;"	v	class:TodotxtLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    filenames = ['*.lean']$/;"	v	class:LeanLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    filenames = ['*.thy']$/;"	v	class:IsabelleLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    filenames = ['*.v']$/;"	v	class:CoqLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^    filenames = ['*.rts']$/;"	v	class:RtsLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    filenames = ['*.ts', '*.txt']$/;"	v	class:TypoScriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    filenames = ['*.u']$/;"	v	class:UrbiscriptLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    filenames = ['*.vcl']$/;"	v	class:VCLLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    filenames = []$/;"	v	class:VCLSnippetLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    filenames = ['*.bpl']$/;"	v	class:BoogieLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    filenames = ['*.sil', '*.vpr']$/;"	v	class:SilverLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    filenames = ['*.cirru']$/;"	v	class:CirruLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    filenames = ['*.duel', '*.jbst']$/;"	v	class:DuelLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    filenames = ['*.qml', '*.qbs']$/;"	v	class:QmlLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    filenames = ['*.slim']$/;"	v	class:SlimLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    filenames = ['*.xqy', '*.xquery', '*.xq', '*.xql', '*.xqm']$/;"	v	class:XQueryLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^    filenames = ['*.whiley']$/;"	v	class:WhileyLexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    filenames = ['*.x10']$/;"	v	class:X10Lexer
filenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^    filenames = ['xorg.conf']$/;"	v	class:XorgLexer
fileno	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def fileno(self):$/;"	m	class:WrappedSocket
fileno	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def fileno(self):$/;"	m	class:WrappedSocket
fileno	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def fileno(self):$/;"	m	class:HTTPResponse
fileno	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def fileno(self):$/;"	m	class:EpollSelector
fileno	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def fileno(self):$/;"	m	class:KqueueSelector
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:Autotrigger_CanMatchContext
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_PriorityKeyword
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_ReportError
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_SnippetPriority
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ContextSnippets_UseContext
files	plugged/ultisnips/test/test_Format.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_ClearAll
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_ClearOne
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_ClearTwo
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_Global_Local_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_Global_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_MissingEndSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:ParseSnippets_UnknownDirective
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:_ParseSnippets_MultiWord
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:_ParseSnippets_MultiWord_RE
files	plugged/ultisnips/test/test_Recursive.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_Disabled
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_Interpolation
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_InterpolationWithSystem
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_Issue658
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_MultiMatches
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_NoNestedTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_SimpleSnippet
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_TestMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_TestNoBraceTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_.snippets': """$/;"	v	class:snipMate_Visual_Simple
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/_\/blub.snippets': """$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/a.snippets': """$/;"	v	class:snipMate_Extends
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = { 'snippets\/blubi.snippets': """$/;"	v	class:snipMate_OtherFiletype
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanModifyParentBody
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_EnsureIndent
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_MoveVisual
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	plugged/ultisnips/test/test_TabStop.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	plugged/ultisnips/test/test_TabStop.py	/^    files = { 'us\/all.snippets': r"""$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {$/;"	o	object:definitions.languageServerBase.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerCommand.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerModule.properties
filetypes	plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerSocket.properties
filetypes	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
filter	plugged/php.vim/attic/syntax.ini	/^filter = no$/;"	k	section:extensions
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:Filter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    def filter(self, lexer, stream):$/;"	m	class:FunctionFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:CodeTagFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:GobbleFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:KeywordCaseFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:NameHighlightFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:RaiseOnErrorTokenFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:TokenMergeFilter
filter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def filter(self, lexer, stream):$/;"	m	class:VisibleWhitespaceFilter
filter-vader-output	plugged/ale/test/script/run-vader-tests	/^function filter-vader-output() {$/;"	f
filter_high_byte_only	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def filter_high_byte_only(buf):$/;"	m	class:CharSetProber
filter_international_words	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def filter_international_words(buf):$/;"	m	class:CharSetProber
filter_with_english_letters	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def filter_with_english_letters(buf):$/;"	m	class:CharSetProber
final_argument_whitespace	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    final_argument_whitespace = False$/;"	v	class:PygmentsDoc
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
find-up	plugged/coc.nvim/package.json	/^    "find-up": "^3.0.0",$/;"	s	object:dependencies
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft):$/;"	f
find_filter_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^def find_filter_class(filtername):$/;"	f
find_formatter_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def find_formatter_class(alias):$/;"	f
find_lexer_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def find_lexer_class(name):$/;"	f
find_lexer_class_by_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def find_lexer_class_by_name(_alias):$/;"	f
find_lexer_class_for_filename	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def find_lexer_class_for_filename(_fn, code=None):$/;"	f
find_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def find_module(self, fullname, path=None):$/;"	m	class:_SixMetaPathImporter
find_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def find_module(self, fullname, path=None):$/;"	m	class:_SixMetaPathImporter
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_plugin_filters	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^def find_plugin_filters():$/;"	f
find_plugin_formatters	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^def find_plugin_formatters():$/;"	f
find_plugin_lexers	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^def find_plugin_lexers():$/;"	f
find_plugin_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^def find_plugin_styles():$/;"	f
find_project_file	plugged/vim-wakatime/packages/wakatime/utils.py	/^def find_project_file(path):$/;"	f
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory):$/;"	f
first_sunday_on_or_after	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^def first_sunday_on_or_after(dt):$/;"	f
fixed	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    fixed        = css(elem, "position") == "fixed";$/;"	v
fixup	plugged/ultisnips/utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f	function:unescape	file:
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    flags = re.MULTILINE$/;"	v	class:RegexLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ActionScript3Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    flags = re.DOTALL$/;"	v	class:ActionScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:MxmlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AmbientTalkLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:NasmLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:TasmLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    flags = re.IGNORECASE$/;"	v	class:Ca65Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    flags = re.IGNORECASE$/;"	v	class:CbmBasicV2Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzBasicLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BlitzMaxLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    flags = re.MULTILINE$/;"	v	class:MonkeyLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:BSTLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    flags = re.IGNORECASE$/;"	v	class:BibTeXLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ABAPLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolFreeformatLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CobolLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:GoodDataCLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    flags = re.IGNORECASE$/;"	v	class:MaqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:CapnProtoLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    flags = 0$/;"	v	class:KconfigLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:DockerLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    flags = re.IGNORECASE$/;"	v	class:SquidConfLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ApacheConfLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:CrystalLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:ScssLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:SassLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    flags = re.DOTALL$/;"	v	class:JsonLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:WDiffLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    flags = re.DOTALL$/;"	v	class:GenericAspxLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:CSharpLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:NemerleLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VbNetLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL | re.IGNORECASE$/;"	v	class:VGLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AlloyLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:RslLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    flags = re.IGNORECASE$/;"	v	class:DylanLidLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ECLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:EzhilLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:FactorLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:ForthLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FortranLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    flags = re.IGNORECASE$/;"	v	class:FortranFixedLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:FoxProLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:GoLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:JsgfLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:CypherLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:HaskellLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:HaxeLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:VhdlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.IGNORECASE | re.DOTALL$/;"	v	class:HtmlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:HamlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:PugLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.IGNORECASE$/;"	v	class:ScamlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:XmlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DtdLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IDLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:IgorLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    flags = re.IGNORECASE$/;"	v	class:NSISLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:Tads3Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform6Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Inform7Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ObjectiveJLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:TypeScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.UNICODE | re.MULTILINE$/;"	v	class:JavascriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL | re.UNICODE | re.MULTILINE$/;"	v	class:JuttleLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:CoffeeScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:KalLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.DOTALL$/;"	v	class:LiveScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:LassoLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:DartLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.DOTALL$/;"	v	class:MaskLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:JuliaLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:JavaLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:KotlinLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:CeylonLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GosuLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:GroovyLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:ScalaLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:TeaLangLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:XtendLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:PigLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE | re.UNICODE$/;"	v	class:NewLispLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:CommonLispLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    flags = re.MULTILINE$/;"	v	class:EmacsLispLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:MoinWikiLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    flags = re.MULTILINE$/;"	v	class:MarkdownLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    flags = re.MULTILINE$/;"	v	class:RstLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ModelicaLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:Modula2Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    flags = re.MULTILINE$/;"	v	class:NCLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    flags = re.MULTILINE | re.IGNORECASE | re.UNICODE$/;"	v	class:NimrodLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:NixLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:ComponentPascalLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    flags = re.MULTILINE$/;"	v	class:ParaSailLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:AdaLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:PerlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    flags = re.MULTILINE | re.DOTALL | re.UNICODE$/;"	v	class:Perl6Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ZephirLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    flags = re.IGNORECASE | re.DOTALL | re.MULTILINE$/;"	v	class:PhpLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    flags = re.UNICODE | re.MULTILINE$/;"	v	class:PrologLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:Python3Lexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    flags = re.IGNORECASE$/;"	v	class:TurtleLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RebolLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RedLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:ResourceLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RoboconfGraphLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    flags = re.IGNORECASE | re.MULTILINE$/;"	v	class:RoboconfInstancesLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:RubyLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    flags     = re.IGNORECASE | re.MULTILINE$/;"	v	class:SASLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = 0$/;"	v	class:EasytrieveLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:ChaiscriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.IGNORECASE$/;"	v	class:JclLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.IGNORECASE$/;"	v	class:RexxLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:AppleScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:HybrisLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    flags = re.MULTILINE$/;"	v	class:LSLLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    flags = re.DOTALL | re.IGNORECASE | re.MULTILINE$/;"	v	class:PowerShellLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    flags = re.MULTILINE | re.IGNORECASE$/;"	v	class:BatchLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE | re.UNICODE$/;"	v	class:TransactSqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:MySqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PlPgsqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PostgresLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:PsqlRegexLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:RqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    flags = re.IGNORECASE$/;"	v	class:SqlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:SuperColliderLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:EvoqueLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.DOTALL$/;"	v	class:GenshiMarkupLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.IGNORECASE$/;"	v	class:ColdfusionLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:DjangoLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.M | re.S$/;"	v	class:TwigLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:SmartyLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    flags = re.MULTILINE | re.DOTALL$/;"	v	class:VelocityLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    flags = re.MULTILINE$/;"	v	class:VimLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    flags = re.DOTALL$/;"	v	class:HttpLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    flags = re.VERBOSE | re.MULTILINE$/;"	v	class:IrcLogsLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    flags = re.MULTILINE | re.UNICODE$/;"	v	class:LeanLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:TypoScriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    flags = re.DOTALL$/;"	v	class:UrbiscriptLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE | re.UNICODE$/;"	v	class:XQueryLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    flags = re.DOTALL | re.MULTILINE$/;"	v	class:QmlLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    flags = re.DOTALL$/;"	v	class:DuelLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    flags = re.IGNORECASE$/;"	v	class:SlimLexer
flags	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    flags = re.MULTILINE$/;"	v	class:CirruLexer
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f
flexwiki	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "flexwiki": null,$/;"	z
float	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    float = r'((\\d+\\.)|(\\d*\\.\\d+))[eE][+-]?\\d+'$/;"	v	class:HsailLexer
floatn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    floatn = decn + r'\\.e?' + decn$/;"	v	class:NasmLexer
floatn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    floatn = decn + r'\\.e?' + decn$/;"	v	class:TasmLexer
floatstr	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^        def floatstr(o, allow_nan=self.allow_nan, ignore_nan=self.ignore_nan,$/;"	f	member:JSONEncoder.iterencode	file:
flowControl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    flowControl = ($/;"	v	class:IgorLexer
flush	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^            def flush():$/;"	f	member:RawTokenFormatter.format	file:
flush	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def flush(self):$/;"	m	class:HTTPResponse
flush_accumulator	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^flush_accumulator(JSON_Accu *acc)$/;"	f	typeref:typename:int	file:
fn	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
fn	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	jQuery.fn[ name ] = function( selector ) {$/;"	f	function:jQuery
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
focexec	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "focexec": null,$/;"	z
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
folder	plugged/coc.nvim/data/schema.json	/^        "folder": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
folder	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^    def folder(self):$/;"	m	class:BaseProject
folder	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def folder(self):$/;"	m	class:Git
folder	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^    def folder(self):$/;"	m	class:Mercurial
folder	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def folder(self):$/;"	m	class:Subversion
foldmarker	plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
foo	plugged/vim-blade/test.blade.php	/^<?php if($foo='bar' ) { $something() } ?>$/;"	v
foo.bar	plugged/coc.nvim/src/__tests__/modules/settings.json	/^  "foo.bar": 1,$/;"	n
footer	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    footer = content[content.find("if __name__ == '__main__':"):]$/;"	v
footer	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^    footer = content[content.find("def combine("):]$/;"	v
for_json	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int for_json;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
forceConsistentCasingInFileNames	plugged/coc.nvim/tsconfig.json	/^    "forceConsistentCasingInFileNames": true,$/;"	b	object:compilerOptions
form	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "form": null,$/;"	z
format	plugged/vim-wakatime/packages/wakatime/logger.py	/^    def format(self, record, *args):$/;"	m	class:JsonFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def format(tuple_size):$/;"	f	member:HelpFormatter._metavar_formatter	file:
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^def format(tokens, formatter, outfile=None):  # pylint: disable=redefined-builtin$/;"	f
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Formatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def format(self, tokensource, outfile):$/;"	m	class:ImageFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:NullFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:RawTokenFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TestcaseFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    def format(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def format(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
format_file_path	plugged/vim-wakatime/packages/wakatime/utils.py	/^def format_file_path(filepath):$/;"	f
format_header_param	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^def format_header_param(name, value):$/;"	f
format_help	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def format_help(self):$/;"	m	class:HelpFormatter._Section
format_help	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def format_help(self):$/;"	m	class:ArgumentParser
format_help	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def format_help(self):$/;"	m	class:HelpFormatter
format_lines	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def format_lines(var_name, seq, raw=False, indent_level=0):$/;"	f
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:BBCodeFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:HtmlFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:IRCFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:LatexFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:RtfFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:SvgFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:TerminalFormatter
format_unencoded	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def format_unencoded(self, tokensource, outfile):$/;"	m	class:Terminal256Formatter
format_usage	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def format_usage(self):$/;"	m	class:ArgumentParser
format_version	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def format_version(self):$/;"	m	class:ArgumentParser
formatter	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^                    formatter = getattr(module, formatter_name)$/;"	v
forth	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "forth": null,$/;"	z
fortran	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "fortran": "Fortran",$/;"	s
fortran	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fortran": null,$/;"	z
found_formatters	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^    found_formatters = []$/;"	v
found_lexers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^    found_lexers = []$/;"	v
foxpro	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "foxpro": null,$/;"	z
frac_part	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    frac_part = r'\\.\\d+'$/;"	v	class:JsonLexer
framescript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "framescript": null,$/;"	z
frameworkHeadersDir	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^        frameworkHeadersDir = FRAMEWORKS_PATH + framework + '\/Headers\/'$/;"	v
frameworks	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^    frameworks = os.listdir(FRAMEWORKS_PATH)$/;"	v
freebasic	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "freebasic": null,$/;"	z
friendly_name	plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
from_float	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def from_float(cls, timeout):$/;"	m	class:Timeout
from_httplib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def from_httplib(cls, message):  # Python 2$/;"	m	class:HTTPHeaderDict
from_httplib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def from_httplib(ResponseCls, r, **response_kw):$/;"	m	class:HTTPResponse
from_int	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def from_int(cls, retries, redirect=True, default=None):$/;"	m	class:Retry
from_key_val_list	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def from_key_val_list(value):$/;"	f
from_none	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^def from_none(exc):$/;"	f
from_string	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def from_string(self, data):$/;"	m	class:TargetInfo
from_tuples	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def from_tuples(cls, fieldname, value):$/;"	m	class:RequestField
fromhex	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    def fromhex(s):$/;"	f
fromkeys	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def fromkeys(cls, iterable, *args):$/;"	m	class:_ChainMap
fromkeys	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromkeys	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def fromkeys(cls, iterable, value=None):$/;"	m	class:OrderedDict
fromutc	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def fromutc(self, dt):$/;"	m	class:UTC
fromutc	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:DstTzInfo
fromutc	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def fromutc(self, dt):$/;"	m	class:StaticTzInfo
fs	plugged/coc.nvim/bin/tsserverForkStart.js	/^let fs = require('fs');$/;"	v
fsWriteSyncBuffer	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let fsWriteSyncBuffer = function (\/\/ tslint:disable-line$/;"	f
fsWriteSyncString	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let fsWriteSyncString = function (\/\/ tslint:disable-line$/;"	f
fstab	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fstab": null,$/;"	z
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
ftp	plugged/php.vim/attic/syntax.ini	/^ftp = no$/;"	k	section:extensions
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#BufReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#CommonDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(base, ...) abort$/;"	f
fugitive#Config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FileReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GitVersion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#Head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#MapCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#Object	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Path	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(base, ...) abort$/;"	f
fugitive#Prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#Real	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RevParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#SourceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#buffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_folding	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_folding$/;"	a
fugitive_merge	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_merge$/;"	a
fugitive_remove	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	plugged/coc.nvim/data/schema.json	/^        "function": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
function	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^    function = None$/;"	v	class:FunctionFilter
function_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    function_kw = ($/;"	v	class:OctaveLexer
function_qualifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    function_qualifiers = set(('__device__', '__global__', '__host__',$/;"	v	class:CudaLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    functions = """\\$/;"	v	class:AutoItLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    functions = ($/;"	v	class:QBasicLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    functions = set(($/;"	v	class:ArduinoLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    functions = set(('__threadfence_block', '__threadfence', '__threadfence_system',$/;"	v	class:CudaLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    functions = set(($/;"	v	class:DylanLexer
functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    functions = ($/;"	v	class:IgorLexer
functions_array	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    functions_array = ($/;"	v	class:PraatLexer
functions_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^functions_kw = ($/;"	v
functions_numeric	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    functions_numeric = ($/;"	v	class:PraatLexer
functions_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    functions_string = ($/;"	v	class:PraatLexer
fvwm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fvwm": null,$/;"	z
fvwm2m4	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "fvwm2m4": null,$/;"	z
fx	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fx.prototype = {$/;"	c	class:jQuery
g:	plugged/ale/autoload/ale.vim	/^        let g:[l:full_name] = a:default$/;"	v
g:	plugged/emmet-vim/unittest.vim	/^            let g:[opt] = oldoptions[opt]$/;"	v
g:	plugged/emmet-vim/unittest.vim	/^          let g:[opt] = options[opt]$/;"	v
g:	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeInvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	config/03.remaps.vim	/^let g:UltiSnipsExpandTrigger="<c-j>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	config/03.remaps.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	config/03.remaps.vim	/^let g:UltiSnipsJumpForwardTrigger="<tab>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsSnippetsDir	config/02.general.vim	/^let g:UltiSnipsSnippetsDir="~\/.config\/nvim\/plugged\/snippets\/UltiSnips"$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:__ale_c_project_filenames	plugged/ale/autoload/ale/c.vim	/^let g:__ale_c_project_filenames = ['.git\/HEAD', 'configure', 'Makefile', 'CMakeLists.txt']$/;"	v
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":py "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python3 "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:_uspy=":py3 "$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = 'default'$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = g:airline#extensions#tabline#formatter$/;"	v
g:ack_apply_lmappings	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_apply_lmappings = !exists("g:ack_lhandler")$/;"	v
g:ack_apply_qmappings	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_apply_qmappings = !exists("g:ack_qhandler")$/;"	v
g:ack_autoclose	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_autoclose = 0$/;"	v
g:ack_autofold_results	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_autofold_results = 0$/;"	v
g:ack_default_options	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_default_options = " -s -H --nopager --nocolor --nogroup --column"$/;"	v
g:ack_lhandler	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_lhandler = "botright lopen"$/;"	v
g:ack_mappings	plugged/ack.vim/autoload/ack.vim	/^  let g:ack_mappings.q = l:closemap$/;"	v
g:ack_mappings	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = extend(s:ack_mappings, g:ack_mappings)$/;"	v
g:ack_mappings	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = s:ack_mappings$/;"	v
g:ack_qhandler	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_qhandler = "botright copen"$/;"	v
g:ack_use_cword_for_empty_search	plugged/ack.vim/plugin/ack.vim	/^  let g:ack_use_cword_for_empty_search = 1$/;"	v
g:ack_use_dispatch	plugged/ack.vim/autoload/ack.vim	/^    let g:ack_use_dispatch = 0$/;"	v
g:ack_use_dispatch	plugged/ack.vim/autoload/ack.vim	/^  let g:ack_use_dispatch = 0$/;"	v
g:ackhighlight	config/02.general.vim	/^let g:ackhighlight = 1$/;"	v
g:ackhighlight	plugged/ack.vim/plugin/ack.vim	/^  let g:ackhighlight = 0$/;"	v
g:ackprg	config/02.general.vim	/^let g:ackprg = 'ag --vimgrep --smart-case'                                                   $/;"	v
g:ackprg	plugged/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack"$/;"	v
g:ackprg	plugged/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack-grep"$/;"	v
g:ackprg	plugged/ack.vim/plugin/ack.vim	/^  let g:ackprg .= g:ack_default_options$/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette = {}$/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.inactive = airline#themes#generate_color_map(s:IAMain, s:IARig/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.insert = airline#themes#generate_color_map(s:IMain, s:IRight, /;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.normal = airline#themes#generate_color_map(s:NMain, s:NRight, /;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.replace = airline#themes#generate_color_map(s:RMain, s:RRight,/;"	v
g:airline#themes#nord#palette	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let g:airline#themes#nord#palette.visual = airline#themes#generate_color_map(s:VMain, s:VRight, /;"	v
g:ale#util#error_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#error_priority = 5$/;"	v
g:ale#util#info_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#info_priority = 3$/;"	v
g:ale#util#nul_file	plugged/ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	plugged/ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale#util#style_error_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#style_error_priority = 2$/;"	v
g:ale#util#style_warning_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#style_warning_priority = 1$/;"	v
g:ale#util#warning_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#warning_priority = 4$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer] = {$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer].loclist = l:loclist$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].count = l:count$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].first_problems = l:first_problems$/;"	v
g:ale_buffer_info	plugged/ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	plugged/ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_change_sign_column_color	plugged/ale/autoload/ale/sign.vim	/^let g:ale_change_sign_column_color = get(g:, 'ale_change_sign_column_color', 0)$/;"	v
g:ale_close_preview_on_insert	plugged/ale/plugin/ale.vim	/^let g:ale_close_preview_on_insert = get(g:, 'ale_close_preview_on_insert', 0)$/;"	v
g:ale_cmake_cmakelint_executable	plugged/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	plugged/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_command_wrapper	plugged/ale/autoload/ale/job.vim	/^let g:ale_command_wrapper = get(g:, 'ale_command_wrapper', '')$/;"	v
g:ale_completion_delay	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_delay = get(g:, 'ale_completion_delay', 100)$/;"	v
g:ale_completion_enabled	plugged/ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 0$/;"	v
g:ale_completion_enabled	plugged/ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 1$/;"	v
g:ale_completion_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_completion_enabled = get(g:, 'ale_completion_enabled', 0)$/;"	v
g:ale_completion_excluded_words	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_excluded_words = get(g:, 'ale_completion_excluded_words', [])$/;"	v
g:ale_completion_max_suggestions	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_max_suggestions = get(g:, 'ale_completion_max_suggestions', 50)$/;"	v
g:ale_create_dummy_temporary_file	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_create_dummy_temporary_file = 1$/;"	v
g:ale_cs_mcs_options	plugged/ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cursor_detail	plugged/ale/plugin/ale.vim	/^let g:ale_cursor_detail = get(g:, 'ale_cursor_detail', 0)$/;"	v
g:ale_disable_lsp	plugged/ale/autoload/ale.vim	/^let g:ale_disable_lsp = get(g:, 'ale_disable_lsp', 0)$/;"	v
g:ale_echo_cursor	plugged/ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	plugged/ale/autoload/ale/cursor.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_format	plugged/ale/autoload/ale/cursor.vim	/^let g:ale_echo_msg_format = get(g:, 'ale_echo_msg_format', '%code: %%s')$/;"	v
g:ale_echo_msg_info_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_warning_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_enabled	plugged/ale/autoload/ale/toggle.vim	/^    let g:ale_enabled = !get(g:, 'ale_enabled')$/;"	v
g:ale_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_erlc_options	plugged/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_filetype_blacklist	plugged/ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	plugged/ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data[a:buffer] = {$/;"	v
g:ale_fix_buffer_data	plugged/ale/plugin/ale.vim	/^let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_on_save	plugged/ale/plugin/ale.vim	/^let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0)$/;"	v
g:ale_fixers	plugged/ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_history_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	plugged/ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_html_tidy_executable	plugged/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	plugged/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', '-q -e -language en')$/;"	v
g:ale_ignore_2_4_warnings	plugged/ale/test/.config/nvim/init.vim	/^let g:ale_ignore_2_4_warnings = 1$/;"	v
g:ale_ignore_2_4_warnings	plugged/ale/test/vimrc	/^let g:ale_ignore_2_4_warnings = 1$/;"	v
g:ale_java_checkstyle_options	plugged/ale/ale_linters/java/checkstyle.vim	/^    let g:ale_java_checkstyle_options = '-c \/google_checks.xml'$/;"	v
g:ale_java_pmd_options	plugged/ale/ale_linters/java/pmd.vim	/^    let g:ale_java_pmd_options = '-R category\/java\/bestpractices.xml'$/;"	v
g:ale_keep_list_window_open	plugged/ale/autoload/ale/list.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_c/;"	v
g:ale_kotlin_kotlinc_enable_config	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module/;"	v
g:ale_kotlin_kotlinc_options	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	plugged/ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 0)$/;"	v
g:ale_lint_on_save	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'always')$/;"	v
g:ale_linter_aliases	plugged/ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linters	plugged/ale/plugin/ale.vim	/^let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters_explicit	plugged/ale/plugin/ale.vim	/^let g:ale_linters_explicit = get(g:, 'ale_linters_explicit', 0)$/;"	v
g:ale_linters_ignore	plugged/ale/autoload/ale.vim	/^let g:ale_linters_ignore = get(g:, 'ale_linters_ignore', {})$/;"	v
g:ale_list_vertical	plugged/ale/autoload/ale/list.vim	/^let g:ale_list_vertical = get(g:, 'ale_list_vertical', 0)$/;"	v
g:ale_list_window_size	plugged/ale/autoload/ale/list.vim	/^let g:ale_list_window_size = get(g:, 'ale_list_window_size', 10)$/;"	v
g:ale_loclist_msg_format	plugged/ale/autoload/ale/list.vim	/^let g:ale_loclist_msg_format = get(g:, 'ale_loclist_msg_format',$/;"	v
g:ale_lsp_error_messages	plugged/ale/autoload/ale/lsp_linter.vim	/^        let g:ale_lsp_error_messages[a:linter_name] = []$/;"	v
g:ale_lsp_error_messages	plugged/ale/autoload/ale/lsp_linter.vim	/^    let g:ale_lsp_error_messages = get(g:, 'ale_lsp_error_messages', {})$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^        let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^    let g:ale_lsp_next_message_id += 1$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^        let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^    let g:ale_lsp_next_version_id += 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_root	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_lsp_root = {}$/;"	v
g:ale_lsp_root	plugged/ale/plugin/ale.vim	/^let g:ale_lsp_root = get(g:, 'ale_lsp_root', {})$/;"	v
g:ale_max_buffer_history_size	plugged/ale/autoload/ale/history.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	plugged/ale/autoload/ale/sign.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	plugged/ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	plugged/ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	plugged/ale/autoload/ale/list.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl6_perl6_executable	plugged/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_executable =$/;"	v
g:ale_perl6_perl6_options	plugged/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_options =$/;"	v
g:ale_php_phan_executable	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_executable = get(g:, 'ale_php_phan_executable', 'phan')$/;"	v
g:ale_php_phan_minimum_severity	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phan_use_client	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_use_client = get(g:, 'ale_php_phan_use_client', 0)$/;"	v
g:ale_php_phpcs_standard	plugged/ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	plugged/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	plugged/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial/;"	v
g:ale_php_phpstan_configuration	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '4')$/;"	v
g:ale_puppet_puppetlint_executable	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_auto_pipenv	plugged/ale/plugin/ale.vim	/^let g:ale_python_auto_pipenv = get(g:, 'ale_python_auto_pipenv', 0)$/;"	v
g:ale_python_prospector_executable	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', get(g:, 'al/;"	v
g:ale_r_lintr_lint_package	plugged/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_lint_package = get(g:, 'ale_r_lintr_lint_package', 0)$/;"	v
g:ale_r_lintr_options	plugged/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options = get(g:, 'ale_r_lintr_options', 'with_defaults()')$/;"	v
g:ale_run_synchronously	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_run_synchronously = 1$/;"	v
g:ale_run_synchronously_callbacks	plugged/ale/autoload/ale/command.vim	/^            let g:ale_run_synchronously_callbacks = []$/;"	v
g:ale_run_synchronously_emulate_commands	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_run_synchronously_emulate_commands = 1$/;"	v
g:ale_rust_ignore_error_codes	plugged/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_rust_ignore_secondary_spans	plugged/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_secondary_spans = 0$/;"	v
g:ale_set_balloons	plugged/ale/plugin/ale.vim	/^let g:ale_set_balloons = get(g:, 'ale_set_balloons', has('balloon_eval') && has('gui_running'))$/;"	v
g:ale_set_highlights	plugged/ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_lists_synchronously	plugged/ale/test/.config/nvim/init.vim	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_lists_synchronously	plugged/ale/test/vimrc	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_loclist	plugged/ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	plugged/ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	plugged/ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sign_column_always	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_error	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_error = get(g:, 'ale_sign_error', '>>')$/;"	v
g:ale_sign_info	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_info = get(g:, 'ale_sign_info', g:ale_sign_warning)$/;"	v
g:ale_sign_offset	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_sign_style_error	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_error = get(g:, 'ale_sign_style_error', g:ale_sign_error)$/;"	v
g:ale_sign_style_warning	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_warning = get(g:, 'ale_sign_style_warning', g:ale_sign_warning)$/;"	v
g:ale_sign_warning	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_warning = get(g:, 'ale_sign_warning', '--')$/;"	v
g:ale_tex_chktex_executable	plugged/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	plugged/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_type_map	plugged/ale/autoload/ale/engine.vim	/^let g:ale_type_map = get(g:, 'ale_type_map', {})$/;"	v
g:ale_verilog_verilator_options	plugged/ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_virtualenv_dir_names	plugged/ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_virtualtext_cursor	plugged/ale/plugin/ale.vim	/^let g:ale_virtualtext_cursor = get(g:, 'ale_virtualtext_cursor', 0)$/;"	v
g:ale_virtualtext_delay	plugged/ale/autoload/ale/virtualtext.vim	/^let g:ale_virtualtext_delay = get(g:, 'ale_virtualtext_delay', 10)$/;"	v
g:ale_want_results_buffer	plugged/ale/autoload/ale.vim	/^    let g:ale_want_results_buffer = a:buffer$/;"	v
g:ale_warn_about_trailing_blank_lines	plugged/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_blank_lines = get(g:, 'ale_warn_about_trailing_blank_lines', 1)$/;"	v
g:ale_warn_about_trailing_whitespace	plugged/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace = get(g:, 'ale_warn_about_trailing_whitespace', 1)$/;"	v
g:ale_xml_xmllint_executable	plugged/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	plugged/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:autoloaded_ack	plugged/ack.vim/autoload/ack.vim	/^let g:autoloaded_ack = 1$/;"	v
g:autoloaded_fugitive	plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:blade_custom_directives	plugged/vim-blade/vimrc	/^let g:blade_custom_directives = ['datetime', 'namespaced::directive']$/;"	v
g:blade_custom_directives_pairs	plugged/vim-blade/vimrc	/^let g:blade_custom_directives_pairs = {'cache': 'endcache'}$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_autodismiss_on_select = 0$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_autodismiss_on_select = 1$/;"	v
g:buffergator_autodismiss_on_select	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autodismiss_on_select = 1$/;"	v
g:buffergator_autoexpand_on_split	config/02.general.vim	/^let g:buffergator_autoexpand_on_split = 0$/;"	v
g:buffergator_autoexpand_on_split	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autoexpand_on_split = 1$/;"	v
g:buffergator_autoupdate	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_autoupdate = 0$/;"	v
g:buffergator_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_display_regime = "basename"$/;"	v
g:buffergator_hsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_hsplit_size = 20$/;"	v
g:buffergator_hsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_hsplit_size = g:buffergator_split_size$/;"	v
g:buffergator_move_wrap	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_move_wrap = 1$/;"	v
g:buffergator_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^            let g:buffergator_mru = []$/;"	v
g:buffergator_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:buffergator_mru = []$/;"	v
g:buffergator_mru_cycle_local_to_window	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_mru_cycle_local_to_window = 1$/;"	v
g:buffergator_mru_cycle_loop	plugged/vim-buffergator/plugin/buffergator.vim	/^    let g:buffergator_mru_cycle_loop = 1$/;"	v
g:buffergator_remap_arrow_keys	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_remap_arrow_keys = 0$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_show_full_directory_path = 0$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_show_full_directory_path = 1$/;"	v
g:buffergator_show_full_directory_path	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_show_full_directory_path = 1$/;"	v
g:buffergator_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_sort_regime = "bufnum"$/;"	v
g:buffergator_tab_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_tab_statusline = 1$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_track_mru = 0$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_track_mru = 1$/;"	v
g:buffergator_track_mru	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:buffergator_track_mru = 1$/;"	v
g:buffergator_viewport_split_policy	plugged/vim-buffergator/autoload/buffergator.vim	/^            let g:buffergator_viewport_split_policy = s:buffergator_viewport_split_modes_cycle_l/;"	v
g:buffergator_viewport_split_policy	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_viewport_split_policy = "L"$/;"	v
g:buffergator_vsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_vsplit_size = 40$/;"	v
g:buffergator_vsplit_size	plugged/vim-buffergator/autoload/buffergator.vim	/^        let g:buffergator_vsplit_size = g:buffergator_split_size$/;"	v
g:buffergator_window_statusline	plugged/vim-buffergator/autoload/buffergator.vim	/^    let g:buffergator_window_statusline = 1$/;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^    let g:coc#_context['candidates'] = []$/;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^  let g:coc#_context = {$/;"	v
g:coc#_context	plugged/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'candidates': []}$/;"	v
g:coc_enabled	plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 0$/;"	v
g:coc_enabled	plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 1$/;"	v
g:coc_global_extensions	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_selected_text	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_stl_format	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = _backup$/;"	v
g:coc_stl_format	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_err', '%E{[%e(#%fe)]}')$/;"	v
g:coc_stl_format	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_warn', '%W{[%w(#%fw)]}')$/;"	v
g:coc_user_config	plugged/coc.nvim/autoload/coc.vim	/^  let g:coc_user_config[a:section] = a:value$/;"	v
g:coc_user_config	plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:colors_name	plugged/nord-vim/colors/nord.vim	/^let g:colors_name = "nord"$/;"	v
g:colors_name	plugged/papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:ctrlp_alldirs	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^			let g:ctrlp_alldirs = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	plugged/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#dirnfile(g:ctrlp_allfiles)[1]$/;"	v
g:ctrlp_allfiles	plugged/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = []$/;"	v
g:ctrlp_allfiles	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = split(system(s:safe_printf(lscmd, path)), "\\n")$/;"	v
g:ctrlp_allfiles	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = systemlist(s:safe_printf(lscmd, path))$/;"	v
g:ctrlp_allmixes	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_allmixes = { 'filtime': getftime(ctrlp#utils#cachefile()),$/;"	v
g:ctrlp_alltags	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^	let g:ctrlp_alltags = []$/;"	v
g:ctrlp_autoignore_debug	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_debug = 0$/;"	v
g:ctrlp_autoignore_loaded	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_autoignore_loaded = 1$/;"	v
g:ctrlp_autoignore_trace	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_trace = 0$/;"	v
g:ctrlp_builtins	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let g:ctrlp_builtins = len(g:ctrlp_types)-1$/;"	v
g:ctrlp_cmd	config/03.remaps.vim	/^let g:ctrlp_cmd = 'CtrlP'$/;"	v
g:ctrlp_custom_ignore	config/02.general.vim	/^let g:ctrlp_custom_ignore = '\\v[\\\/]\\.(git|hg|svn|meta|swp|wav)$'$/;"	v
g:ctrlp_custom_ignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_custom_ignore = {}$/;"	v
g:ctrlp_custom_ignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func'] = 'ctrlp#autoignore#ignore'$/;"	v
g:ctrlp_custom_ignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-close'] = 'ctrlp#autoignore#ignore_close'$/;"	v
g:ctrlp_custom_ignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-init'] = 'ctrlp#autoignore#ignore_init'$/;"	v
g:ctrlp_formatline_func	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_lines = ctrlp#mrufiles#refresh()$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = []$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = call(a:rfunc, [tbrem])$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = eval(types[s:itemtype])$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_lines = g:ctrlp_allmixes['data']$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = copy(ctrlp#files())$/;"	v
g:ctrlp_lines	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = len(mrufs) > len(g:ctrlp_lines)$/;"	v
g:ctrlp_map	config/03.remaps.vim	/^let g:ctrlp_map = '<c-p>'$/;"	v
g:ctrlp_newcache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_newcache = 0$/;"	v
g:ctrlp_newcache	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_newcache = 1$/;"	v
g:ctrlp_newdir	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^		let g:ctrlp_newdir = 0$/;"	v
g:ctrlp_newmix	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_newmix = 0$/;"	v
g:ctrlp_root_markers	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_root_markers = []$/;"	v
g:ctrlp_types	plugged/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_types = s:types$/;"	v
g:ctrlp_user_command	config/03.remaps.vim	/^let g:ctrlp_user_command = ['.git\/', 'git --git-dir=%s\/.git ls-files -oc --exclude-standard -x/;"	v
g:current_ulti_dict	plugged/ultisnips/autoload/UltiSnips.vim	/^    let g:current_ulti_dict = {}$/;"	v
g:current_ulti_dict_info	plugged/ultisnips/autoload/UltiSnips.vim	/^      let g:current_ulti_dict_info = {}$/;"	v
g:did_buffergator	plugged/vim-buffergator/plugin/buffergator.vim	/^let g:did_buffergator = 1$/;"	v
g:did_coc_loaded	plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:dir	plugged/ale/autoload/ale/test.vim	/^    let g:dir = getcwd() " no-custom-checks$/;"	v
g:elite_mode	config/02.general.vim	/^let g:elite_mode=1$/;"	v
g:emmet_curl_command	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:enable_numbers	plugged/numbers.vim/plugin/numbers.vim	/^    let g:enable_numbers = 0$/;"	v
g:enable_numbers	plugged/numbers.vim/plugin/numbers.vim	/^    let g:enable_numbers = 1$/;"	v
g:far#check_windows_to_resize_timer	plugged/far.vim/autoload/far.vim	/^    let g:far#check_windows_to_resize_timer =$/;"	v
g:far#executors#nvim#context_idx	plugged/far.vim/autoload/far/executors/nvim.vim	/^    let g:far#executors#nvim#context_idx += 1$/;"	v
g:far#executors#nvim#context_idx	plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#context_idx = 0$/;"	v
g:far#executors#nvim#contexts	plugged/far.vim/autoload/far/executors/nvim.vim	/^    let g:far#executors#nvim#contexts[ctx_idx] = ctx$/;"	v
g:far#executors#nvim#contexts	plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#contexts = {}$/;"	v
g:far#file_mask_history	plugged/far.vim/autoload/far.vim	/^let g:far#file_mask_history = []$/;"	v
g:far#repl_history	plugged/far.vim/autoload/far.vim	/^let g:far#repl_history = []$/;"	v
g:far#search_history	plugged/far.vim/autoload/far.vim	/^let g:far#search_history = []$/;"	v
g:fugitive_git_executable	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_async	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    let g:gitgutter_async = async$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_hook_context	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let g:gitgutter_hook_context = {'bufnr': a:bufnr}$/;"	v
g:gitgutter_map_keys	config/03.remaps.vim	/^let g:gitgutter_map_keys = 0$/;"	v
g:gitgutter_sign_column_always	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:gutentags_add_ctrlp_root_markers	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:hoge	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^		  let g:hoge = current$/;"	v
g:indentLine_bufNameExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:, 'indentLine_bufNameExclude', [])$/;"	v
g:indentLine_bufTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufTypeExclude = get(g:, 'indentLine_bufTypeExclude', [])$/;"	v
g:indentLine_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:, 'indentLine_char', (&encoding ==# "utf-8" && &term isnot# "linux/;"	v
g:indentLine_char_list	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char_list = get(g:, 'indentLine_char_list', [])$/;"	v
g:indentLine_defaultGroup	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_defaultGroup = get(g:, 'indentLine_defaultGroup', "")$/;"	v
g:indentLine_enabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:, 'indentLine_enabled', 1)$/;"	v
g:indentLine_faster	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:, 'indentLine_faster', 0)$/;"	v
g:indentLine_fileType	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:, 'indentLine_fileType', [])$/;"	v
g:indentLine_fileTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:, 'indentLine_fileTypeExclude', [])$/;"	v
g:indentLine_first_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:, 'indentLine_first_char', (&encoding ==# "utf-8" && &term i/;"	v
g:indentLine_indentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:, 'indentLine_indentLevel', 20)$/;"	v
g:indentLine_leadingSpaceChar	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:, 'indentLine_leadingSpaceChar', (&encoding ==# "utf-8/;"	v
g:indentLine_leadingSpaceEnabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:, 'indentLine_leadingSpaceEnabled', 0)$/;"	v
g:indentLine_loaded	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:, 'indentLine_maxLines', 3000)$/;"	v
g:indentLine_mysyntaxfile	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_mysyntaxfile = fnamemodify(expand("<sfile>"), ":p:h:h")."\/syntax\/indentLine.v/;"	v
g:indentLine_newVersion	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_newVersion = get(g:,'indentLine_newVersion',v:version > 704 || v:version == 704/;"	v
g:indentLine_setColors	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:, 'indentLine_setColors', 1)$/;"	v
g:indentLine_setConceal	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setConceal = get(g:, 'indentLine_setConceal', 1)$/;"	v
g:indentLine_showFirstIndentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:, 'indentLine_showFirstIndentLevel', 0)$/;"	v
g:lightline	config/08.lightline.vim	/^let g:lightline = {$/;"	v
g:lightline	config/08.lightline.vim	/^let g:lightline.component_expand = {$/;"	v
g:lightline	config/08.lightline.vim	/^let g:lightline.component_type = {$/;"	v
g:lightline	plugged/lightline.vim/test/concatenate.vim	/^  let g:lightline = { 'subseparator': { 'left': '>', 'right': '<' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': /;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' }, 'component_type': { 'custom'/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'g:lightline.Custom' } }$/;"	v
g:lightline	plugged/lightline.vim/test/expand.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {$/;"	v
g:lightline	plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = {$/;"	v
g:lightline	plugged/lightline.vim/test/link.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/mode.vim	/^  let g:lightline = { 'mode_map': { 'n': 'N' } }$/;"	v
g:lightline	plugged/lightline.vim/test/mode.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component': { 'custom': 'custom' }/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': '/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom', 'filename' ], 'inactive': [ 'custom', 'cust/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom' ], 'inactive': [ 'tabnum', 'custom/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom', 'filename' ], 'inactive': [ 'tabn/;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'filename' ], 'inactive': [ 'filename' ] } /;"	v
g:lightline	plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component': { 'custom1': 'custom1', 'custom2': 'custom2', 'custom3': 'cus/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'cus/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'compo/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'com/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custo/;"	v
g:lightline	plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 0 } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 1 } }$/;"	v
g:lightline	plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = {}$/;"	v
g:lightline	plugged/lightline.vim/test/tabs.vim	/^  let g:lightline = { 'winwidth': 180 }$/;"	v
g:lightline	plugged/lightline.vim/test/toggle.vim	/^  let g:lightline = {}$/;"	v
g:lightline#colorscheme#16color#palette	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palet/;"	v
g:lightline#colorscheme#PaperColor#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#pale/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	plugged/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_ack	plugged/ack.vim/plugin/ack.vim	/^let g:loaded_ack = 1$/;"	v
g:loaded_ale	plugged/ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	plugged/ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_ctrlp	plugged/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_emmet_vim	plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_far	plugged/far.vim/plugin/far.vim	/^let g:loaded_far = 0$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_lightline	plugged/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_numbers	plugged/numbers.vim/plugin/numbers.vim	/^let g:loaded_numbers = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_repeat	plugged/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_vue_eslint_checker	plugged/vim-vue/syntax_checkers/vue/eslint.vim	/^let g:loaded_syntastic_vue_eslint_checker = 1$/;"	v
g:loaded_wakatime	plugged/vim-wakatime/plugin/wakatime.vim	/^    let g:loaded_wakatime = s:true$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:mapleader	plugged/ale/test/.config/nvim/init.vim	/^let g:mapleader=','$/;"	v
g:mapleader	plugged/ale/test/vimrc	/^let g:mapleader=','$/;"	v
g:miniyank_delete_maxlines	plugged/nvim-miniyank/plugin/miniyank.vim	/^    let g:miniyank_delete_maxlines = 1000$/;"	v
g:miniyank_filename	plugged/nvim-miniyank/plugin/miniyank.vim	/^        let g:miniyank_filename = "\/tmp\/".$USER."_miniyank.mpack"$/;"	v
g:miniyank_filename	plugged/nvim-miniyank/plugin/miniyank.vim	/^        let g:miniyank_filename = $XDG_RUNTIME_DIR."\/miniyank.mpack"$/;"	v
g:miniyank_filename	plugged/nvim-miniyank/plugin/miniyank.vim	/^        let g:miniyank_filename = stdpath('cache')."\/miniyank.mpack"$/;"	v
g:miniyank_maxitems	plugged/nvim-miniyank/plugin/miniyank.vim	/^    let g:miniyank_maxitems = 10$/;"	v
g:mysyntaxfile	plugged/indentLine/after/plugin/indentLine.vim	/^    let g:mysyntaxfile = g:indentLine_mysyntaxfile$/;"	v
g:nord_comment_brightness	plugged/nord-vim/colors/nord.vim	/^  let g:nord_comment_brightness = 10$/;"	v
g:nord_cursor_line_number_background	plugged/nord-vim/colors/nord.vim	/^  let g:nord_cursor_line_number_background = 0$/;"	v
g:nord_italic	plugged/nord-vim/colors/nord.vim	/^    let g:nord_italic=0$/;"	v
g:nord_italic	plugged/nord-vim/colors/nord.vim	/^    let g:nord_italic=1$/;"	v
g:nord_uniform_diff_background	plugged/nord-vim/colors/nord.vim	/^  let g:nord_uniform_diff_background = 0$/;"	v
g:nord_uniform_status_lines	config/02.general.vim	/^let g:nord_uniform_status_lines = 1$/;"	v
g:nord_uniform_status_lines	plugged/nord-vim/colors/nord.vim	/^  let g:nord_uniform_status_lines = 0$/;"	v
g:numbers_exclude	plugged/numbers.vim/plugin/numbers.vim	/^    let g:numbers_exclude = ['unite', 'tagbar', 'startify', 'gundo', 'vimshell', 'w3m', 'nerdtre/;"	v
g:php_syntax_extensions_disabled	plugged/php.vim/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	plugged/php.vim/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg/;"	v
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:repeat_count	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_count = a:0 ? a:1 : v:count$/;"	v
g:repeat_reg	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_reg = [a:sequence, a:register]$/;"	v
g:repeat_reg	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_sequence	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_sequence = a:sequence$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^        let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = -1$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^    let g:repeat_tick = b:changedtick$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:session_autoload	config/02.general.vim	/^let g:session_autoload = 'yes'$/;"	v
g:snips_author	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:tcomment#blank_lines	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#blank_lines = 2    "{{{2$/;"	v
g:tcomment#block2_fmt_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#block2_fmt_c = {$/;"	v
g:tcomment#block_fmt_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#block_fmt_c = {$/;"	v
g:tcomment#block_fmt_xml	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#block_fmt_xml = {$/;"	v
g:tcomment#commentstring_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#commentstring_c = '\/* %s *\/'   "{{{2$/;"	v
g:tcomment#filetype#guess	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess = 0   "{{{2$/;"	v
g:tcomment#filetype#guess_blade	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_blade = 'html'   "{{{2$/;"	v
g:tcomment#filetype#guess_cpp	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_cpp = 0   "{{{2$/;"	v
g:tcomment#filetype#guess_django	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_django = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_dsl	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_dsl = 'xml'   "{{{2$/;"	v
g:tcomment#filetype#guess_eruby	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_eruby = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_html	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_html = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_javascript	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_javascript = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_jinja	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_jinja = 'html'   "{{{2$/;"	v
g:tcomment#filetype#guess_perl	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_perl = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_php	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_php = 'html'   "{{{2$/;"	v
g:tcomment#filetype#guess_rmd	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_rmd = 'markdown'   "{{{2$/;"	v
g:tcomment#filetype#guess_rnoweb	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_rnoweb = 'r'   "{{{2$/;"	v
g:tcomment#filetype#guess_smarty	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_smarty = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_tex	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_tex = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_tskeleton	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_tskeleton = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_typescript	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_typescript = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_vim	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_vim = 1   "{{{2$/;"	v
g:tcomment#filetype#guess_vue	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#guess_vue = 'html'   "{{{2$/;"	v
g:tcomment#filetype#ignore_blade	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#ignore_blade = 'html'   "{{{2$/;"	v
g:tcomment#filetype#ignore_php	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#ignore_php = 'sql'   "{{{2$/;"	v
g:tcomment#filetype#map	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#map = extend(g:tcomment#filetype#map, g:tcomment#filetype#map_user)$/;"	v
g:tcomment#filetype#map	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#map = {$/;"	v
g:tcomment#filetype#syntax_map	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#syntax_map = extend(g:tcomment#filetype#syntax_map, g:tcomment#filet/;"	v
g:tcomment#filetype#syntax_map	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^    let g:tcomment#filetype#syntax_map = {$/;"	v
g:tcomment#ignore_char_type	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#ignore_comment_def	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_comment_def = []   "{{{2$/;"	v
g:tcomment#inline_fmt_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#inline_fmt_c = tcomment#GetLineC()$/;"	v
g:tcomment#inline_fmt_xml	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#inline_fmt_xml = {$/;"	v
g:tcomment#line_fmt_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#line_fmt_c = {$/;"	v
g:tcomment#mode_extra	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#mode_extra = ''   "{{{2$/;"	v
g:tcomment#must_escape_expression_backslash	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#must_escape_expression_backslash = 0   "{{{2$/;"	v
g:tcomment#operator#mode_extra	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^    let g:tcomment#operator#mode_extra = ''   "{{{2$/;"	v
g:tcomment#options	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options = {}   "{{{2$/;"	v
g:tcomment#options_comments	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_comments = {'whitespace': get(g:tcomment#options, 'whitespace', 'both/;"	v
g:tcomment#options_commentstring	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_commentstring = {'whitespace': get(g:tcomment#options, 'whitespace', /;"	v
g:tcomment#replacements_c	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#rstrip_on_uncomment	plugged/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#rstrip_on_uncomment = 1   "{{{2$/;"	v
g:tcomment#syntax#substitute	plugged/tcomment_vim/autoload/tcomment/syntax.vim	/^    let g:tcomment#syntax#substitute = {$/;"	v
g:tcomment#syntax#substitute_by_filetype	plugged/tcomment_vim/autoload/tcomment/syntax.vim	/^    let g:tcomment#syntax#substitute_by_filetype = {$/;"	v
g:tcomment#types#dirty	plugged/tcomment_vim/autoload/tcomment/type.vim	/^        let g:tcomment#types#dirty = 0$/;"	v
g:tcomment#types#dirty	plugged/tcomment_vim/autoload/tcomment/type.vim	/^    let g:tcomment#types#dirty = 1$/;"	v
g:tcomment#types#dirty	plugged/tcomment_vim/autoload/tcomment/type.vim	/^let g:tcomment#types#dirty = 1$/;"	v
g:tcomment#types#names	plugged/tcomment_vim/autoload/tcomment/type.vim	/^        let g:tcomment#types#names = keys(s:definitions)$/;"	v
g:tcomment#types#rx	plugged/tcomment_vim/autoload/tcomment/type.vim	/^        let g:tcomment#types#rx = '\\V\\^\\('. join(g:tcomment#types#names, '\\|') .'\\)\\(\\u\\/;"	v
g:tcomment_mapleader1	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_mapleader1 = '<c-_>' "{{{2$/;"	v
g:tcomment_mapleader2	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_mapleader2 = '<Leader>_' "{{{2$/;"	v
g:tcomment_mapleader_comment_anyway	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_mapleader_comment_anyway = 'g>' "{{{2$/;"	v
g:tcomment_mapleader_uncomment_anyway	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_mapleader_uncomment_anyway = 'g<' "{{{2$/;"	v
g:tcomment_maps	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_maps = 1   "{{{2$/;"	v
g:tcomment_opleader1	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_opleader1 = 'gc' "{{{2$/;"	v
g:tcomment_textobject_inlinecomment	plugged/tcomment_vim/plugin/tcomment.vim	/^    let g:tcomment_textobject_inlinecomment = 'ic'   "{{{2$/;"	v
g:terminal_ansi_colors	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_ansi_colors = [s:nord1_gui, s:nord11_gui, s:nord14_gui, s:nord13_gui, s:nord9_g/;"	v
g:terminal_color_0	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_0 = s:nord1_gui$/;"	v
g:terminal_color_0	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_0  = color00[0]$/;"	v
g:terminal_color_1	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_1 = s:nord11_gui$/;"	v
g:terminal_color_1	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_1  = color01[0]$/;"	v
g:terminal_color_10	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_10 = s:nord14_gui$/;"	v
g:terminal_color_10	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_10 = color10[0]$/;"	v
g:terminal_color_11	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_11 = s:nord13_gui$/;"	v
g:terminal_color_11	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_11 = color11[0]$/;"	v
g:terminal_color_12	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_12 = s:nord9_gui$/;"	v
g:terminal_color_12	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_12 = color12[0]$/;"	v
g:terminal_color_13	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_13 = s:nord15_gui$/;"	v
g:terminal_color_13	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_13 = color13[0]$/;"	v
g:terminal_color_14	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_14 = s:nord7_gui$/;"	v
g:terminal_color_14	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_14 = color14[0]$/;"	v
g:terminal_color_15	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_15 = s:nord6_gui$/;"	v
g:terminal_color_15	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_15 = color15[0]$/;"	v
g:terminal_color_2	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_2 = s:nord14_gui$/;"	v
g:terminal_color_2	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_2  = color02[0]$/;"	v
g:terminal_color_3	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_3 = s:nord13_gui$/;"	v
g:terminal_color_3	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_3  = color03[0]$/;"	v
g:terminal_color_4	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_4 = s:nord9_gui$/;"	v
g:terminal_color_4	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_4  = color04[0]$/;"	v
g:terminal_color_5	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_5 = s:nord15_gui$/;"	v
g:terminal_color_5	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_5  = color05[0]$/;"	v
g:terminal_color_6	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_6 = s:nord8_gui$/;"	v
g:terminal_color_6	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_6  = color06[0]$/;"	v
g:terminal_color_7	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_7 = s:nord5_gui$/;"	v
g:terminal_color_7	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_7  = color07[0]$/;"	v
g:terminal_color_8	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_8 = s:nord3_gui$/;"	v
g:terminal_color_8	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_8  = color08[0]$/;"	v
g:terminal_color_9	plugged/nord-vim/colors/nord.vim	/^  let g:terminal_color_9 = s:nord11_gui$/;"	v
g:terminal_color_9	plugged/papercolor-theme/colors/PaperColor.vim	/^  let g:terminal_color_9  = color09[0]$/;"	v
g:testname	plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:used_javascript_libs	config/06.languages.vim	/^let g:used_javascript_libs = 'vue,underscore'$/;"	v
g:used_javascript_libs	plugged/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^    let g:used_javascript_libs = join(s:default_libs, ',')$/;"	v
g:user_emmet_install_global	plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_install_global = s:old_user_emmet_install_global$/;"	v
g:user_emmet_leader_key	config/03.remaps.vim	/^let g:user_emmet_leader_key='<C-y>'$/;"	v
g:user_emmet_leader_key	plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:user_emmet_settings	plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_settings = s:old_user_emmet_settings$/;"	v
g:user_emmet_settings	plugged/emmet-vim/unittest.vim	/^    let g:user_emmet_settings = {'variables': {'indentation': "\\t", 'use_selection': 1}}$/;"	v
g:vim_node_rpc_folder	plugged/coc.nvim/autoload/coc/rpc.vim	/^      let g:vim_node_rpc_folder = p$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:vue_disable_pre_processors	config/06.languages.vim	/^let g:vue_disable_pre_processors=1$/;"	v
g:wakatime_HeartbeatFrequency	plugged/vim-wakatime/plugin/wakatime.vim	/^            let g:wakatime_HeartbeatFrequency = 2$/;"	v
g:wakatime_PythonBinary	plugged/vim-wakatime/plugin/wakatime.vim	/^            let g:wakatime_PythonBinary = 'python'$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
g<Bar>	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> g<Bar> :<C-U>execute <SID>StageDelete(line('.'),v:count)<CR>$/;"	m
g<Bar>	plugged/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> g<Bar> :<C-U>execute <SID>StageDelete(line("'<"),line("'>")-line(/;"	m
g?	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> g?   :help fugitive-:Gblame<CR>$/;"	m
g?	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> g?   :help fugitive-mappings<CR>$/;"	m
gB	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> gB :BuffergatorMruCycleNext<CR>$/;"	m
gC	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> gC    :<C-U>exe 'Gpedit ' . <SID>fnameescape(<SID>ContainingCommi/;"	m
gO	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> gO    :<C-U>exe <SID>GF("vsplit")<CR>$/;"	m
gO	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> gO    :<C-U>vertical .,.+1Gblame<CR>$/;"	m
gS	plugged/vim-surround/plugin/surround.vim	/^  xmap gS  <Plug>VgSurround$/;"	m
gather_candidates	plugged/nvim-miniyank/rplugin/python3/denite/source/miniyank.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gb	plugged/vim-buffergator/plugin/buffergator.vim	/^            nnoremap <silent> gb :BuffergatorMruCyclePrev<CR>$/;"	m
gc	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> gc    :<C-U>exe 'Gpedit ' . <SID>fnameescape(<SID>ContainingCommi/;"	m
gd	plugged/php.vim/attic/syntax.ini	/^gd = yes$/;"	k	section:extensions
gdb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gdb": null,$/;"	z
gdmo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gdmo": null,$/;"	z
gedcom	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gedcom": null,$/;"	z
gen_crystalstrings_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    def gen_crystalstrings_rules():$/;"	m	class:CrystalLexer
gen_elixir_sigil_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    def gen_elixir_sigil_rules():$/;"	m	class:ElixirLexer
gen_elixir_sigstr_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^def gen_elixir_sigstr_rules(term, token, interpol=True):$/;"	f
gen_elixir_string_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^def gen_elixir_string_rules(name, symbol, token):$/;"	f
gen_rubystrings_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    def gen_rubystrings_rules():$/;"	m	class:RubyLexer
generate	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^        def generate():$/;"	f	member:Response.iter_content	file:
generate_project_name	plugged/vim-wakatime/packages/wakatime/project.py	/^def generate_project_name():$/;"	f
get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def get(self, option, fallback=None, **kwargs):$/;"	m	class:SectionProxy
get	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def get(self, section, option, **kwargs):$/;"	m	class:RawConfigParser
get	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def get(self, key, default=None):$/;"	m	class:_ChainMap
get	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get(self):$/;"	m	class:words
get	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    def get(self):$/;"	m	class:Future
get	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def get(url, params=None, **kwargs):$/;"	f
get	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get(self, name, default=None, domain=None, path=None):$/;"	m	class:RequestsCookieJar
get	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def get(self, url, **kwargs):$/;"	m	class:Session
get	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def get(self, key, default=None):$/;"	m	class:LookupDict
get	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    def get(self):$/;"	m	class:SessionCache
getConfigFile	plugged/vim-wakatime/packages/wakatime/configs.py	/^def getConfigFile():$/;"	f
getWH	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			function getWH() {$/;"	f	function:AnonymousFunctionc5b93c5c2700
get_adapter	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def get_adapter(self, url):$/;"	m	class:Session
get_all	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    get_all = getlist$/;"	v	class:HTTPHeaderDict
get_all_filters	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^def get_all_filters():$/;"	f
get_all_formatters	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def get_all_formatters():$/;"	f
get_all_lexers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def get_all_lexers():$/;"	f
get_all_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/__init__.py	/^def get_all_styles():$/;"	f
get_auth_from_url	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_auth_from_url(url):$/;"	f
get_backoff_time	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def get_backoff_time(self):$/;"	m	class:Retry
get_bool_opt	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def get_bool_opt(options, optname, default=None):$/;"	f
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_char	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def get_char(self):$/;"	m	class:Scanner
get_char_size	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def get_char_size(self):$/;"	m	class:FontManager
get_choice_opt	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def get_choice_opt(options, optname, allowed, default=None, normcase=False):$/;"	f
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_code	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def get_code(self, fullname):$/;"	m	class:_SixMetaPathImporter
get_code	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def get_code(self, fullname):$/;"	m	class:_SixMetaPathImporter
get_coding_state_machine	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def get_coding_state_machine(self):$/;"	m	class:CodingStateMachine
get_comment_format	plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_confidence(self):$/;"	m	class:CharDistributionAnalysis
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def get_confidence(self):$/;"	m	class:CharSetGroupProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def get_confidence(self):$/;"	m	class:CharSetProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def get_confidence(self):$/;"	m	class:EscCharSetProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def get_confidence(self):$/;"	m	class:EUCJPProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def get_confidence(self):$/;"	m	class:JapaneseContextAnalysis
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def get_confidence(self):$/;"	m	class:Latin1Prober
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def get_confidence(self):$/;"	m	class:MultiByteCharSetProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def get_confidence(self):$/;"	m	class:SingleByteCharSetProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def get_confidence(self):$/;"	m	class:SJISProber
get_confidence	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def get_confidence(self):$/;"	m	class:UTF8Prober
get_configs_for_plugin	plugged/vim-wakatime/packages/wakatime/project.py	/^def get_configs_for_plugin(plugin_name, configs):$/;"	f
get_connect_duration	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def get_connect_duration(self):$/;"	m	class:Timeout
get_connection	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def get_connection(self, url, proxies=None):$/;"	m	class:HTTPAdapter
get_cookie_header	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def get_cookie_header(jar, request):$/;"	f
get_current_charlen	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def get_current_charlen(self):$/;"	m	class:CodingStateMachine
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def get_cursor_pos():$/;"	f
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/gss_channel_bindings.py	/^    def get_data(self):$/;"	m	class:GssChannelBindingsStruct
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def get_data(self):$/;"	m	class:AuthenticateMessage
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def get_data(self):$/;"	m	class:ChallengeMessage
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^    def get_data(self):$/;"	m	class:NegotiateMessage
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def get_data(self):$/;"	m	class:_NtlmMessageSignature1
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def get_data(self):$/;"	m	class:_NtlmMessageSignature2
get_data	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/target_info.py	/^    def get_data(self):$/;"	m	class:TargetInfo
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_default	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def get_default(self, dest):$/;"	m	class:_ActionsContainer
get_default_proxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^def get_default_proxy():$/;"	f
get_dialect_from_dialect_tag	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    def get_dialect_from_dialect_tag(self, dialect_tag):$/;"	m	class:Modula2Lexer
get_dict	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_dict(self, domain=None, path=None):$/;"	m	class:RequestsCookieJar
get_encoding_from_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_encoding_from_headers(headers):$/;"	f
get_encodings_from_content	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_encodings_from_content(content):$/;"	f
get_environ_proxies	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_environ_proxies(url, no_proxy=None):$/;"	f
get_file_head	plugged/vim-wakatime/packages/wakatime/stats.py	/^def get_file_head(file_name):$/;"	f
get_file_stats	plugged/vim-wakatime/packages/wakatime/stats.py	/^def get_file_stats(file_name, entity_type='file', lineno=None, cursorpos=None,$/;"	f
get_filetype_from_buffer	plugged/vim-wakatime/packages/wakatime/packages/pygments/modeline.py	/^def get_filetype_from_buffer(buf, max_lines=5):$/;"	f
get_filetype_from_line	plugged/vim-wakatime/packages/wakatime/packages/pygments/modeline.py	/^def get_filetype_from_line(l):$/;"	f
get_filter_by_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^def get_filter_by_name(filtername, **options):$/;"	f
get_font	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def get_font(self, bold, oblique):$/;"	m	class:FontManager
get_formatter_by_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def get_formatter_by_name(_alias, **options):$/;"	f
get_formatter_for_filename	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def get_formatter_for_filename(fn, **options):$/;"	f
get_full_url	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_full_url(self):$/;"	m	class:MockRequest
get_function_closure	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_function_closure = operator.attrgetter(_func_closure)$/;"	v
get_function_closure	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_function_closure = operator.attrgetter(_func_closure)$/;"	v
get_function_code	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_function_code = operator.attrgetter(_func_code)$/;"	v
get_function_code	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_function_code = operator.attrgetter(_func_code)$/;"	v
get_function_defaults	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_function_defaults = operator.attrgetter(_func_defaults)$/;"	v
get_function_defaults	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_function_defaults = operator.attrgetter(_func_defaults)$/;"	v
get_function_globals	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_function_globals = operator.attrgetter(_func_globals)$/;"	v
get_function_globals	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_function_globals = operator.attrgetter(_func_globals)$/;"	v
get_function_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def get_function_module(name):$/;"	f
get_header	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_header(self, name, default=None):$/;"	m	class:MockRequest
get_host	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_host(self):$/;"	m	class:MockRequest
get_host	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^def get_host(url):$/;"	f
get_hostname	plugged/vim-wakatime/packages/wakatime/utils.py	/^def get_hostname(args):$/;"	f
get_id	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def get_id(self):$/;"	m	class:Heartbeat
get_int_opt	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def get_int_opt(options, optname, default=None):$/;"	f
get_key	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def get_key(self, fileobj):$/;"	m	class:BaseSelector
get_language_from_extension	plugged/vim-wakatime/packages/wakatime/stats.py	/^def get_language_from_extension(file_name):$/;"	f
get_language_from_json	plugged/vim-wakatime/packages/wakatime/stats.py	/^def get_language_from_json(language, key):$/;"	f
get_latest_release	plugged/coc.nvim/install.sh	/^get_latest_release() {$/;"	f
get_lexer	plugged/vim-wakatime/packages/wakatime/stats.py	/^def get_lexer(language):$/;"	f
get_lexer_by_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def get_lexer_by_name(_alias, **options):$/;"	f
get_lexer_for_filename	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def get_lexer_for_filename(_fn, code=None, **options):$/;"	f
get_lexer_for_mimetype	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def get_lexer_for_mimetype(_mime, **options):$/;"	f
get_lines	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^                def get_lines(parts, indent, prefix=None):$/;"	f	member:HelpFormatter._format_usage	file:
get_list_opt	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def get_list_opt(options, optname, default=None):$/;"	f
get_lm_challenge_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def get_lm_challenge_response(self):$/;"	m	class:ComputeResponse
get_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^def get_localzone():$/;"	f
get_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/unix.py	/^def get_localzone():$/;"	f
get_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^def get_localzone():$/;"	f
get_localzone_name	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^def get_localzone_name():$/;"	f
get_lua_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def get_lua_functions(version):$/;"	f
get_map	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def get_map(self):$/;"	m	class:BaseSelector
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def get_matching_snippets(self, trigger, potentially, autotrigger_only,$/;"	m	class:SnippetDictionary
get_method_function	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_method_function = operator.attrgetter(_meth_func)$/;"	v
get_method_function	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_method_function = operator.attrgetter(_meth_func)$/;"	v
get_method_self	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^get_method_self = operator.attrgetter(_meth_self)$/;"	v
get_method_self	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^get_method_self = operator.attrgetter(_meth_self)$/;"	v
get_netrc_auth	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_netrc_auth(url, raise_errors=False):$/;"	f
get_new_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_new_headers(self):$/;"	m	class:MockRequest
get_newest_version	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def get_newest_version():$/;"	f
get_nt_challenge_response	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^    def get_nt_challenge_response(self, lm_challenge_response, server_certificate_hash):$/;"	m	class:ComputeResponse
get_num_categories	plugged/vim-wakatime/packages/wakatime/packages/chardet/enums.py	/^    def get_num_categories(cls):$/;"	m	class:SequenceLikelihood
get_option	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:Big5DistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:CharDistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:EUCJPDistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:EUCKRDistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:EUCTWDistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:GB2312DistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def get_order(self, byte_str):$/;"	m	class:SJISDistributionAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def get_order(self, byte_str):$/;"	m	class:EUCJPContextAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def get_order(self, byte_str):$/;"	m	class:JapaneseContextAnalysis
get_order	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def get_order(self, byte_str):$/;"	m	class:SJISContextAnalysis
get_origin_req_host	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_origin_req_host(self):$/;"	m	class:MockRequest
get_peername	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def get_peername(self):$/;"	m	class:socksocket
get_php_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    def get_php_functions():$/;"	f
get_php_references	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    def get_php_references():$/;"	f
get_project_info	plugged/vim-wakatime/packages/wakatime/project.py	/^def get_project_info(configs, heartbeat, data):$/;"	f
get_proxy	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^    get_proxy = lambda k: os.environ.get(k) or os.environ.get(k.upper())$/;"	f	function:should_bypass_proxies	file:
get_proxy_peername	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def get_proxy_peername(self):$/;"	m	class:socksocket
get_proxy_sockname	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def get_proxy_sockname(self):$/;"	m	class:socksocket
get_random_export_session_key	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^def get_random_export_session_key():$/;"	f
get_rating	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^    def get_rating(info):$/;"	f	function:find_lexer_class_for_filename	file:
get_redirect_location	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def get_redirect_location(self):$/;"	m	class:HTTPResponse
get_redirect_target	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def get_redirect_target(self, resp):$/;"	m	class:SessionRedirectMixin
get_replaced_base	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def get_replaced_base(self, variables):$/;"	m	class:VariableSplitter
get_retry_after	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def get_retry_after(self, response):$/;"	m	class:Retry
get_seal_key	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def get_seal_key(negotiate_flags, exported_session_key, magic_constant):$/;"	f
get_sign_key	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_keys.py	/^def get_sign_key(exported_session_key, magic_constant):$/;"	f
get_sm_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    def get_sm_functions():$/;"	f
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_snippets(self, filetypes, before, possible, autotrigger_only,$/;"	m	class:SnippetSource
get_source	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    get_source = get_code  # same as get_code$/;"	v	class:_SixMetaPathImporter
get_source	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    get_source = get_code  # same as get_code$/;"	v	class:_SixMetaPathImporter
get_style_by_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/__init__.py	/^def get_style_by_name(name):$/;"	f
get_style_defs	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:Formatter
get_style_defs	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def get_style_defs(self, arg=None):$/;"	m	class:HtmlFormatter
get_style_defs	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:ImageFormatter
get_style_defs	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def get_style_defs(self, arg=''):$/;"	m	class:LatexFormatter
get_subj_alt_name	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def get_subj_alt_name(peer_cert):$/;"	f
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_tokendefs	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokendefs(cls):$/;"	m	class:RegexLexerMeta
get_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens(self, text, unfiltered=False):$/;"	m	class:Lexer
get_tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    def get_tokens(self, text):$/;"	m	class:RawTokenLexer
get_tokens_aux	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def get_tokens_aux(self, index, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LatexEmbeddedLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelegatingLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Lexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:ProfilingRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:RegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:ExtendedRegexLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CFamilyLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ArduinoLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CudaLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:CleanLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:YamlLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    def get_tokens_unprocessed(self, text=None, context=None):$/;"	m	class:SnowballLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DylanLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ElixirLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErlangShellLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AsymptoteLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CryptolLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LiterateLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SystemVerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VerilogLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:XsltLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Inform6Lexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, **kwargs):$/;"	m	class:Tads3Lexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    def get_tokens_unprocessed(self, text, stack=('+i6t-root',)):$/;"	m	class:Inform6TemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LassoLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:JuliaConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:AspectJLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:GosuTemplateLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CommonLispLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:EmacsLispLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ShenLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MakefileLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MatlabSessionLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:Modula2Lexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^        def get_tokens_unprocessed(self, text):$/;"	m	class:objective.GeneratedObjectiveCVariant
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SwiftLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:DelphiLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:SourcePawnLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PhpLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:NumPyLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:PythonConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RobotFrameworkLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RubyConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:LuaLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:MoonScriptLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ShellSessionBaseLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:RawTokenLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:TextLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:PostgresConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, data):$/;"	m	class:SqliteConsoleLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def get_tokens_unprocessed(self, text, *args):$/;"	m	class:PostgresBase
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:CheetahPythonLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:ErbLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    def get_tokens_unprocessed(self, text):$/;"	m	class:VimLexer
get_tokens_unprocessed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    def get_tokens_unprocessed(self, text, stack=('root',)):$/;"	m	class:HttpLexer
get_type	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def get_type(self):$/;"	m	class:MockRequest
get_unbound_function	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def get_unbound_function(unbound):$/;"	f
get_unbound_function	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def get_unbound_function(unbound):$/;"	f
get_unicode_from_response	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def get_unicode_from_response(r):$/;"	f
get_user_agent	plugged/vim-wakatime/packages/wakatime/utils.py	/^def get_user_agent(plugin=None):$/;"	f
get_version	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/messages.py	/^def get_version(negotiate_flags):$/;"	f
get_version	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    def get_version():$/;"	f
get_windows_timestamp	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/compute_response.py	/^def get_windows_timestamp():$/;"	f
getallmatchingheaders	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    getallmatchingheaders = getlist$/;"	v	class:HTTPHeaderDict
getboolean	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def getboolean(self, section, option, **kwargs):$/;"	m	class:RawConfigParser
getdefaultproxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^getdefaultproxy = get_default_proxy$/;"	v
getfloat	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def getfloat(self, section, option, **kwargs):$/;"	m	class:RawConfigParser
getheader	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def getheader(self, name, default=None):$/;"	m	class:HTTPResponse
getheaders	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def getheaders(self, name):$/;"	m	class:MockResponse
getheaders	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    getheaders = getlist$/;"	v	class:HTTPHeaderDict
getheaders	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def getheaders(self):$/;"	m	class:HTTPResponse
getint	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def getint(self, section, option, **kwargs):$/;"	m	class:RawConfigParser
getlist	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def getlist(self, key, default=__marker):$/;"	m	class:HTTPHeaderDict
getpeercert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def getpeercert(self, binary_form=False):$/;"	m	class:WrappedSocket
getpeercert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def getpeercert(self, binary_form=False):$/;"	m	class:WrappedSocket
getpeername	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    getpeername = get_peername$/;"	v	class:socksocket
getproxypeername	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    getproxypeername = get_proxy_peername$/;"	v	class:socksocket
getproxysockname	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    getproxysockname = get_proxy_sockname$/;"	v	class:socksocket
getregentry	plugged/vim-wakatime/packages/wakatime/packages/idna/codec.py	/^def getregentry():$/;"	f
gettext	plugged/php.vim/attic/syntax.ini	/^gettext = yes$/;"	k	section:extensions
gettimeout	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def gettimeout(self):$/;"	m	class:socksocket
gettimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def gettimeout(self):$/;"	m	class:WrappedSocket
getting_attrs	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    getting_attrs = False$/;"	v	class:HtmlParser
gi	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> gi          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
git	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "git": null,$/;"	z
gitcommit	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gitcommit": null,$/;"	z
gitconfig	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gitconfig": null,$/;"	z
gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable() abort$/;"	f
gitgutter#buffer_enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable() abort$/;"	f
gitgutter#buffer_toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle() abort$/;"	f
gitgutter#debug#debug	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#level	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#highlight#define_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#next_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage() abort$/;"	f
gitgutter#hunk#summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#init_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#init_buffer(bufnr)$/;"	f
gitgutter#process_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#sign#clear_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#remove_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(bufnr, force) abort$/;"	f
gitgutter#sign#reset	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#getbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#is_active	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
gitrebase	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gitrebase": null,$/;"	z
gitsendemail	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gitsendemail": null,$/;"	z
gkrellmrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gkrellmrc": null,$/;"	z
glob	plugged/coc.nvim/package.json	/^    "glob": "^7.1.3",$/;"	s	object:dependencies
global	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	global: {},$/;"	p	class:jQuery.event
globalSetup	plugged/coc.nvim/package.json	/^    "globalSetup": ".\/jest.js",$/;"	s	object:jest
globals	plugged/coc.nvim/package.json	/^    "globals": {$/;"	o	object:jest
gm2_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    gm2_additional_builtins = ($/;"	v	class:Modula2Lexer
gm2_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    gm2_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
gm2_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    gm2_additional_reserved_words = ($/;"	v	class:Modula2Lexer
gmp	plugged/php.vim/attic/syntax.ini	/^gmp = no$/;"	k	section:extensions
gnuplot	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gnuplot": null,$/;"	z
go	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> go          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
go	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "go": "Go",$/;"	s
gobble	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^    def gobble(self, value, left):$/;"	m	class:GobbleFilter
gosu	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "gosu": "Gosu",$/;"	s
got_enough_data	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def got_enough_data(self):$/;"	m	class:CharDistributionAnalysis
got_enough_data	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def got_enough_data(self):$/;"	m	class:JapaneseContextAnalysis
gp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gp": null,$/;"	z
gpg	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gpg": null,$/;"	z
gq	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> gq   :exe substitute(bufwinnr(b:fugitive_blamed_bufnr).' winc/;"	m
gq	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> gq :<C-U>if bufnr('$') == 1<Bar>quit<Bar>else<Bar>bdelete<Bar>end/;"	m
grads	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "grads": null,$/;"	z
gretl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gretl": null,$/;"	z
groff	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "groff": null,$/;"	z
groovy	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "groovy": "Groovy",$/;"	s
groovy	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "groovy": null,$/;"	z
group	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "group": null,$/;"	z
group	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def group(self, arg=None):$/;"	m	class:_PseudoMatch
groupdict	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def groupdict(self):$/;"	m	class:_PseudoMatch
groups	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def groups(self):$/;"	m	class:_PseudoMatch
grub	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "grub": null,$/;"	z
gs	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> gs          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
gsp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gsp": null,$/;"	z
gtkrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "gtkrc": null,$/;"	z
guess	plugged/far.vim/test/guess.py	/^    guess = int(raw_input('Take a guess: '))$/;"	v
guess_content_type	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^def guess_content_type(filename, default='application\/octet-stream'):$/;"	f
guess_decode	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def guess_decode(text):$/;"	f
guess_decode_from_terminal	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def guess_decode_from_terminal(text, term):$/;"	f
guess_edit	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
guess_filename	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def guess_filename(obj):$/;"	f
guess_json_utf	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def guess_json_utf(data):$/;"	f
guess_language	plugged/vim-wakatime/packages/wakatime/stats.py	/^def guess_language(file_name, local_file):$/;"	f
guess_lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def guess_lexer(_text, **options):$/;"	f
guess_lexer_for_filename	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def guess_lexer_for_filename(_fn, _text, **options):$/;"	f
guess_lexer_using_filename	plugged/vim-wakatime/packages/wakatime/stats.py	/^def guess_lexer_using_filename(file_name, text):$/;"	f
guess_lexer_using_modeline	plugged/vim-wakatime/packages/wakatime/stats.py	/^def guess_lexer_using_modeline(text):$/;"	f
guesses_made	plugged/far.vim/test/guess.py	/^guesses_made = 0$/;"	v
guid	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	guid: 1,$/;"	p	class:jQuery.event
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_io_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
h1	plugged/emmet-vim/docs/static/css/style-sites.css	/^h1 {$/;"	s
h3 a	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
h3 a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
haml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "haml": "Haml",$/;"	s
haml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "haml": "Haml",$/;"	s
hamster	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hamster": null,$/;"	z
handle	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var handle = jQuery.data( elem, "handle" );$/;"	v	class:jQuery.event
handle	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var handle = jQuery.data(elem, "handle");$/;"	v
handle_401	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def handle_401(self, r, **kwargs):$/;"	m	class:HTTPDigestAuth
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_context(tail, line_index):$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_redirect	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def handle_redirect(self, r, **kwargs):$/;"	m	class:HTTPDigestAuth
handler	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var handler = handlers[j];$/;"	v
handlers	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
handshake	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def handshake(self,$/;"	m	class:WrappedSocket
has_content	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    has_content = False$/;"	v	class:PygmentsDoc
has_header	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def has_header(self, name):$/;"	m	class:MockRequest
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_option	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def has_option(self, section, option):$/;"	m	class:RawConfigParser
has_section	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def has_section(self, section):$/;"	m	class:RawConfigParser
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
hash	plugged/php.vim/attic/syntax.ini	/^hash = yes$/;"	k	section:extensions
haskell	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "haskell": "Haskell",$/;"	s
haskell	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "haskell": "Haskell",$/;"	s
haste	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "haste": null,$/;"	z
hastepreproc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hastepreproc": null,$/;"	z
haxe	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "haxe": "Haxe",$/;"	s
hb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hb": null,$/;"	z
hd	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^    hd = r'[0-9A-Ha-h]'$/;"	v	class:HexdumpLexer
head	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def head(url, **kwargs):$/;"	f
head	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def head(self, url, **kwargs):$/;"	m	class:Session
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
header	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^    header = content[:content.find('FORMATTERS = {')]$/;"	v
header	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^    header = content[:content.find('LEXERS = {')]$/;"	v
header	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    header = content[:content.find('# Autogenerated')]$/;"	v
header	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^    header = content[:content.find('Cc =')]$/;"	v
headerFilePath	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            headerFilePath = frameworkHeadersDir + f$/;"	v
headerFilenames	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^        headerFilenames = os.listdir(frameworkHeadersDir)$/;"	v
header_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    def header_callback(self, match):$/;"	m	class:HttpLexer
health#coc#check	plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
help	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "help": null,$/;"	z
hercules	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hercules": null,$/;"	z
heredoc_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    def heredoc_callback(self, match, ctx):$/;"	m	class:CrystalLexer
heredoc_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    def heredoc_callback(self, match, ctx):$/;"	m	class:RubyLexer
hex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hex": null,$/;"	z
hex_char_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    hex_char_re = r'(\\\\x[\\da-fA-F]{1,2})'$/;"	v	class:ElixirLexer
hexadump	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function hexadump (s)$/;"	f
hexfloat	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    hexfloat = r'0[xX](([0-9a-fA-F]+\\.[0-9a-fA-F]*)|([0-9a-fA-F]*\\.[0-9a-fA-F]+))[pP][+-]?\\d+/;"	v	class:HsailLexer
hexn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    hexn = r'(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)'$/;"	v	class:NasmLexer
hexn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    hexn = r'(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)'$/;"	v	class:TasmLexer
hide	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(){$/;"	m	class:jQuery.fx
highlight	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^def highlight(code, lexer, formatter, outfile=None):$/;"	f
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    highlight_color = '#ffffcc'$/;"	v	class:Style
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/fruity.py	/^    highlight_color = '#333333'$/;"	v	class:FruityStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/monokai.py	/^    highlight_color = "#49483e"$/;"	v	class:MonokaiStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/native.py	/^    highlight_color = '#404040'$/;"	v	class:NativeStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoDarkStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^    highlight_color = SELECTION$/;"	v	class:ParaisoLightStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rrt.py	/^    highlight_color = '#0000ff'$/;"	v	class:RrtStyle
highlight_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vim.py	/^    highlight_color = "#222222"$/;"	v	class:VimStyle
hog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hog": null,$/;"	z
homepage	plugged/coc.nvim/package.json	/^  "homepage": "https:\/\/github.com\/neoclide\/coc.nvim#readme",$/;"	s
host	plugged/coc.nvim/data/schema.json	/^        "host": {$/;"	o	object:definitions.languageServerSocket.properties
host	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def host(self):$/;"	m	class:MockRequest
hostconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "hostconf": null,$/;"	z
hostname	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def hostname(self):$/;"	m	class:Url
howworkthis	plugged/emmet-vim/docs/index.html	/^			<article id="howworkthis">$/;"	I
html	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "html": "HTML",$/;"	s
html	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "html": "HTML",$/;"	s
html.filetypes	coc-settings.json	/^  "html.filetypes": [ "html", "vue"],$/;"	a
html_doctype_matches	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def html_doctype_matches(text):$/;"	f
htmlcheetah	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "htmlcheetah": "HTML",$/;"	s
htmldjango	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "htmldjango": "HTML",$/;"	s
htmlm4	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "htmlm4": "HTML",$/;"	s
htmlos	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "htmlos": null,$/;"	z
http.proxy	plugged/coc.nvim/data/schema.json	/^    "http.proxy": {$/;"	o	object:properties
http.proxyStrictSSL	plugged/coc.nvim/data/schema.json	/^    "http.proxyStrictSSL": {$/;"	o	object:properties
httplib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^from .packages.six.moves import http_client as httplib$/;"	x
httplib	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/response.py	/^from ..packages.six.moves import http_client as httplib$/;"	x
httplib_IncompleteRead	plugged/vim-wakatime/packages/wakatime/packages/urllib3/exceptions.py	/^    IncompleteRead as httplib_IncompleteRead$/;"	x
https://example.com	plugged/coc.nvim/src/__tests__/modules/settings.json	/^    "https:\/\/example.com": "*.yaml"$/;"	s	object:schema
hy_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    hy_builtins = ()$/;"	v	class:HyLexer
hy_core	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    hy_core = ($/;"	v	class:HyLexer
i	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> i <NOP>$/;"	m
i	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
i	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> i :call far#change_exclude_under_cursor(0)<cr>$/;"	m
i	plugged/far.vim/autoload/far.vim	/^    vnoremap <buffer><silent> i :call far#change_exclude_under_cursor(0)<cr>$/;"	m
i	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> i           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
i	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> i           :call b:buffergator_catalog_viewer.cycle_displ/;"	m
i	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> i    :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
i	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> i :<C-U>let b:fugitive_display_format -= v:count1<Bar>exe fug/;"	m
i	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> i :<C-U>execute <SID>StageIntend(v:count1)<CR>$/;"	m
i	plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    i = 0$/;"	v	class:ARC4
ia64	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ia64": null,$/;"	z
ibasic	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ibasic": null,$/;"	z
ic	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ic <Plug>GitGutterTextObjectInnerPending$/;"	m
ic	plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ic <Plug>GitGutterTextObjectInnerVisual$/;"	m
icemenu	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "icemenu": null,$/;"	z
icon	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "icon": null,$/;"	z
iconv	plugged/php.vim/attic/syntax.ini	/^iconv = yes$/;"	k	section:extensions
id_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    def id_callback(self, match):$/;"	m	class:SMLLexer
iden_rex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    iden_rex = r'[a-zA-Z_][\\w\\']*'$/;"	v	class:AlloyLexer
ident	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    ident = r'(?:_*[a-z]\\w*|_+[0-9]\\w*|' + typeid + '|_+|\\$\\w+)'$/;"	v	class:HaxeLexer
ident_no_keyword	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    ident_no_keyword = r'(?!' + keyword + ')' + ident$/;"	v	class:HaxeLexer
ident_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    ident_re = r'(([a-zA-Z_]\\w*)|(`[^`]*`))'$/;"	v	class:OpaLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    identifier = r'[$a-zA-Z_]\\w*'$/;"	v	class:ActionScript3Lexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    identifier = r'(?:[a-zA-Z$_]' + char + '*|\\.' + char + '+)'$/;"	v	class:GasLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    identifier = r'([-a-zA-Z$._][\\w\\-$.]*|' + string + ')'$/;"	v	class:LlvmLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    identifier = r'[@a-z$._?][\\w$.?#@~]*'$/;"	v	class:TasmLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    identifier = r'[a-z$._?][\\w$.?#@~]*'$/;"	v	class:NasmLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    identifier = r'[a-zA-Z_][\\w.]*'$/;"	v	class:HsailLexer
identifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    identifier = r'[a-zA-Z_]\\w*'$/;"	v	class:VelocityLexer
identity	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def identity(string):$/;"	f	member:ArgumentParser.__init__	file:
idl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "idl": null,$/;"	z
idlang	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "idlang": null,$/;"	z
idna_encode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def idna_encode(name):$/;"	f	function:_dnsname_to_stdlib	file:
idrest	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    idrest = u'%s(?:%s|[0-9])*(?:(?<=_)%s)?' % (letter, letter, op)$/;"	v	class:ScalaLexer
ieeefloat	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    ieeefloat = r'0((h|H)[0-9a-fA-F]{4}|(f|F)[0-9a-fA-F]{8}|(d|D)[0-9a-fA-F]{16})'$/;"	v	class:HsailLexer
ifExtensionEnabled	plugged/php.vim/attic/20-generate.php	/^$ifExtensionEnabled = function ($extensionName) {$/;"	f
iget	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    iget = getlist$/;"	v	class:HTTPHeaderDict
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {$/;"	o	object:definitions.languageServerBase.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerCommand.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerModule.properties
ignoredRootPaths	plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerSocket.properties
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['H']$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['e', 'H']$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['e']$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
image_repro	plugged/ultisnips/Makefile	/^image_repro: image_vim_80_py3$/;"	t
image_vim_74_py2	plugged/ultisnips/Makefile	/^image_vim_74_py2:$/;"	t
image_vim_74_py3	plugged/ultisnips/Makefile	/^image_vim_74_py3:$/;"	t
image_vim_80_py2	plugged/ultisnips/Makefile	/^image_vim_80_py2:$/;"	t
image_vim_80_py3	plugged/ultisnips/Makefile	/^image_vim_80_py3:$/;"	t
image_vim_git_py2	plugged/ultisnips/Makefile	/^image_vim_git_py2:$/;"	t
image_vim_git_py3	plugged/ultisnips/Makefile	/^image_vim_git_py3:$/;"	t
imap	plugged/php.vim/attic/syntax.ini	/^imap = no$/;"	k	section:extensions
img	plugged/emmet-vim/docs/static/css/style-sites.css	/^img {$/;"	s
importHelpers	plugged/coc.nvim/tsconfig.json	/^    "importHelpers": true,$/;"	b	object:compilerOptions
import_module	plugged/vim-wakatime/packages/wakatime/compat.py	/^    def import_module(name, package=None):$/;"	f
imports	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^    imports = []$/;"	v
include	plugged/coc.nvim/tsconfig.json	/^  "include": ["src"],$/;"	a
include	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class include(str):  # pylint: disable=invalid-name$/;"	c
increment	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def increment(self, method=None, url=None, response=None, error=None,$/;"	m	class:Retry
indent	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "indent": null,$/;"	z
indent	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *indent;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
indentLine	plugged/indentLine/README.md	/^indentLine$/;"	c
indentLine	plugged/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
indent_len	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def indent_len(text):$/;"	m	class:CleanLexer
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
index	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					var index = elem.selectedIndex,$/;"	v
indexbytes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def indexbytes(buf, i):$/;"	f
indexbytes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    indexbytes = operator.getitem$/;"	v
indexbytes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def indexbytes(buf, i):$/;"	f
indexbytes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    indexbytes = operator.getitem$/;"	v
infix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    infix_syms = r'[=<>@^|&+\\*\/$%-]'$/;"	v	class:FSharpLexer
infix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    infix_syms = r'[=<>@^|&+\\*\/$%-]'$/;"	v	class:OcamlLexer
infix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    infix_syms = r'[=<>@^|&+\\*\/$%-]'$/;"	v	class:CoqLexer
info	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def info(self):$/;"	m	class:MockResponse
info	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^def info():$/;"	f
info	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def info(self):$/;"	m	class:HTTPResponse
inform	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "inform": null,$/;"	z
inherit	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^inherit = _inherit()  # pylint: disable=invalid-name$/;"	v
ini	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "ini": "INI",$/;"	s
init	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.init.prototype = jQuery.fn;$/;"	c	class:jQuery.fn
init-author	plugged/javascript-libraries-syntax.vim/Makefile	/^init-author:$/;"	t
init-runtime	plugged/javascript-libraries-syntax.vim/Makefile	/^init-runtime:$/;"	t
init_per_thread_state	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^    def init_per_thread_state(self):$/;"	m	class:HTTPDigestAuth
init_poolmanager	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def init_poolmanager(self, connections, maxsize, block=DEFAULT_POOLBLOCK, **pool_kwargs):$/;"	m	class:HTTPAdapter
init_speedups	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^init_speedups(void)$/;"	f	typeref:typename:void
initex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "initex": null,$/;"	z
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {$/;"	o	object:definitions.languageServerBase.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerCommand.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerModule.properties
initializationOptions	plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerSocket.properties
initng	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "initng": null,$/;"	z
inittab	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "inittab": null,$/;"	z
inject_into_urllib3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^def inject_into_urllib3():$/;"	f
inject_into_urllib3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^def inject_into_urllib3():$/;"	f
innerstring_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def innerstring_rules(ttype):$/;"	m	class:Python3Lexer
innerstring_rules	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    def innerstring_rules(ttype):$/;"	m	class:PythonLexer
ins_cl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    ins_cl = r"\\+\\}"$/;"	v	class:WDiffLexer
ins_op	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    ins_op = r"\\{\\+"$/;"	v	class:WDiffLexer
install	plugged/emmet-vim/docs/index.html	/^			<article id="install">$/;"	I
install	plugged/javascript-libraries-syntax.vim/Makefile	/^install: init-runtime bundle pure-install record$/;"	t
install-deps	plugged/javascript-libraries-syntax.vim/Makefile	/^install-deps:$/;"	t
install_file	plugged/javascript-libraries-syntax.vim/Makefile	/^install_file = \\$/;"	m
install_git_source	plugged/javascript-libraries-syntax.vim/Makefile	/^install_git_source = \\$/;"	m
install_source	plugged/javascript-libraries-syntax.vim/Makefile	/^install_source = \\$/;"	m
install_yarn	plugged/coc.nvim/install.sh	/^install_yarn() {$/;"	f
installedModules	plugged/coc.nvim/build/index.js	/^\/******\/ 	var installedModules = {};$/;"	v
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
int2byte	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    int2byte = chr$/;"	v
int2byte	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    int2byte = struct.Struct(">B").pack$/;"	v
int2byte	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    int2byte = chr$/;"	v
int2byte	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    int2byte = struct.Struct(">B").pack$/;"	v
int_part	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    int_part = r'-?(0|[1-9]\\d*)'$/;"	v	class:JsonLexer
integer_types	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    integer_types = (int,)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    integer_types = (int,)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    integer_types = int,$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    integer_types = (int, long)$/;"	v
integer_types	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    integer_types = int,$/;"	v
interbase	plugged/php.vim/attic/syntax.ini	/^interbase = no$/;"	k	section:extensions
interface	plugged/coc.nvim/data/schema.json	/^        "interface": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
intl	plugged/php.vim/attic/syntax.ini	/^intl = no$/;"	k	section:extensions
intp_regex_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^        def intp_regex_callback(self, match, ctx):$/;"	f	member:CrystalLexer.gen_crystalstrings_rules	file:
intp_regex_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^        def intp_regex_callback(self, match, ctx):$/;"	f	member:RubyLexer.gen_rubystrings_rules	file:
intp_string_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^        def intp_string_callback(self, match, ctx):$/;"	f	member:CrystalLexer.gen_crystalstrings_rules	file:
intp_string_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^        def intp_string_callback(self, match, ctx):$/;"	f	member:RubyLexer.gen_rubystrings_rules	file:
intranges_contain	plugged/vim-wakatime/packages/wakatime/packages/idna/intranges.py	/^def intranges_contain(int_, ranges):$/;"	f
intranges_from_list	plugged/vim-wakatime/packages/wakatime/packages/idna/intranges.py	/^def intranges_from_list(list_):$/;"	f
ip_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    ip_re = ($/;"	v	class:SquidConfLexer
ipaddress	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^    ipaddress = None$/;"	v
ipfilter	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ipfilter": null,$/;"	z
ircformat	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^def ircformat(color, text):$/;"	f
isArrayLike	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector./;"	v
isCommentLine	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^        def isCommentLine(line):$/;"	f	member:EasytrieveLexer.analyse_text	file:
isEmptyLine	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^        def isEmptyLine(line):$/;"	f	member:EasytrieveLexer.analyse_text	file:
isSimple	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isSimple = \/^.[^:#\\[\\.]*$\/,$/;"	v
isVim	plugged/coc.nvim/bin/server.js	/^const isVim = process.env.VIM_NODE_RPC == '1'$/;"	C
isWindows	plugged/coc.nvim/bin/server.js	/^const isWindows = process.platform == 'win32'$/;"	C
is_appengine	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^def is_appengine():$/;"	f
is_appengine_sandbox	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^def is_appengine_sandbox():$/;"	f
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_connection_dropped	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/connection.py	/^def is_connection_dropped(conn):  # Platform-specific$/;"	f
is_exhausted	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def is_exhausted(self):$/;"	m	class:Retry
is_final	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def is_final(self, c):$/;"	m	class:HebrewProber
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_fp_closed	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/response.py	/^def is_fp_closed(obj):$/;"	f
is_in	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    def is_in(self, w, mapping):$/;"	m	class:VimLexer
is_in_coroutine_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_coroutine_module(name):$/;"	f	function:module_callbacks	file:
is_in_debug_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_debug_module(name):$/;"	f	function:module_callbacks	file:
is_in_io_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_io_module(name):$/;"	f	function:module_callbacks	file:
is_in_math_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_math_module(name):$/;"	f	function:module_callbacks	file:
is_in_modules_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_modules_module(name):$/;"	f	function:module_callbacks	file:
is_in_os_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_os_module(name):$/;"	f	function:module_callbacks	file:
is_in_string_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_string_module(name):$/;"	f	function:module_callbacks	file:
is_in_table_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^        def is_in_table_module(name):$/;"	f	function:module_callbacks	file:
is_ipv4_address	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def is_ipv4_address(string_ip):$/;"	f
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_local_appengine	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^def is_local_appengine():$/;"	f
is_non_final	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def is_non_final(self, c):$/;"	m	class:HebrewProber
is_package	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def is_package(self, fullname):$/;"	m	class:_SixMetaPathImporter
is_package	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def is_package(self, fullname):$/;"	m	class:_SixMetaPathImporter
is_permanent_redirect	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def is_permanent_redirect(self):$/;"	m	class:Response
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_prod_appengine	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^def is_prod_appengine():$/;"	f
is_prod_appengine_mvms	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^def is_prod_appengine_mvms():$/;"	f
is_py2	plugged/vim-wakatime/packages/wakatime/compat.py	/^is_py2 = (sys.version_info[0] == 2)$/;"	v
is_py2	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^is_py2 = (_ver[0] == 2)$/;"	v
is_py3	plugged/vim-wakatime/packages/wakatime/compat.py	/^is_py3 = (sys.version_info[0] == 3)$/;"	v
is_py3	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^is_py3 = (_ver[0] == 3)$/;"	v
is_redirect	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def is_redirect(self):$/;"	m	class:Response
is_response_to_head	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/response.py	/^def is_response_to_head(response):$/;"	f
is_retry	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def is_retry(self, method, status_code, has_retry_after=False):$/;"	m	class:Retry
is_same_host	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def is_same_host(self, url):$/;"	m	class:HTTPConnectionPool
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_token_subtype	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^def is_token_subtype(ttype, other):$/;"	f
is_unverifiable	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def is_unverifiable(self):$/;"	m	class:MockRequest
is_valid_cidr	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def is_valid_cidr(string_network):$/;"	f
is_verified	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    is_verified = False$/;"	v	class:HTTPConnection
is_win	plugged/vim-wakatime/packages/wakatime/compat.py	/^is_win = platform.system() == 'Windows'$/;"	v
is_write	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    is_write = None$/;"	v	class:Heartbeat
ishd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ishd": null,$/;"	z
iso_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_additional_builtins = ($/;"	v	class:Modula2Lexer
iso_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
iso_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_additional_reserved_words = ($/;"	v	class:Modula2Lexer
iso_lexemes_to_reject	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_lexemes_to_reject = ($/;"	v	class:Modula2Lexer
iso_stdlib_const_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_stdlib_const_identifiers = ($/;"	v	class:Modula2Lexer
iso_stdlib_module_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_stdlib_module_identifiers = ($/;"	v	class:Modula2Lexer
iso_stdlib_proc_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_stdlib_proc_identifiers = ($/;"	v	class:Modula2Lexer
iso_stdlib_type_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_stdlib_type_identifiers = ($/;"	v	class:Modula2Lexer
iso_stdlib_var_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    iso_stdlib_var_identifiers = ($/;"	v	class:Modula2Lexer
iss	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "iss": null,$/;"	z
ist	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ist": null,$/;"	z
isuri	plugged/coc.nvim/package.json	/^    "isuri": "^2.0.3",$/;"	s	object:dependencies
item_separator	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_separator;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
item_separator	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    item_separator = ', '$/;"	v	class:JSONEncoder
item_sort_key	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_sort_key;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
item_sort_kw	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *item_sort_kw;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.additionalSchemes
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.filetypes
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.ignoredRootPaths
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.rootPatterns
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerCommand.properties.args
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.args
items	plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.execArgv
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnSaveFiletypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.rootPatterns
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.around.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.buffer.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.disableSyntaxes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.ignorePatterns
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.triggerCharacters
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.trimSameExts
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.outline.ctagsFilestypes
items	plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.ignoredFiletypes
items	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def items(self):$/;"	m	class:Heartbeat
items	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def items(self, section=_UNSET, raw=False, vars=None):$/;"	m	class:RawConfigParser
items	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    items = DictMixin.items$/;"	v	class:OrderedDict
items	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def items(self):$/;"	m	class:RequestsCookieJar
items	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    items = DictMixin.items$/;"	v	class:OrderedDict
items	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def items(self):$/;"	m	class:HTTPHeaderDict
items	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def items(self):$/;"	m	class:OrderedDict
iter_content	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def iter_content(self, chunk_size=1, decode_unicode=False):$/;"	m	class:Response
iter_entry_points	plugged/vim-wakatime/packages/wakatime/packages/pygments/plugin.py	/^def iter_entry_points(group_name):$/;"	f
iter_field_objects	plugged/vim-wakatime/packages/wakatime/packages/urllib3/filepost.py	/^def iter_field_objects(fields):$/;"	f
iter_fields	plugged/vim-wakatime/packages/wakatime/packages/urllib3/filepost.py	/^def iter_fields(fields):$/;"	f
iter_lines	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def iter_lines(self, chunk_size=ITER_CHUNK_SIZE, decode_unicode=None, delimiter=None):$/;"	m	class:Response
iter_primes	plugged/far.vim/test/prime.py	/^def iter_primes():$/;"	f
iter_slices	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def iter_slices(string, slice_length):$/;"	f
iterable_as_array	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int iterable_as_array;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
iterbytes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    iterbytes = functools.partial(itertools.imap, ord)$/;"	v
iterbytes	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    iterbytes = iter$/;"	v
iterbytes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    iterbytes = functools.partial(itertools.imap, ord)$/;"	v
iterbytes	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    iterbytes = iter$/;"	v
iterencode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def iterencode(self, o, _one_shot=False):$/;"	m	class:JSONEncoder
iterencode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def iterencode(self, o, _one_shot=False):$/;"	m	class:JSONEncoderForHTML
iteritems	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    iteritems = DictMixin.iteritems$/;"	v	class:OrderedDict
iteritems	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    iteritems = dict.items$/;"	v
iteritems	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    iteritems = dict.iteritems$/;"	v
iteritems	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def iteritems(self):$/;"	m	class:RequestsCookieJar
iteritems	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    iteritems = DictMixin.iteritems$/;"	v	class:OrderedDict
iteritems	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def iteritems(d, **kw):$/;"	f
iteritems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def iteritems(self):$/;"	m	class:HTTPHeaderDict
iteritems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def iteritems(self):$/;"	m	class:OrderedDict
iteritems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def iteritems(d, **kw):$/;"	f
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    iterkeys = DictMixin.iterkeys$/;"	v	class:OrderedDict
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def iterkeys(self):$/;"	m	class:RequestsCookieJar
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    iterkeys = DictMixin.iterkeys$/;"	v	class:OrderedDict
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def iterkeys(d, **kw):$/;"	f
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^        iterkeys = MutableMapping.iterkeys$/;"	v	class:HTTPHeaderDict
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def iterkeys(self):$/;"	m	class:OrderedDict
iterkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def iterkeys(d, **kw):$/;"	f
iterlists	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def iterlists(d, **kw):$/;"	f
iterlists	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def iterlists(d, **kw):$/;"	f
itermerged	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def itermerged(self):$/;"	m	class:HTTPHeaderDict
itervalues	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    itervalues = DictMixin.itervalues$/;"	v	class:OrderedDict
itervalues	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    itervalues = dict.itervalues$/;"	v
itervalues	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    itervalues = dict.values$/;"	v
itervalues	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def itervalues(self):$/;"	m	class:RequestsCookieJar
itervalues	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    itervalues = DictMixin.itervalues$/;"	v	class:OrderedDict
itervalues	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def itervalues(d, **kw):$/;"	f
itervalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^        itervalues = MutableMapping.itervalues$/;"	v	class:HTTPHeaderDict
itervalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def itervalues(self):$/;"	m	class:OrderedDict
itervalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def itervalues(d, **kw):$/;"	f
j	plugged/ack.vim/autoload/ack.vim	/^    nnoremap <buffer> <silent> j j<CR><C-W><C-P>$/;"	m
j	plugged/ack.vim/ftplugin/qf.vim	/^  nnoremap <buffer> j jzz$/;"	m
j	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    j = 0$/;"	v	class:ARC4
jQuery	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var jQuery = window.jQuery = window.$ = function( selector, context ) {$/;"	v
jade	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "jade": "Jade",$/;"	s
jal	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jal": null,$/;"	z
jam	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jam": null,$/;"	z
jargon	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jargon": null,$/;"	z
java	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "java": "Java",$/;"	s
java	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "java": "Java",$/;"	s
javacc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "javacc": null,$/;"	z
javascript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "javascript": "JavaScript",$/;"	s
javascript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "javascript": "JavaScript",$/;"	s
javascript-libraries-syntax.vim	plugged/javascript-libraries-syntax.vim/README.md	/^javascript-libraries-syntax.vim$/;"	c
javascript_syntax_detection	plugged/vim-javascript/ftdetect/javascript.vim	/^augroup javascript_syntax_detection$/;"	a
jellybeans	plugged/lightline.vim/README.md	/^### jellybeans$/;"	S
jess	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jess": null,$/;"	z
jest	plugged/coc.nvim/package.json	/^    "jest": "24.7.0",$/;"	s	object:devDependencies
jest	plugged/coc.nvim/package.json	/^  "jest": {$/;"	o
jgraph	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jgraph": null,$/;"	z
jj	config/03.remaps.vim	/^ino jj <esc>$/;"	m
join_list_string	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^#define join_list_string /;"	d	file:
join_list_string	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^join_list_string(PyObject *lst)$/;"	f	typeref:typename:PyObject *	file:
join_list_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^join_list_unicode(PyObject *lst)$/;"	f	typeref:typename:PyObject *	file:
joining_types	plugged/vim-wakatime/packages/wakatime/packages/idna/idnadata.py	/^joining_types = {$/;"	v
jp2CharContext	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^jp2CharContext = ($/;"	v
jproperties	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jproperties": null,$/;"	z
jslibsyntax#load	plugged/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^function! jslibsyntax#load()$/;"	f
json	plugged/php.vim/attic/syntax.ini	/^json = yes$/;"	k	section:extensions
json	plugged/vim-wakatime/packages/wakatime/compat.py	/^    from .packages import simplejson as json$/;"	x
json	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def json(self):$/;"	m	class:Heartbeat
json	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "json": "JSON",$/;"	s
json	plugged/vim-wakatime/packages/wakatime/logger.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	x
json	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    import simplejson as json$/;"	I
json	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def json(self, **kwargs):$/;"	m	class:Response
json	plugged/vim-wakatime/packages/wakatime/packages/simplejson/tool.py	/^import simplejson as json$/;"	I
json	plugged/vim-wakatime/packages/wakatime/stats.py	/^    from .packages import simplejson as json  # pragma: nocover$/;"	x
json_PyOS_string_to_double	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^json_PyOS_string_to_double(const char *s, char **endptr, PyObject *overflow_exception)$/;"	f	typeref:typename:double	file:
jsonc-parser	plugged/coc.nvim/package.json	/^    "jsonc-parser": "^2.1.0",$/;"	s	object:dependencies
jsp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "jsp": null,$/;"	z
jsx	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "jsx": "JSX",$/;"	s
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
k	plugged/ack.vim/autoload/ack.vim	/^    nnoremap <buffer> <silent> k k<CR><C-W><C-P>$/;"	m
kCFStringEncodingUTF8	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kCFStringEncodingUTF8 = CFStringEncoding(0x08000100)$/;"	v	class:CFConst
kSSLClientSide	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSSLClientSide = 1$/;"	v	class:SecurityConst
kSSLProtocol2	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSSLProtocol2 = 1$/;"	v	class:SecurityConst
kSSLProtocol3	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSSLProtocol3 = 2$/;"	v	class:SecurityConst
kSSLSessionOptionBreakOnServerAuth	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSSLSessionOptionBreakOnServerAuth = 0$/;"	v	class:SecurityConst
kSSLStreamType	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSSLStreamType = 0$/;"	v	class:SecurityConst
kSecFormatPEMSequence	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecFormatPEMSequence = 10$/;"	v	class:SecurityConst
kSecTrustResultDeny	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultDeny = 3$/;"	v	class:SecurityConst
kSecTrustResultFatalTrustFailure	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultFatalTrustFailure = 6$/;"	v	class:SecurityConst
kSecTrustResultInvalid	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultInvalid = 0$/;"	v	class:SecurityConst
kSecTrustResultOtherError	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultOtherError = 7$/;"	v	class:SecurityConst
kSecTrustResultProceed	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultProceed = 1$/;"	v	class:SecurityConst
kSecTrustResultRecoverableTrustFailure	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultRecoverableTrustFailure = 5$/;"	v	class:SecurityConst
kSecTrustResultUnspecified	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kSecTrustResultUnspecified = 4$/;"	v	class:SecurityConst
kTLSProtocol1	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kTLSProtocol1 = 4$/;"	v	class:SecurityConst
kTLSProtocol11	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kTLSProtocol11 = 7$/;"	v	class:SecurityConst
kTLSProtocol12	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^    kTLSProtocol12 = 8$/;"	v	class:SecurityConst
kconfig	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "kconfig": null,$/;"	z
key56_to_key64	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^def key56_to_key64(key_56):$/;"	f
key_fn_by_scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^key_fn_by_scheme = {$/;"	v
key_memo	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *key_memo;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
key_separator	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *key_separator;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
key_separator	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    key_separator = ': '$/;"	v	class:JSONEncoder
keyopts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    keyopts = [$/;"	v	class:FSharpLexer
keyopts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    keyopts = ($/;"	v	class:OcamlLexer
keyopts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyopts = ($/;"	v	class:CoqLexer
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = ' ' + EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = '123 abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc ' + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'blah blah abc' + EA$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_Autocommands.py	/^    keys = 'test' + EX + 'test' + EX + 'bar' + JF + JF + ' done ' + ESC + \\$/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'a'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'a\\na'$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'if' + EX + '=' + ESC + 'o='$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'oouu trig b' + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'hüüll'$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text' + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + JF + 'more text' + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'z' + JF + 'y'$/;"	v	class:MultiLineDefault_Type
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:LeaveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:RemoveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'y'$/;"	v	class:MultiLineDefault_BS
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + JF + 'y'$/;"	v	class:MultiLineDefault_Jump
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'teüst' + EX$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'ööuu trig b' + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = 'superkallifragilistik\\ntest' + EX + 'sup' + COMPL_KW + \\$/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + 'test' + EX + 'com' + COMPL_KW + JF + 'foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + 'test' + EX + 'foo' + JF + 'com' + COMPL_KW + \\$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "123" + ESC + "vhh" + EX + "test" + EX + " zzz" + ESC + \\$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'i' + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = r"""$/;"	v	class:ContextSnippets_SnippetPriority
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'first line\\n\\n\\n\\n\\n\\nthird line' + \\$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'hello test' + EX + 'upsi' + ESC + 'hh' + 'iabcdef' + ESC + 'u'$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + 'feh' + ESC + 'uuuu'$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + ESC + 'u'$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'uu'$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + 'test' + EX + ESC + 'u' + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + BS + JF + 'Int' + JF + 'body'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'aaaaa' + JF + BS + JF + '3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'Vkx' + 'i\\nworld\\n'$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'ddi' + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'j2dd'$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddi' + JB + 'hello'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddkji' + JB + 'hello' + JF + 'world'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX+ 'a b c' + JF + 'shallnot'$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX + 'Huiui!'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nhallo' + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + 'and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'na du hallo' + EX + 'and again\\b\\b\\b\\b\\bblub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'test' + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = '  test' + EX + 'hello' + JF + 'world' + JF + 'blub'$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = '\\t\\t\\tpd' + EX + '2'$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'blahfasel' + ESC + 'v' + 4 * ARR_L + \\$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'test' + EX + 'foo'$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'test' + EX + ESC + \\$/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'yank' + ESC + 'by4lea test' + EX + 'HELLO' + JF + JF + ESC + 'p'$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'fold' + EX + 'hi' + ESC + 'jdd'$/;"	v	class:Fold_DeleteMiddleLine_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'fold' + EX + 'hi'$/;"	v	class:FoldOverwrite_Simple_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'test' + EX + 'Ball'$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'test' + EX + JF + 'sub junk {}'$/;"	v	class:PerlSyntaxFold
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + 'Hui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + '\\n' + 'blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + 'blah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'inc' + EX + 'cstdl'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'inc' + EX + 'foo'$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'm' + EX + 'm1' + EX + '\\nHallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'm' + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'test' + EX + 'This is a longer text that should wrap'$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'test' + EX + \\$/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ('test' + EX + 'This is a longer snippet that should wrap properly '$/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ('test' + EX + 'This is a longersnippet that should wrap properly')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """    test""" + EX$/;"	v	class:PythonCode_IndentEtSwOffset
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentEtSw
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentNoetSwTs
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """$/;"	v	class:PythonCode_MultiAppendShift
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """$/;"	v	class:PythonCode_MultiAppendShiftMethods
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """$/;"	v	class:PythonCode_MultiAppendSimpleIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """$/;"	v	class:PythonCode_ResetIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """$/;"	v	class:PythonCode_SimpleMkline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + 'ups'$/;"	v	class:PythonCode_LongerTextThanSource_Chars
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + 'ups'$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_Locals
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptNoExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ' ' * 8 + 'test' + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'blah' + ', bah'$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCode_ReferencePlaceholder
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'overwrite' + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + ESC$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v	class:TabStop_Shell_ShebangPython
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'okay'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:Python_WeirdScoping_Error
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'ups test' + EX$/;"	v	class:PythonCode_TrickyReferences
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = ' ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = '' + LS + '3\\n'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo qualle' + LS + 'Hi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '1\\n'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '2\\n'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = '} ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'for' + EX + '100' + JF + 'avar\\b\\b\\b\\ba_variable' + JF + \\$/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'auch' + ESC + \\$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'auch' + ESC + \\$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'auch' + ESC + \\$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'auch' + ESC + \\$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'elt'$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi\\b\\bAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du\\nwie gehts'$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\b'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\bhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hi' + JF + 'hu' + JF + 'hub' + JF + 'hulla' + \\$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + JF + 'end'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + BS + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'ups test blah' + ESC + '02f i' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = '<trh' + EX + 'blah' + JF + BS + BS + JF + 'end'$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + 1 * ARR_U + '\\n' + JF + \\$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + 2 * ARR_D + JF + \\$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + 3 * ARR_L + \\$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + 4 * ARR_L + \\$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + 7 * ARR_L + \\$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + JF + 'hallo'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + \\$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'text' + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'this is something\\nvery nice\\nnot' + JF + 'more text'$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'this' + 2 * ARR_L + 'hallo\\nwelt'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + ' ' + ESC + ESC + 'ahi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '0\\n' + 'hi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '1\\n'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '2\\n'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '5\\n'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + ESC + 'hi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'ab' + EX + '\\nac' + EX$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'ab' + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'abc def' + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'foo' + EX + ' bar' + EX + '\\nbar' + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'inv snip' + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'snip test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'snippet test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test test test' + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ('longtextlongtext\\n' +$/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'form_for user, namespace: some_namespace, html: {i' + EX + 'i' + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + '    hallo m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + '    m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hello m' + EX + 'hi' + JF + 'two' + JF + 'ups' + JF + 'three' + \\$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hello m' + EX + 'world m' + EX + 'end'$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hello\\nhello again m' + EX + 'hi' + JF + 'two' + \\$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hello\\nm' + EX + 'hi' + JF + 'two' + JF + 'ups' + JF + 'three' + \\$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hi' + JF + 'm' + EX + 'again' + JF + 'm1' + \\$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hi' + JF + 'm' + EX + \\$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hi' + JF + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'a' + 3 * ARR_L + JF + 'hallo' + \\$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'a' + 4 * ARR_L + JF + 'hallo' + \\$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + 'world' + JF + JF + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + JF + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + \\$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi' + JF + 'hallo' + JF + 'end'$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'm' + EX + 'a' + 4 * ARR_L + JF + 'hallo' + \\$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'm' + EX + 'a' + 6 * ARR_L + JF + 'hallo' + \\$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + ' m1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'Hallo' + JF + 'Hi' + \\$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'one' + JF + 'two' + \\$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'one' + JF + 'two' + \\$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + JF + 'm1' + EX + 'hi' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + JF + JF + BS + 'm' + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'v' + EX + 'frac' + EX + 'a' + JF + 'b' + JF + 'frac' + EX + 'aa' + JF + JF + 'cc' + /;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'for' + EX + 'k' + JF$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'for' + EX + 'k' + JF$/;"	v	class:OldSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'Hello'$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'v' + EX$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'def' + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'for' + EX + 'blub' + JF + 'j' + JF + 'hi'$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX + '2\\n'$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX + '\\nhello1' + EX + '\\nhello2' + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX + ESC + ':set ft=blubi\\nohello' + EX$/;"	v	class:snipMate_OtherFiletype
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + 'not' + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + JF + 'hi'$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ':set fo=r\\n' + 'i\/*' + EX + '1\\n2'$/;"	v	class:snipMate_Issue658
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ':set ft=a\\n' + 'itest1' + EX$/;"	v	class:snipMate_Extends
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = """$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = """$/;"	v	class:SnippetActions_MoveVisual
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "1" + JF + "b" + EX + " c" + EX + "2" + JF + "3" + JF + "4" + JF + JF$/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '[]' + ARR_L + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\n3' + ARR_U + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x' + JF + 'y' + JF + JF + 'z'$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x'$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'x' + JF + 'y'$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX + '123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX + 'blah' + JF + 'n' + EX + JF + 'pass'$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX + 'p' + EX + JF + 'z'$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '   test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '   test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test it' + EX + '1\\n'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX + '1\\n'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = ' .' + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '$test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '-test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '.' + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '[[test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '\\t\\thi' + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '\\ttest' + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a(test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a-test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a-test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test ' + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test me' + EX$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test test abc' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test test test' + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'ßßtest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test me' + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX + '1\\n\\n' + 'test' + EX + '2\\n'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test1' + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = (ESC + ':set ft=p\\n' + 'itest' + EX + '\\n' +$/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ESC + ':set ft=c\\n' + 'itest' + EX$/;"	v	class:SnippetPriorities_ClearedByParent
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'echo' + EX + 'test'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'echo' + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Somelengthy Text' + JF + 'Hi' + JB + \\$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Somelengthy Text' + JF + 'Hi' + JB + \\$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Test' + JF + 'Hi' + JF + JF + 'du'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'haselnut' + 2 * ARR_L + 'hips' + JF + 'end'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'ship'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test hallo World' + ESC + '02f i' + EX + 'world' + JF + 'try' + \\$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ' blah' + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World' + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hi' + JF + 'Hallo' + JB + 'SomethingElse' + JF + \\$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + '[ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'blub' + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'hello' + JF + 'world'$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Nothing'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Blah'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + '\\n' + JF + 't'$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'no' + JF + 'End' + JB + 'yes' + JB + \\$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'no' + JF + 'End' + JB + 'yes' + JF + 'Begin' \\$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'no' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JB + JB + 'Blah' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'AUCH' + ESC + \\$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'AUCH' + ESC + \\$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'AUCH' + ESC + \\$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'AUCH' + ESC + \\$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'b'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\b\\b'$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\bmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'HALLO'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'SomE tExt '$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'TEST'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a b  c d e f ghhh h oha'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a some more text'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a some'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice,   building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'ab'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'b some'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'dead parrot'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'foo boo aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo' + ESC + '$a\\n' + \\$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hi' + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF + 'overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, halul'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS + 'hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS + JF + 'hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test\\ntest\\ntest' + ESC + 'V2k' + EX + 'test' + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'testme' + EX + 'hi1' + JF + 'hi2' + JF + 'hi3' + JF + 'hi4'$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'testme' + EX + 'hi1' + JF + 'hi2' + JF + 'hi3' + JF + 'hi4'$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'testme' + EX + 'hi;' + JF + 'hi2' + \\$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict2
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict3
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ('blumba' + EX + ESC +$/;"	v	class:AddNewSnippetSource
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ('test=(type(UltiSnips#SnippetsInCurrentScope()) . len(UltiSnips#SnippetsInCurrentSc/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = '    hello\\n    nice\\n\\tworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = '\\tblablub' + ESC + '5hv3l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'bla blub\\n  helloi' + ESC + '0k4lvjll' + EX + 'test' + EX$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0lv4l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v$' + EX + 'test' + EX + ESC + 'o'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v$' + EX + 'test' + \\$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + '\\ntest' + EX$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + JF + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + \\$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + \\$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + \\$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + \\$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'if' + EX + 'one\\n\\ttwo\\n\\tthree' + ESC + \\$/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ''$/;"	v	class:VimTestCase
keys	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keys	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^    def keys(self):$/;"	m	class:LazyDict
keys	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def keys(self):$/;"	m	class:RequestsCookieJar
keys	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def keys(self):$/;"	m	class:RecentlyUsedContainer
keys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def keys(self):$/;"	m	class:OrderedDict
keyword	plugged/coc.nvim/data/schema.json	/^        "keyword": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
keyword	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    keyword = (r'(?:function|class|static|var|if|else|while|do|for|'$/;"	v	class:HaxeLexer
keyword_abandon_proof	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_abandon_proof = ('sorry', 'oops')$/;"	v	class:IsabelleLexer
keyword_cmds_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    keyword_cmds_re = words(($/;"	v	class:TclLexer
keyword_constants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    keyword_constants = ($/;"	v	class:FelixLexer
keyword_declarations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    keyword_declarations = ($/;"	v	class:FelixLexer
keyword_diag	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_diag = ($/;"	v	class:IsabelleLexer
keyword_directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    keyword_directives = ($/;"	v	class:FelixLexer
keyword_minor	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_minor = ($/;"	v	class:IsabelleLexer
keyword_proof_asm	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_asm = ('assume', 'case', 'def', 'fix', 'presume')$/;"	v	class:IsabelleLexer
keyword_proof_asm_goal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_asm_goal = ('guess', 'obtain', 'show', 'thus')$/;"	v	class:IsabelleLexer
keyword_proof_block	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_block = ('next', 'proof')$/;"	v	class:IsabelleLexer
keyword_proof_chain	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_chain = ($/;"	v	class:IsabelleLexer
keyword_proof_decl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_decl = ($/;"	v	class:IsabelleLexer
keyword_proof_goal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_goal = ('have', 'hence', 'interpret')$/;"	v	class:IsabelleLexer
keyword_proof_script	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_proof_script = ($/;"	v	class:IsabelleLexer
keyword_qed	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_qed = ('by', 'done', 'qed')$/;"	v	class:IsabelleLexer
keyword_section	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_section = ('header', 'chapter')$/;"	v	class:IsabelleLexer
keyword_spacing	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
keyword_subsection	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_subsection = ($/;"	v	class:IsabelleLexer
keyword_theory_decl	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_theory_decl = ($/;"	v	class:IsabelleLexer
keyword_theory_goal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_theory_goal = ($/;"	v	class:IsabelleLexer
keyword_theory_script	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_theory_script = ('inductive_cases', 'inductive_simps')$/;"	v	class:IsabelleLexer
keyword_thy	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keyword_thy = ('theory', 'begin', 'end')$/;"	v	class:IsabelleLexer
keyword_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    keyword_type = r'(?:Int|Float|String|Bool|Object|Array|Void)'$/;"	v	class:MonkeyLexer
keyword_type_special	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    keyword_type_special = r'[?%#$]'$/;"	v	class:MonkeyLexer
keyword_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    keyword_types = ($/;"	v	class:FelixLexer
keyword_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    keyword_types = ($/;"	v	class:RustLexer
keywords	plugged/coc.nvim/package.json	/^  "keywords": [$/;"	a
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mql_builtins.py	/^keywords = ($/;"	v
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    keywords = """\\$/;"	v	class:AutoItLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    keywords = ($/;"	v	class:QBasicLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    keywords = words(OPENEDGEKEYWORDS,$/;"	v	class:OpenEdgeLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    keywords = ('class', 'instance', 'where', 'with', 'let', 'let!',$/;"	v	class:CleanLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    keywords = ($/;"	v	class:SquidConfLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    keywords = [$/;"	v	class:FSharpLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    keywords = set(($/;"	v	class:DylanLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    keywords = ($/;"	v	class:ErlangLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    keywords = ($/;"	v	class:FelixLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    keywords = [$/;"	v	class:KokaLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    keywords = ($/;"	v	class:IgorLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    keywords = ($/;"	v	class:SchemeLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OcamlLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    keywords = ($/;"	v	class:OpaLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    keywords = [$/;"	v	class:NimrodLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    keywords = ['rec', 'with', 'let', 'in', 'inherit', 'assert', 'if',$/;"	v	class:NixLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    keywords = ($/;"	v	class:PraatLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    keywords = ($/;"	v	class:PowerShellLexer
keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    keywords = ($/;"	v	class:X10Lexer
keywords1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords1 = ($/;"	v	class:CoqLexer
keywords1	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords1 = ($/;"	v	class:LeanLexer
keywords2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:CoqLexer
keywords2	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords2 = ($/;"	v	class:LeanLexer
keywords3	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:CoqLexer
keywords3	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords3 = ($/;"	v	class:LeanLexer
keywords4	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords4 = ($/;"	v	class:CoqLexer
keywords5	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords5 = ($/;"	v	class:CoqLexer
keywords6	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    keywords6 = ($/;"	v	class:CoqLexer
keywordsPseudo	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    keywordsPseudo = [$/;"	v	class:NimrodLexer
kix	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "kix": null,$/;"	z
kotlin	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "kotlin": "Kotlin",$/;"	s
kscript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "kscript": null,$/;"	z
kt_id	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    kt_id = '(' + kt_name + '|`' + kt_name + '`)'$/;"	v	class:KotlinLexer
kt_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    kt_name = ('@?[_' + uni.combine('Lu', 'Ll', 'Lt', 'Lm', 'Nl') + ']' +$/;"	v	class:KotlinLexer
kwt	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "kwt": null,$/;"	z
l2c	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^def l2c(l):$/;"	f
lace	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lace": null,$/;"	z
lambda_list_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    lambda_list_keywords = set(($/;"	v	class:EmacsLispLexer
landscape	plugged/lightline.vim/README.md	/^### landscape$/;"	S
language	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^        "language": "javascript",$/;"	s	object:contributes.snippets.0
language	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^        "language": "javascriptreact",$/;"	s	object:contributes.snippets.1
language	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    language = None$/;"	v	class:Heartbeat
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/big5prober.py	/^    def language(self):$/;"	m	class:Big5Prober
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def language(self):$/;"	m	class:CharSetGroupProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def language(self):$/;"	m	class:CodingStateMachine
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/cp949prober.py	/^    def language(self):$/;"	m	class:CP949Prober
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def language(self):$/;"	m	class:EscCharSetProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def language(self):$/;"	m	class:EUCJPProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/euckrprober.py	/^    def language(self):$/;"	m	class:EUCKRProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/euctwprober.py	/^    def language(self):$/;"	m	class:EUCTWProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/gb2312prober.py	/^    def language(self):$/;"	m	class:GB2312Prober
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def language(self):$/;"	m	class:HebrewProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def language(self):$/;"	m	class:Latin1Prober
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def language(self):$/;"	m	class:MultiByteCharSetProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def language(self):$/;"	m	class:SingleByteCharSetProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def language(self):$/;"	m	class:SJISProber
language	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def language(self):$/;"	m	class:UTF8Prober
languageServerBase	plugged/coc.nvim/data/schema.json	/^    "languageServerBase": {$/;"	o	object:definitions
languageServerCommand	plugged/coc.nvim/data/schema.json	/^    "languageServerCommand": {$/;"	o	object:definitions
languageServerModule	plugged/coc.nvim/data/schema.json	/^    "languageServerModule": {$/;"	o	object:definitions
languageServerSocket	plugged/coc.nvim/data/schema.json	/^    "languageServerSocket": {$/;"	o	object:definitions
language_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^def language_callback(lexer, match):$/;"	f
language_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^language_re = re.compile(r"\\s+LANGUAGE\\s+'?(\\w+)'?", re.IGNORECASE)$/;"	v
languageserver	plugged/coc.nvim/data/schema.json	/^    "languageserver": {$/;"	o	object:properties
languageserver	plugged/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^const languageserver = require('vscode-languageserver')$/;"	C
large_strings	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *large_strings;  \/* A list of previously accumulated large strings *\/$/;"	m	struct:__anondf9dcc210108	typeref:typename:PyObject *	file:
latin5_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^latin5_char_to_order_map = ($/;"	v
latte	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "latte": null,$/;"	z
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
lazy	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^        def lazy(name):$/;"	f	member:LazyList.__new__	file:
lazy	plugged/vim-wakatime/packages/wakatime/packages/pytz/lazy.py	/^        def lazy(name):$/;"	f	member:LazySet.__new__	file:
ld	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ld": null,$/;"	z
ldap	plugged/php.vim/attic/syntax.ini	/^ldap = no$/;"	k	section:extensions
ldapconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ldapconf": null,$/;"	z
ldif	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ldif": null,$/;"	z
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
left	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	p	class:results
length	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
less	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "less": "LESS",$/;"	s
letter	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    letter = (u'[a-zA-Z\\\\$_\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6'$/;"	v	class:ScalaLexer
letter_letter_digit	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    letter_letter_digit = u'%s(?:%s|\\d)*' % (letter, letter)$/;"	v	class:ScalaLexer
level	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    level = 0$/;"	v	class:JsonParser
levels	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:CSharpLexer
levels	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    levels = {$/;"	v	class:NemerleLexer
lex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lex": null,$/;"	z
lex	plugged/vim-wakatime/packages/wakatime/packages/pygments/__init__.py	/^def lex(code, lexer):$/;"	f
lexemes_to_reject_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    lexemes_to_reject_db = {$/;"	v	class:Modula2Lexer
lexer	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    lexer = None$/;"	v	class:DependencyParser
lexer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^                    lexer = getattr(module, lexer_name)$/;"	v
lftp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lftp": null,$/;"	z
lhaskell	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lhaskell": "Haskell",$/;"	s
li a	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
li a:active	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
li a:hover	plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
lib	plugged/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	a	object:compilerOptions
libao	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "libao": null,$/;"	z
libxml	plugged/php.vim/attic/syntax.ini	/^libxml = yes$/;"	k	section:extensions
license	plugged/coc.nvim/package.json	/^  "license": "MIT",$/;"	s
license	plugged/emmet-vim/docs/index.html	/^			<article id="license">$/;"	I
lifelines	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lifelines": null,$/;"	z
light_colors	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^light_colors = ["darkgray", "red", "green", "yellow", "blue",$/;"	v
lightline	plugged/lightline-ale/plugin/lightline/ale.vim	/^augroup lightline#ale$/;"	a
lightline	plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline$/;"	a
lightline	plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline-disable$/;"	a
lightline	plugged/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline#ale#checking	plugged/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#checking() abort$/;"	f
lightline#ale#errors	plugged/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#errors() abort$/;"	f
lightline#ale#linted	plugged/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#linted() abort$/;"	f
lightline#ale#ok	plugged/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#ok() abort$/;"	f
lightline#ale#warnings	plugged/lightline-ale/autoload/lightline/ale.vim	/^function! lightline#ale#warnings() abort$/;"	f
lightline#colorscheme	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#name_to_rgb	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_once	plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_once() abort$/;"	f
lightline-ale	plugged/lightline-ale/README.md	/^# lightline-ale$/;"	c
lightline.Custom	plugged/lightline.vim/test/expand.vim	/^  function! g:lightline.Custom()$/;"	f
lightline.vim	plugged/lightline.vim/README.md	/^# lightline.vim$/;"	c
lilo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lilo": null,$/;"	z
limits	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "limits": null,$/;"	z
line	plugged/php.vim/attic/20-generate.php	/^while (false !== $line = fgets(STDIN)) {$/;"	v
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^line_re = re.compile('.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^line_re = re.compile(b'.*?\\n')$/;"	v
line_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^line_re  = re.compile('.*?\\n')$/;"	v
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
linecol	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^def linecol(doc, pos):$/;"	f
lineno	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    lineno = None$/;"	v	class:Heartbeat
lines	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    lines = None$/;"	v	class:Heartbeat
link	plugged/javascript-libraries-syntax.vim/Makefile	/^link: init-runtime$/;"	t
link_file	plugged/javascript-libraries-syntax.vim/Makefile	/^link_file = \\$/;"	m
links	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def links(self):$/;"	m	class:Response
lint	plugged/coc.nvim/package.json	/^    "lint": "tslint -c tslint.json -p .",$/;"	s	object:scripts
linterOptions	plugged/coc.nvim/tslint.json	/^  "linterOptions": {$/;"	o
linux_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    linux_types = set(($/;"	v	class:CFamilyLexer
liquid	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "liquid": null,$/;"	z
lisp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lisp": null,$/;"	z
list.autoResize	plugged/coc.nvim/data/schema.json	/^    "list.autoResize": {$/;"	o	object:properties
list.indicator	plugged/coc.nvim/data/schema.json	/^    "list.indicator": {$/;"	o	object:properties
list.insertMappings	plugged/coc.nvim/data/schema.json	/^    "list.insertMappings": {$/;"	o	object:properties
list.limitLines	plugged/coc.nvim/data/schema.json	/^    "list.limitLines": {$/;"	o	object:properties
list.maxHeight	plugged/coc.nvim/data/schema.json	/^    "list.maxHeight": {$/;"	o	object:properties
list.maxPreviewHeight	plugged/coc.nvim/data/schema.json	/^    "list.maxPreviewHeight": {$/;"	o	object:properties
list.nextKeymap	plugged/coc.nvim/data/schema.json	/^    "list.nextKeymap": {$/;"	o	object:properties
list.normalMappings	plugged/coc.nvim/data/schema.json	/^    "list.normalMappings": {$/;"	o	object:properties
list.previewHighlightGroup	plugged/coc.nvim/data/schema.json	/^    "list.previewHighlightGroup": {$/;"	o	object:properties
list.previousKeymap	plugged/coc.nvim/data/schema.json	/^    "list.previousKeymap": {$/;"	o	object:properties
list.selectedSignText	plugged/coc.nvim/data/schema.json	/^    "list.selectedSignText": {$/;"	o	object:properties
list.signOffset	plugged/coc.nvim/data/schema.json	/^    "list.signOffset": {$/;"	o	object:properties
list.source.outline.ctagsFilestypes	plugged/coc.nvim/data/schema.json	/^    "list.source.outline.ctagsFilestypes": {$/;"	o	object:properties
list_domains	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def list_domains(self):$/;"	m	class:RequestsCookieJar
list_paths	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def list_paths(self):$/;"	m	class:RequestsCookieJar
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
list_styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def list_styles(cls):$/;"	m	class:StyleMeta
lite	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lite": null,$/;"	z
litestep	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "litestep": null,$/;"	z
load	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def load(fp, encoding=None, cls=None, object_hook=None, parse_float=None,$/;"	f
load_cert_chain	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def load_cert_chain(self, certfile, keyfile=None, password=None):$/;"	m	class:PyOpenSSLContext
load_cert_chain	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def load_cert_chain(self, certfile, keyfile=None, password=None):$/;"	m	class:SecureTransportContext
load_cert_chain	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        def load_cert_chain(self, certfile, keyfile):$/;"	m	class:SSLContext
load_default_certs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def load_default_certs(self):$/;"	m	class:SecureTransportContext
load_formatter_from_file	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^def load_formatter_from_file(filename, formattername="CustomFormatter",$/;"	f
load_lexer_from_file	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^def load_lexer_from_file(filename, lexername="CustomLexer", **options):$/;"	f
load_module	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def load_module(self, fullname):$/;"	m	class:_SixMetaPathImporter
load_module	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def load_module(self, fullname):$/;"	m	class:_SixMetaPathImporter
load_verify_locations	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def load_verify_locations(self, cafile=None, capath=None, cadata=None):$/;"	m	class:PyOpenSSLContext
load_verify_locations	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def load_verify_locations(self, cafile=None, capath=None, cadata=None):$/;"	m	class:SecureTransportContext
load_verify_locations	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        def load_verify_locations(self, cafile=None, capath=None):$/;"	m	class:SSLContext
loadable_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    loadable_kw = ($/;"	v	class:OctaveLexer
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_tcomment	plugged/tcomment_vim/plugin/tcomment.vim	/^let loaded_tcomment = 400$/;"	v
loads	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def loads(s, encoding=None, cls=None, object_hook=None, parse_float=None,$/;"	f
localize	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:UTC
localize	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
localize	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:DstTzInfo
localize	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def localize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
log	plugged/coc.nvim/bin/tsserverForkStart.js	/^    return function log(str) {$/;"	f	function:log
log	plugged/coc.nvim/bin/tsserverForkStart.js	/^let log = (function () {$/;"	f
log	plugged/vim-wakatime/packages/wakatime/api.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/main.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^log = getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^log = logging.getLogger(__name__)$/;"	v
log	plugged/vim-wakatime/packages/wakatime/project.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/projectfile.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/stats.py	/^log = logging.getLogger('WakaTime')$/;"	v
log	plugged/vim-wakatime/packages/wakatime/utils.py	/^log = logging.getLogger('WakaTime')$/;"	v
log4js	plugged/coc.nvim/package.json	/^    "log4js": "^4.1.0",$/;"	s	object:dependencies
logger	plugged/coc.nvim/bin/server.js	/^const logger = require('..\/lib\/util\/logger')('server')$/;"	C
logger	plugged/far.vim/rplugin/python3/far/__init__.py	/^    logger = logging.getLogger('far')$/;"	v
logger	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^logger = logging.getLogger('far')$/;"	v
loginaccess	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "loginaccess": null,$/;"	z
logindefs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "logindefs": null,$/;"	z
logo	plugged/emmet-vim/docs/index.html	/^	<img id="logo" src="static\/images\/emmet-vim-logo.png" title="禅" alt="禅" \/>$/;"	I
logtalk	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "logtalk": null,$/;"	z
long_hex_char_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    long_hex_char_re = r'(\\\\x\\{)([\\da-fA-F]+)(\\})'$/;"	v	class:ElixirLexer
long_id_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    def long_id_callback(self, match):$/;"	m	class:SMLLexer
long_type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^long_type = integer_types[-1]$/;"	v
lookahead	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^class lookahead(object):$/;"	c
looks_like_xml	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def looks_like_xml(text):$/;"	f
lotos	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lotos": null,$/;"	z
lout	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lout": null,$/;"	z
lower_items	plugged/vim-wakatime/packages/wakatime/packages/requests/structures.py	/^    def lower_items(self):$/;"	m	class:CaseInsensitiveDict
lpc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lpc": null,$/;"	z
lprolog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lprolog": null,$/;"	z
lscript	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lscript": null,$/;"	z
lsl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lsl": null,$/;"	z
lsl_constants_float	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_float = r'\\b(?:DEG_TO_RAD|PI(?:_BY_TWO)?|RAD_TO_DEG|SQRT2|TWO_PI)\\b'$/;"	v	class:LSLLexer
lsl_constants_integer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_integer = r'\\b(?:JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|B/;"	v	class:LSLLexer
lsl_constants_integer_boolean	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_integer_boolean = r'\\b(?:FALSE|TRUE)\\b'$/;"	v	class:LSLLexer
lsl_constants_rotation	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_rotation = r'\\b(?:ZERO_ROTATION)\\b'$/;"	v	class:LSLLexer
lsl_constants_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_string = r'\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STR/;"	v	class:LSLLexer
lsl_constants_vector	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_constants_vector = r'\\b(?:TOUCH_INVALID_(?:TEXCOORD|VECTOR)|ZERO_VECTOR)\\b'$/;"	v	class:LSLLexer
lsl_events	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_events = r'\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?/;"	v	class:LSLLexer
lsl_functions_builtin	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_functions_builtin = r'\\b(?:ll(?:ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|Va/;"	v	class:LSLLexer
lsl_invalid_broken	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_invalid_broken = r'\\b(?:LAND_(?:LARGE|MEDIUM|SMALL)_BRUSH)\\b'$/;"	v	class:LSLLexer
lsl_invalid_deprecated	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_invalid_deprecated = r'\\b(?:ATTACH_[LR]PEC|DATA_RATING|OBJECT_ATTACHMENT_(?:GEOMETRY_BY/;"	v	class:LSLLexer
lsl_invalid_illegal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_invalid_illegal = r'\\b(?:event)\\b'$/;"	v	class:LSLLexer
lsl_invalid_unimplemented	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_invalid_unimplemented = r'\\b(?:CHARACTER_(?:MAX_ANGULAR_(?:ACCEL|SPEED)|TURN_SPEED_MULT/;"	v	class:LSLLexer
lsl_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_keywords = r'\\b(?:do|else|for|if|jump|return|while)\\b'$/;"	v	class:LSLLexer
lsl_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_operators = r'\\+\\+|\\-\\-|<<|>>|&&?|\\|\\|?|\\^|~|[!%<>=*+\\-\/]=?'$/;"	v	class:LSLLexer
lsl_reserved_godmode	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_reserved_godmode = r'\\b(?:ll(?:GodLikeRezObject|Set(?:Inventory|Object)PermMask))\\b'$/;"	v	class:LSLLexer
lsl_reserved_log	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_reserved_log = r'\\b(?:print)\\b'$/;"	v	class:LSLLexer
lsl_states	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_states = r'\\b(?:(?:state)\\s+\\w+|default)\\b'$/;"	v	class:LSLLexer
lsl_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    lsl_types = r'\\b(?:float|integer|key|list|quaternion|rotation|string|vector)\\b'$/;"	v	class:LSLLexer
lss	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lss": null,$/;"	z
lua	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "lua": "Lua",$/;"	s
lua	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lua": null,$/;"	z
lua2vim	plugged/nvim-miniyank/lua/miniyank.lua	/^local function lua2vim(t)$/;"	f
lynx	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "lynx": null,$/;"	z
m.build_ext	plugged/nvim-miniyank/lua/MessagePack.lua	/^function m.build_ext (tag, data)$/;"	f
m.pack	plugged/nvim-miniyank/lua/MessagePack.lua	/^function m.pack (data)$/;"	f
m.unpack	plugged/nvim-miniyank/lua/MessagePack.lua	/^function m.unpack (s)$/;"	f
m.unpacker	plugged/nvim-miniyank/lua/MessagePack.lua	/^function m.unpacker (src)$/;"	f
m2r10_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_additional_builtins = ($/;"	v	class:Modula2Lexer
m2r10_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
m2r10_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_additional_reserved_words = ($/;"	v	class:Modula2Lexer
m2r10_lexemes_to_reject	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_lexemes_to_reject = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_adt_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_adt_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_blueprint_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_blueprint_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_const_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_const_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_module_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_module_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_proc_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_proc_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_type_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_type_identifiers = ($/;"	v	class:Modula2Lexer
m2r10_stdlib_var_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    m2r10_stdlib_var_identifiers = ($/;"	v	class:Modula2Lexer
m4	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "m4": null,$/;"	z
macCyrillic_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^macCyrillic_char_to_order_map = ($/;"	v
macro_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    macro_re = r'(?:'+variable_re+r'|'+atom_re+r')'$/;"	v	class:ErlangLexer
macros	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    macros = """\\$/;"	v	class:AutoItLexer
macros	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    macros = set(($/;"	v	class:EmacsLispLexer
macros_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^macros_kw = ($/;"	v
mail	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mail": null,$/;"	z
mailaliases	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mailaliases": null,$/;"	z
mailcap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mailcap": null,$/;"	z
main	plugged/ale/test/dumb_tcp_client.py	/^def main():$/;"	f
main	plugged/ale/test/dumb_tcp_server.py	/^def main():$/;"	f
main	plugged/ale/test/script/block-padding-checker	/^def main():$/;"	f
main	plugged/coc.nvim/package.json	/^  "main": ".\/lib\/index.js",$/;"	s
main	plugged/tcomment_vim/spec/tcomment/issue30_test.c	/^int main()$/;"	f	typeref:typename:int
main	plugged/tcomment_vim/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f	typeref:typename:int
main	plugged/tcomment_vim/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f	typeref:typename:int
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f
main	plugged/vim-wakatime/packages/wakatime/packages/chardet/cli/chardetect.py	/^def main(argv=None):$/;"	f
main	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def main(args=sys.argv):$/;"	f
main	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^def main():$/;"	f
main	plugged/vim-wakatime/packages/wakatime/packages/simplejson/tool.py	/^def main():$/;"	f
main_inner	plugged/vim-wakatime/packages/wakatime/packages/pygments/cmdline.py	/^def main_inner(popts, args, usage):$/;"	f
main_syntax	plugged/php.vim/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	plugged/vim-blade/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	plugged/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
maintainer	plugged/tcomment_vim/addon-info.json	/^    "maintainer" : "Tom Link <micathom at gmail com>",$/;"	s
maintainer	plugged/vim-snippets/addon-info.json	/^  "maintainer" : "honza @ github & others",$/;"	s
make	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "make": null,$/;"	z
make_analysator	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def make_analysator(f):$/;"	f
make_box	plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_charset	plugged/vim-wakatime/packages/wakatime/packages/pygments/regexopt.py	/^def make_charset(letters):$/;"	f
make_headers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/request.py	/^def make_headers(keep_alive=None, accept_encoding=None, user_agent=None,$/;"	f
make_multipart	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def make_multipart(self, content_disposition=None, content_type=None,$/;"	m	class:RequestField
make_scanner	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^make_scanner = c_make_scanner or py_make_scanner$/;"	v
makefile	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def makefile(self, mode, bufsize=-1):$/;"	f
makefile	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def makefile(self, mode, bufsize=-1):$/;"	f
makefile	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def makefile(self, mode="r", buffering=None, *args, **kwargs):$/;"	f
man	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "man": null,$/;"	z
manconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "manconf": null,$/;"	z
manual	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "manual": null,$/;"	z
maple	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "maple": null,$/;"	z
mapleader	config/03.remaps.vim	/^let mapleader = ' '$/;"	v
maplocalleader	config/03.remaps.vim	/^let maplocalleader = ' '$/;"	v
mapping	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    mapping = {'variables': 'builtin'}$/;"	v
mapping_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    mapping_kw = ($/;"	v	class:OctaveLexer
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('', '')$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('e', 'l'), ('H', 'x')$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
markdown	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "markdown": "Markdown",$/;"	s
markdown	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "markdown": "Markdown",$/;"	s
markers	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *markers;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject_HEAD PyObject *	file:
masm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "masm": null,$/;"	z
mason	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mason": null,$/;"	z
master	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "master": null,$/;"	z
match	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var match = quickExpr.exec( selector );$/;"	v
match_func	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^        def match_func(text, pos, endpos=sys.maxsize):$/;"	f	member:ProfilingRegexLexerMeta._process_regex	file:
match_hostname	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ssl_match_hostname/_implementation.py	/^def match_hostname(cert, hostname):$/;"	f
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
matlab	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "matlab": "Matlab",$/;"	s
matlab	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "matlab": null,$/;"	z
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
max_long_size	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *max_long_size;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
maxima	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "maxima": null,$/;"	z
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.highPrioritySourceLimit
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 300,$/;"	n	object:properties.suggest.triggerCompletionWait
maximum	plugged/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.suggest.timeout
maybe_quote_bigint	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^maybe_quote_bigint(PyEncoderObject* s, PyObject *encoded, PyObject *obj)$/;"	f	typeref:typename:PyObject *	file:
mbstring	plugged/php.vim/attic/syntax.ini	/^mbstring = yes$/;"	k	section:extensions
mcrypt	plugged/php.vim/attic/syntax.ini	/^mcrypt = yes$/;"	k	section:extensions
md5_utf8	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^            def md5_utf8(x):$/;"	f	member:HTTPDigestAuth.build_digest_header	file:
mel	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mel": null,$/;"	z
memo	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *memo;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
memorized_datetime	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_datetime(seconds):$/;"	f
memorized_timedelta	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_timedelta(seconds):$/;"	f
memorized_ttinfo	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^def memorized_ttinfo(*args):$/;"	f
merge_cookies	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def merge_cookies(cookiejar, cookies):$/;"	f
merge_environment_settings	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def merge_environment_settings(self, url, proxies, stream, verify, cert):$/;"	m	class:Session
merge_hooks	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^def merge_hooks(request_hooks, session_hooks, dict_class=OrderedDict):$/;"	f
merge_setting	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^def merge_setting(request_setting, session_setting, dict_class=OrderedDict):$/;"	f
messages	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "messages": null,$/;"	z
messenger.format_exception	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.format_exception( msg) dict$/;"	f
messenger.format_message	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.format_message(leader, msg) dict$/;"	f
messenger.send_error	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_error(msg) dict$/;"	f
messenger.send_info	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_info(msg) dict$/;"	f
messenger.send_status	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_status(msg) dict$/;"	f
messenger.send_warning	plugged/vim-buffergator/autoload/buffergator.vim	/^    function! messenger.send_warning(msg) dict$/;"	f
metaclass	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    class metaclass(meta):$/;"	c	function:with_metaclass	file:
metaclass	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    class metaclass(meta):$/;"	c	function:with_metaclass	file:
metacommands	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    metacommands = ('$DYNAMIC', '$INCLUDE', '$STATIC')$/;"	v	class:QBasicLexer
method	plugged/coc.nvim/data/schema.json	/^        "method": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
method	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    method = getattr(_BaseSocket, name, None)$/;"	v
mf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mf": null,$/;"	z
mgl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mgl": null,$/;"	z
mgp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mgp": null,$/;"	z
mhash	plugged/php.vim/attic/syntax.ini	/^mhash = yes$/;"	k	section:extensions
mib	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mib": null,$/;"	z
mimetimes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    mimetimes = ['text\/xml', 'application\/xml']$/;"	v	class:MxmlLexer
mimetype	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    mimetype = []$/;"	v	class:FoxProLexer
mimetype	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    mimetype = ['application\/x-debian-sourceslist']$/;"	v	class:SourcesListLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    mimetypes = []$/;"	v	class:Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript', 'text\/x-actionscript',$/;"	v	class:ActionScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    mimetypes = ['application\/x-actionscript3', 'text\/x-actionscript3',$/;"	v	class:ActionScript3Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    mimetypes = ['application\/mathematica',$/;"	v	class:MathematicaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    mimetypes = ['text\/x-ambienttalk']$/;"	v	class:AmbientTalkLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    mimetypes = ['text\/odin']$/;"	v	class:OdinLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-c-objdump']$/;"	v	class:CObjdumpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-cpp-objdump']$/;"	v	class:CppObjdumpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-d-objdump']$/;"	v	class:DObjdumpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-gas']$/;"	v	class:GasLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-hsail']$/;"	v	class:HsailLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-llvm']$/;"	v	class:LlvmLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm']$/;"	v	class:NasmLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-nasm-objdump']$/;"	v	class:NasmObjdumpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-objdump']$/;"	v	class:ObjdumpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    mimetypes = ['text\/x-tasm']$/;"	v	class:TasmLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autohotkey']$/;"	v	class:AutohotkeyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    mimetypes = ['text\/x-autoit']$/;"	v	class:AutoItLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    mimetypes = ['text\/basic']$/;"	v	class:QBasicLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bb']$/;"	v	class:BlitzBasicLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-bmx']$/;"	v	class:BlitzMaxLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    mimetypes = ['text\/x-monkey']$/;"	v	class:MonkeyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    mimetypes = ["text\/x-bibtex"]$/;"	v	class:BibTeXLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = ['text\/x-abap']$/;"	v	class:ABAPLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = ['text\/x-cobol']$/;"	v	class:CobolLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-cl']$/;"	v	class:GoodDataCLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = ['text\/x-gooddata-maql', 'application\/x-gooddata-maql']$/;"	v	class:MaqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = ['text\/x-openedge', 'application\/x-openedge']$/;"	v	class:OpenEdgeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    mimetypes = []$/;"	v	class:CobolFreeformatLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-c++hdr', 'text\/x-c++src']$/;"	v	class:CppLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    mimetypes = ['text\/x-chdr', 'text\/x-csrc']$/;"	v	class:CLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/swig']$/;"	v	class:SwigLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-arduino']$/;"	v	class:ArduinoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-clay']$/;"	v	class:ClayLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-cuda']$/;"	v	class:CudaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-echdr', 'text\/x-ecsrc']$/;"	v	class:ECLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-mql']$/;"	v	class:MqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-nescsrc']$/;"	v	class:NesCLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-pike']$/;"	v	class:PikeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    mimetypes = ['text\/x-vala']$/;"	v	class:ValaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['application\/x-tf', 'application\/x-terraform']$/;"	v	class:TerraformLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-apacheconf']$/;"	v	class:ApacheConfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-dockerfile-config']$/;"	v	class:DockerLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-ini', 'text\/inf']$/;"	v	class:IniLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-java-properties']$/;"	v	class:PropertiesLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-kconfig']$/;"	v	class:KconfigLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-lighttpd-conf']$/;"	v	class:LighttpdConfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-nginx-conf']$/;"	v	class:NginxConfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-squidconf']$/;"	v	class:SquidConfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = ['text\/x-windows-registry']$/;"	v	class:RegeditLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:Cfengine3Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:PacmanConfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:PkgConfigLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:TermcapLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    mimetypes = []$/;"	v	class:TerminfoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    mimetypes = ['application\/x-pypylog']$/;"	v	class:PyPyLogLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    mimetypes = []$/;"	v	class:VCTreeStatusLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    mimetypes = ['text\/x-crystal']$/;"	v	class:CrystalLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    mimetypes = ['text\/css']$/;"	v	class:CssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    mimetypes = ['text\/x-less-css']$/;"	v	class:LessCssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    mimetypes = ['text\/x-sass']$/;"	v	class:SassLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    mimetypes = ['text\/x-scss']$/;"	v	class:ScssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    mimetypes = ['text\/x-crocsrc']$/;"	v	class:CrocLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    mimetypes = ['text\/x-dsrc']$/;"	v	class:DLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    mimetypes = ['text\/x-minidsrc']$/;"	v	class:MiniDLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    mimetypes = ['text\/smali']$/;"	v	class:SmaliLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    mimetypes = ['application\/json']$/;"	v	class:JsonLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    mimetypes = ['application\/json-object']$/;"	v	class:JsonBareObjectLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    mimetypes = ['application\/ld+json']$/;"	v	class:JsonLdLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    mimetypes = ['text\/x-yaml']$/;"	v	class:YamlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    mimetypes = ['text\/x-diff', 'text\/x-patch']$/;"	v	class:DiffLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    mimetypes = []$/;"	v	class:WDiffLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-boo']$/;"	v	class:BooLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-csharp']  # inferred$/;"	v	class:CSharpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-fsharp']$/;"	v	class:FSharpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-nemerle']  # inferred$/;"	v	class:NemerleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = ['text\/x-vbnet', 'text\/x-vba']  # (?)$/;"	v	class:VbNetLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:CSharpAspxLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:GenericAspxLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    mimetypes = []$/;"	v	class:VbNetAspxLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    mimetypes = ['application\/x-thrift']$/;"	v	class:ThriftLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    mimetypes = ['text\/rsl']$/;"	v	class:RslLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    mimetypes = ['text\/x-alloy']$/;"	v	class:AlloyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    mimetypes = ['text\/x-flatline']$/;"	v	class:FlatlineLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    mimetypes = []$/;"	v	class:CrmshLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan']$/;"	v	class:DylanLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-console']$/;"	v	class:DylanConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    mimetypes = ['text\/x-dylan-lid']$/;"	v	class:DylanLidLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    mimetypes = ['application\/x-ecl']$/;"	v	class:ECLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^    mimetypes = ['text\/x-eiffel']$/;"	v	class:EiffelLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    mimetypes = ['text\/x-elm']$/;"	v	class:ElmLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir']$/;"	v	class:ElixirLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-elixir-shellsession']$/;"	v	class:ElixirConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erl-shellsession']$/;"	v	class:ErlangShellLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    mimetypes = ['text\/x-erlang']$/;"	v	class:ErlangLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-befunge']$/;"	v	class:BefungeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    mimetypes = ['application\/x-brainfuck']$/;"	v	class:BrainfuckLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    mimetypes = ['text\/x-ezhil']$/;"	v	class:EzhilLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    mimetypes = ['text\/x-factor']$/;"	v	class:FactorLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    mimetypes = ['application\/x-fantom']$/;"	v	class:FantomLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    mimetypes = ['text\/x-felix']$/;"	v	class:FelixLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    mimetypes = ['application\/x-forth']$/;"	v	class:ForthLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    mimetypes = ['text\/x-fortran']$/;"	v	class:FortranLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    mimetypes = ['text\/x-gosrc']$/;"	v	class:GoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    mimetypes = ['application\/jsgf', 'application\/x-jsgf', 'text\/jsgf']$/;"	v	class:JsgfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    mimetypes = ['text\/x-abnf']$/;"	v	class:AbnfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    mimetypes = ['text\/x-bnf']$/;"	v	class:BnfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    mimetypes = ['application\/postscript']$/;"	v	class:PostScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-asymptote']$/;"	v	class:AsymptoteLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-glslsrc']$/;"	v	class:GLShaderLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-gnuplot']$/;"	v	class:GnuplotLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    mimetypes = ['text\/x-povray']$/;"	v	class:PovrayLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-agda']$/;"	v	class:AgdaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-cryptol']$/;"	v	class:CryptolLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-haskell']$/;"	v	class:HaskellLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-idris']$/;"	v	class:IdrisLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-koka']$/;"	v	class:KokaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-agda']$/;"	v	class:LiterateAgdaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-cryptol']$/;"	v	class:LiterateCryptolLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-haskell']$/;"	v	class:LiterateHaskellLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    mimetypes = ['text\/x-literate-idris']$/;"	v	class:LiterateIdrisLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    mimetypes = ['text\/haxe', 'text\/x-haxe', 'text\/x-hx']$/;"	v	class:HaxeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-systemverilog']$/;"	v	class:SystemVerilogLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-verilog']$/;"	v	class:VerilogLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    mimetypes = ['text\/x-vhdl']$/;"	v	class:VhdlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['application\/xml-dtd']$/;"	v	class:DtdLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['application\/xsl+xml', 'application\/xslt+xml']$/;"	v	class:XsltLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['text\/html', 'application\/xhtml+xml']$/;"	v	class:HtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['text\/x-haml']$/;"	v	class:HamlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['text\/x-pug', 'text\/x-jade']$/;"	v	class:PugLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['text\/x-scaml']$/;"	v	class:ScamlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    mimetypes = ['text\/xml', 'application\/xml', 'image\/svg+xml',$/;"	v	class:XmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    mimetypes = ['text\/idl']$/;"	v	class:IDLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    mimetypes = ['text\/ipf']$/;"	v	class:IgorLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    mimetypes = ['text\/limbo']$/;"	v	class:LimboLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-nsis']$/;"	v	class:NSISLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    mimetypes = ['text\/x-rpm-spec']$/;"	v	class:RPMSpecLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^    mimetypes = ['text\/x-iosrc']$/;"	v	class:IoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    mimetypes = ['text\/x-j']$/;"	v	class:JLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['application\/javascript', 'application\/x-javascript',$/;"	v	class:JavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['application\/juttle', 'application\/x-juttle',$/;"	v	class:JuttleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/coffeescript']$/;"	v	class:CoffeeScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/kal', 'application\/kal']$/;"	v	class:KalLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/livescript']$/;"	v	class:LiveScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-dart']$/;"	v	class:DartLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-earl-grey']$/;"	v	class:EarlGreyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-lasso']$/;"	v	class:LassoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-mask']$/;"	v	class:MaskLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-objective-j']$/;"	v	class:ObjectiveJLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    mimetypes = ['text\/x-typescript']$/;"	v	class:TypeScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    mimetypes = ['text\/x-julia', 'application\/x-julia']$/;"	v	class:JuliaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-aspectj']$/;"	v	class:AspectJLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-ceylon']$/;"	v	class:CeylonLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojure', 'application\/x-clojure']$/;"	v	class:ClojureLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-clojurescript', 'application\/x-clojurescript']$/;"	v	class:ClojureScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu']$/;"	v	class:GosuLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-gosu-template']$/;"	v	class:GosuTemplateLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-groovy']$/;"	v	class:GroovyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-iokesrc']$/;"	v	class:IokeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-java']$/;"	v	class:JavaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-kotlin']$/;"	v	class:KotlinLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-pig']$/;"	v	class:PigLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-scala']$/;"	v	class:ScalaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    mimetypes = ['text\/x-xtend']$/;"	v	class:XtendLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-common-lisp']$/;"	v	class:CommonLispLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-elisp', 'application\/x-elisp']$/;"	v	class:EmacsLispLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-hy', 'application\/x-hy']$/;"	v	class:HyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-newlisp', 'application\/x-newlisp']$/;"	v	class:NewLispLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-racket', 'application\/x-racket']$/;"	v	class:RacketLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-scheme', 'application\/x-scheme']$/;"	v	class:SchemeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = ['text\/x-shen', 'application\/x-shen']$/;"	v	class:ShenLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = []$/;"	v	class:CPSALexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    mimetypes = []$/;"	v	class:XtlangLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    mimetypes = ['text\/x-cmake']$/;"	v	class:CMakeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    mimetypes = ['text\/x-makefile']$/;"	v	class:MakefileLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    mimetypes = []$/;"	v	class:BaseMakefileLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ["text\/x-markdown"]$/;"	v	class:MarkdownLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ["text\/x-rst", "text\/prs.fallenstein.rst"]$/;"	v	class:RstLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ['application\/x-troff', 'text\/troff']$/;"	v	class:GroffLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-bbcode']$/;"	v	class:BBCodeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-tex', 'text\/x-latex']$/;"	v	class:TexLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = ['text\/x-trac-wiki']$/;"	v	class:MoinWikiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocCssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocHashLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocJavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocPercentLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    mimetypes = []$/;"	v	class:MozPreprocXulLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    mimetypes = ['text\/matlab']$/;"	v	class:MatlabLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    mimetypes = ['text\/octave']$/;"	v	class:OctaveLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    mimetypes = ['text\/scilab']$/;"	v	class:ScilabLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-ocaml']$/;"	v	class:OcamlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-opa']$/;"	v	class:OpaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    mimetypes = ['text\/x-standardml', 'application\/x-standardml']$/;"	v	class:SMLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    mimetypes = ['text\/x-modelica']$/;"	v	class:ModelicaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    mimetypes = ['text\/x-modula2']$/;"	v	class:Modula2Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    mimetypes = ['text\/ncl']$/;"	v	class:NCLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    mimetypes = ['text\/x-nim']$/;"	v	class:NimrodLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    mimetypes = ['text\/x-nix']$/;"	v	class:NixLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    mimetypes = ['text\/x-component-pascal']$/;"	v	class:ComponentPascalLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-logos']$/;"	v	class:LogosLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c']$/;"	v	class:ObjectiveCLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-objective-c++']$/;"	v	class:ObjectiveCppLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    mimetypes = ['text\/x-swift']$/;"	v	class:SwiftLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^    mimetypes = ['text\/x-ooc']$/;"	v	class:OocLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    mimetypes = ['text\/x-parasail']$/;"	v	class:ParaSailLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    mimetypes = ['text\/x-ebnf']$/;"	v	class:EbnfLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-ada']$/;"	v	class:AdaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    mimetypes = ['text\/x-pascal']$/;"	v	class:DelphiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-pawn']$/;"	v	class:PawnLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    mimetypes = ['text\/x-sourcepawn']$/;"	v	class:SourcePawnLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl', 'application\/x-perl']$/;"	v	class:PerlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    mimetypes = ['text\/x-perl6', 'application\/x-perl6']$/;"	v	class:Perl6Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    mimetypes = ['text\/x-php']$/;"	v	class:PhpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-logtalk']$/;"	v	class:LogtalkLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    mimetypes = ['text\/x-prolog']$/;"	v	class:PrologLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-cython', 'application\/x-cython']$/;"	v	class:CythonLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-dg']$/;"	v	class:DgLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python', 'application\/x-python']$/;"	v	class:PythonLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-doctest']$/;"	v	class:PythonConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python-traceback']$/;"	v	class:PythonTracebackLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3', 'application\/x-python3']$/;"	v	class:Python3Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = ['text\/x-python3-traceback']$/;"	v	class:Python3TracebackLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    mimetypes = []$/;"	v	class:NumPyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    mimetypes = ['text\/S-plus', 'text\/S', 'text\/x-r-source', 'text\/x-r',$/;"	v	class:SLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    mimetypes = ['text\/x-r-doc']$/;"	v	class:RdLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    mimetypes = ['application\/sparql-query']$/;"	v	class:SparqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    mimetypes = ['text\/turtle', 'application\/x-turtle']$/;"	v	class:TurtleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-rebol']$/;"	v	class:RebolLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    mimetypes = ['text\/x-red', 'text\/x-red-system']$/;"	v	class:RedLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    mimetypes = ['text\/x-robotframework']$/;"	v	class:RobotFrameworkLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-fancysrc']$/;"	v	class:FancyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby', 'application\/x-ruby']$/;"	v	class:RubyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    mimetypes = ['text\/x-ruby-shellsession']$/;"	v	class:RubyConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    mimetypes = ['text\/rust']$/;"	v	class:RustLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    mimetypes = ['text\/x-sas', 'text\/sas', 'application\/x-sas']$/;"	v	class:SASLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-chaiscript', 'application\/x-chaiscript']$/;"	v	class:ChaiscriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-easytrieve']$/;"	v	class:EasytrieveLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-hybris', 'application\/x-hybris']$/;"	v	class:HybrisLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-jcl']$/;"	v	class:JclLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lsl']$/;"	v	class:LSLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-lua', 'application\/x-lua']$/;"	v	class:LuaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moocode']$/;"	v	class:MOOCodeLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-moonscript', 'application\/x-moonscript']$/;"	v	class:MoonScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    mimetypes = ['text\/x-rexx']$/;"	v	class:RexxLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-csh']$/;"	v	class:TcshLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-dos-batch']$/;"	v	class:BatchLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-fish']$/;"	v	class:FishShellLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-sh', 'application\/x-shellscript']$/;"	v	class:BashLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['application\/x-shell-session', 'application\/x-sh-session']$/;"	v	class:BashSessionLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = ['text\/x-powershell']$/;"	v	class:PowerShellLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = []$/;"	v	class:MSDOSSessionLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = []$/;"	v	class:PowerShellSessionLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    mimetypes = []$/;"	v	class:TcshSessionLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-newspeak']$/;"	v	class:NewspeakLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    mimetypes = ['text\/x-smalltalk']$/;"	v	class:SmalltalkLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^    mimetypes = []$/;"	v	class:NuSMVLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^    mimetypes = ['text\/x-snobol']$/;"	v	class:SnobolLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    mimetypes = ['application\/x-pygments-tokens']$/;"	v	class:RawTokenLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    mimetypes = ['text\/plain']$/;"	v	class:TextLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-mysql']$/;"	v	class:MySqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-plpgsql']$/;"	v	class:PlPgsqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql']$/;"	v	class:PostgresLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-postgresql-psql']$/;"	v	class:PostgresConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-rql']$/;"	v	class:RqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sql']$/;"	v	class:SqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-sqlite3-console']$/;"	v	class:SqliteConsoleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    mimetypes = ['text\/x-tsql']$/;"	v	class:TransactSqlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^    mimetypes = ['text\/x-stata', 'text\/stata', 'application\/x-stata']$/;"	v	class:StataLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    mimetypes = ['application\/supercollider', 'text\/supercollider', ]$/;"	v	class:SuperColliderLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    mimetypes = ['text\/x-tcl', 'text\/x-script.tcl', 'application\/x-tcl']$/;"	v	class:TclLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-cheetah', 'application\/x-spitfire']$/;"	v	class:CheetahLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-coldfusion']$/;"	v	class:ColdfusionHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-django-templating', 'application\/x-jinja']$/;"	v	class:DjangoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-evoque']$/;"	v	class:EvoqueLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi', 'application\/x-kid']$/;"	v	class:GenshiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-genshi-text', 'text\/x-genshi']$/;"	v	class:GenshiTextLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+cheetah',$/;"	v	class:CheetahJavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+django',$/;"	v	class:JavascriptDjangoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+genshi',$/;"	v	class:JavascriptGenshiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+lasso',$/;"	v	class:LassoJavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+mako',$/;"	v	class:MakoJavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+myghty',$/;"	v	class:MyghtyJavascriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+php',$/;"	v	class:JavascriptPhpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+ruby',$/;"	v	class:JavascriptErbLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-javascript+smarty',$/;"	v	class:JavascriptSmartyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-jsp']$/;"	v	class:JspLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mako']$/;"	v	class:MakoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-mason']$/;"	v	class:MasonLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-myghty']$/;"	v	class:MyghtyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-php',$/;"	v	class:HtmlPhpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ruby-templating']$/;"	v	class:ErbLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-smarty']$/;"	v	class:SmartyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-ssp']$/;"	v	class:SspLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/x-twig']$/;"	v	class:TwigLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+cheetah', 'application\/xml+spitfire']$/;"	v	class:CheetahXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+django', 'application\/xml+jinja']$/;"	v	class:XmlDjangoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+evoque']$/;"	v	class:EvoqueXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+lasso']$/;"	v	class:LassoXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+mako']$/;"	v	class:MakoXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+myghty']$/;"	v	class:MyghtyXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+php']$/;"	v	class:XmlPhpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+ruby']$/;"	v	class:XmlErbLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+smarty']$/;"	v	class:XmlSmartyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['application\/xml+velocity']$/;"	v	class:VelocityXmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+django', 'text\/css+jinja']$/;"	v	class:CssDjangoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+genshi']$/;"	v	class:CssGenshiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+lasso']$/;"	v	class:LassoCssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+mako']$/;"	v	class:MakoCssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+myghty']$/;"	v	class:MyghtyCssLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+php']$/;"	v	class:CssPhpLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+ruby']$/;"	v	class:CssErbLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/css+smarty']$/;"	v	class:CssSmartyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+cheetah', 'text\/html+spitfire']$/;"	v	class:CheetahHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+django', 'text\/html+jinja']$/;"	v	class:HtmlDjangoLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+evoque']$/;"	v	class:EvoqueHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+genshi']$/;"	v	class:HtmlGenshiLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+handlebars', 'text\/x-handlebars-template']$/;"	v	class:HandlebarsHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+lasso',$/;"	v	class:LassoHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+mako']$/;"	v	class:MakoHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+myghty']$/;"	v	class:MyghtyHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+ruby']$/;"	v	class:RhtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+smarty']$/;"	v	class:HtmlSmartyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+twig']$/;"	v	class:TwigHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/html+velocity']$/;"	v	class:VelocityHtmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-tea']$/;"	v	class:TeaTemplateLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = ['text\/x-yaml+jinja', 'text\/x-sls']$/;"	v	class:YamlJinjaLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionCFCLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    mimetypes = []$/;"	v	class:ColdfusionMarkupLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    mimetypes = ['text\/x-gherkin']$/;"	v	class:GherkinLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    mimetypes = ['application\/x-awk']$/;"	v	class:AwkLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    mimetypes = ['text\/x-vim']$/;"	v	class:VimLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    mimetypes = ['application\/x-gettext', 'text\/x-gettext', 'text\/gettext']$/;"	v	class:GettextLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-irclog']$/;"	v	class:IrcLogsLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    mimetypes = ['text\/x-todo']$/;"	v	class:TodotxtLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-coq']$/;"	v	class:CoqLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-isabelle']$/;"	v	class:IsabelleLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    mimetypes = ['text\/x-lean']$/;"	v	class:LeanLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    mimetypes = ['text\/x-typoscript']$/;"	v	class:TypoScriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    mimetypes = ['application\/x-urbiscript']$/;"	v	class:UrbiscriptLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    mimetypes = ['text\/x-vclsnippet']$/;"	v	class:VCLSnippetLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    mimetypes = ['text\/x-vclsrc']$/;"	v	class:VCLLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    mimetypes = ['application\/x-qml', 'application\/x-qt.qbs+qml']$/;"	v	class:QmlLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-cirru']$/;"	v	class:CirruLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-duel', 'text\/x-jbst']$/;"	v	class:DuelLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/x-slim']$/;"	v	class:SlimLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    mimetypes = ['text\/xquery', 'application\/xquery']$/;"	v	class:XQueryLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^    mimetypes = ['text\/x-whiley']$/;"	v	class:WhileyLexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    mimetypes = ['text\/x-x10']$/;"	v	class:X10Lexer
mimetypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^    mimetypes = []$/;"	v	class:XorgLexer
min_long_size	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *min_long_size;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
minimatch	plugged/coc.nvim/package.json	/^    "minimatch": "^3.0.4",$/;"	s	object:dependencies
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.highPrioritySourceLimit
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 50,$/;"	n	object:properties.suggest.triggerCompletionWait
minimum	plugged/coc.nvim/data/schema.json	/^      "minimum": 500,$/;"	n	object:properties.suggest.timeout
miniyank#add_item	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#add_item(list, item) abort$/;"	f
miniyank#cycle	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#cycle(dir) abort$/;"	f
miniyank#do_putlist	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#do_putlist() abort$/;"	f
miniyank#drop	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#drop(data,cmd) abort$/;"	f
miniyank#fix_clip	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#fix_clip(list, pasted) abort$/;"	f
miniyank#force_motion	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#force_motion(motion) abort$/;"	f
miniyank#on_yank	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#on_yank(ev) abort$/;"	f
miniyank#parse_cb	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#parse_cb() abort$/;"	f
miniyank#putreg	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#putreg(data,cmd) abort$/;"	f
miniyank#read	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#read() abort$/;"	f
miniyank#startput	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#startput(cmd,defer) abort$/;"	f
miniyank#write	plugged/nvim-miniyank/autoload/miniyank.vim	/^function! miniyank#write(data) abort$/;"	f
mkfilelist	plugged/javascript-libraries-syntax.vim/Makefile	/^mkfilelist:$/;"	t
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line='', indent=None):$/;"	m	class:SnippetUtil
mkrecordscript	plugged/javascript-libraries-syntax.vim/Makefile	/^mkrecordscript:$/;"	t
mma	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mma": null,$/;"	z
mmix	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mmix": null,$/;"	z
mmp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mmp": null,$/;"	z
modconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "modconf": null,$/;"	z
mode	plugged/coc.nvim/webpack.config.js	/^  mode: 'none',$/;"	p	class:module.exports
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
model	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "model": null,$/;"	z
modeline_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/modeline.py	/^modeline_re = re.compile(r'''$/;"	v
modifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    modifiers = ('A', 'B', 'AB', 'BA', 'F', 'X', 'I')$/;"	v	class:RedcodeLexer
modifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    modifiers = ($/;"	v	class:X10Lexer
modify	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def modify(self, fileobj, events, data=None):$/;"	m	class:BaseSelector
modname_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    modname_re = r'[A-Z]%(alnum)s*(?:\\.[A-Z]%(alnum)s*)*' % {'alnum': alnum}$/;"	v	class:ElixirLexer
modsim3	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "modsim3": null,$/;"	z
modula2	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "modula2": null,$/;"	z
modula3	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "modula3": null,$/;"	z
module	plugged/coc.nvim/data/schema.json	/^        "module": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
module	plugged/coc.nvim/data/schema.json	/^        "module": {$/;"	o	object:definitions.languageServerModule.properties
module	plugged/coc.nvim/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
module	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^                module = __import__(module_name, None, None, [''])$/;"	v
moduleFileExtensions	plugged/coc.nvim/package.json	/^    "moduleFileExtensions": [$/;"	a	object:jest
moduleResolution	plugged/coc.nvim/tsconfig.json	/^    "moduleResolution": "node",$/;"	s	object:compilerOptions
module_callbacks	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def module_callbacks():$/;"	f
module_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/_mapping.py	/^                module_name = 'pygments.formatters%s.%s' % ($/;"	v
module_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mapping.py	/^                module_name = 'pygments.lexers%s.%s' % ($/;"	v
moduledef	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static struct PyModuleDef moduledef = {$/;"	v	typeref:struct:PyModuleDef	file:
moduleinit	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^moduleinit(void)$/;"	f	typeref:typename:PyObject *	file:
monk	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "monk": null,$/;"	z
monotonic	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    monotonic = time.time$/;"	v
moo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "moo": null,$/;"	z
morsel_to_cookie	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def morsel_to_cookie(morsel):$/;"	f
mount	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def mount(self, prefix, adapter):$/;"	m	class:Session
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
moves	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^moves = _MovedItems(__name__ + ".moves")$/;"	v
moves	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^moves = _MovedItems(__name__ + ".moves")$/;"	v
mozilla	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	mozilla: \/mozilla\/.test( userAgent ) && !\/(compatible|webkit)\/.test( userAgent )$/;"	p	class:jQuery.browser
mp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mp": null,$/;"	z
mplayerconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mplayerconf": null,$/;"	z
mrxvtrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mrxvtrc": null,$/;"	z
msidl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "msidl": null,$/;"	z
msie	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	msie: \/msie\/.test( userAgent ) && !\/opera\/.test( userAgent ),$/;"	p	class:jQuery.browser
msmessages	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "msmessages": null,$/;"	z
msql	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "msql": null,$/;"	z
mssql	plugged/php.vim/attic/syntax.ini	/^mssql = no$/;"	k	section:extensions
multiple_domains	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def multiple_domains(self):$/;"	m	class:RequestsCookieJar
mupad	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mupad": null,$/;"	z
mush	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mush": null,$/;"	z
mustache	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "mustache": "Mustache",$/;"	s
muttrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "muttrc": null,$/;"	z
mysql	plugged/php.vim/attic/syntax.ini	/^mysql = yes$/;"	k	section:extensions
mysql	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "mysql": null,$/;"	z
mysqli	plugged/php.vim/attic/syntax.ini	/^mysqli = yes$/;"	k	section:extensions
n	plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.n = function(module) {$/;"	f	function:__webpack_require__
name	plugged/coc.nvim/package.json	/^  "name": "coc.nvim",$/;"	s
name	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^  "name": "snippet-sample",$/;"	s
name	plugged/far.vim/test/guess.py	/^name = raw_input('Hello! What is your name?\\n')$/;"	v
name	plugged/tcomment_vim/addon-info.json	/^    "name" : "tcomment",$/;"	s
name	plugged/ultisnips/utils/get_tm_snippets.py	/^        name = bundle.lower()$/;"	v
name	plugged/ultisnips/utils/get_tm_snippets.py	/^        name = sys.argv[2]$/;"	v
name	plugged/vim-snippets/addon-info.json	/^  "name" : "snipmate-snippets",$/;"	s
name	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def name(self):$/;"	m	class:SectionProxy
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    name = None$/;"	v	class:Formatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/bbcode.py	/^    name = 'BBCode'$/;"	v	class:BBCodeFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    name = 'HTML'$/;"	v	class:HtmlFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    name = 'img'$/;"	v	class:ImageFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    name = 'img_bmp'$/;"	v	class:BmpImageFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    name = 'img_gif'$/;"	v	class:GifImageFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    name = 'img_jpg'$/;"	v	class:JpgImageFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/irc.py	/^    name = 'IRC'$/;"	v	class:IRCFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^    name = 'LaTeX'$/;"	v	class:LatexFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    name = 'Raw tokens'$/;"	v	class:RawTokenFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    name = 'Testcase'$/;"	v	class:TestcaseFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    name = 'Text only'$/;"	v	class:NullFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/rtf.py	/^    name = 'RTF'$/;"	v	class:RtfFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/svg.py	/^    name = 'SVG'$/;"	v	class:SvgFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal.py	/^    name = 'Terminal'$/;"	v	class:TerminalFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    name = 'Terminal256'$/;"	v	class:Terminal256Formatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    name = 'TerminalTrueColor'$/;"	v	class:TerminalTrueColorFormatter
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    name = None$/;"	v	class:Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    name = 'ActionScript 3'$/;"	v	class:ActionScript3Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    name = 'ActionScript'$/;"	v	class:ActionScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    name = 'MXML'$/;"	v	class:MxmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    name = 'BC'$/;"	v	class:BCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    name = 'GAP'$/;"	v	class:GAPLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    name = 'Mathematica'$/;"	v	class:MathematicaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    name = 'MuPAD'$/;"	v	class:MuPADLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    name = 'AmbientTalk'$/;"	v	class:AmbientTalkLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^    name = 'Ampl'$/;"	v	class:AmplLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^    name = 'APL'$/;"	v	class:APLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    name = 'ADL'$/;"	v	class:AdlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    name = 'ODIN'$/;"	v	class:OdinLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    name = 'cADL'$/;"	v	class:CadlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'GAS'$/;"	v	class:GasLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'HSAIL'$/;"	v	class:HsailLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'LLVM'$/;"	v	class:LlvmLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'NASM'$/;"	v	class:NasmLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'TASM'$/;"	v	class:TasmLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'c-objdump'$/;"	v	class:CObjdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'ca65 assembler'$/;"	v	class:Ca65Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'cpp-objdump'$/;"	v	class:CppObjdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'd-objdump'$/;"	v	class:DObjdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'objdump'$/;"	v	class:ObjdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    name = 'objdump-nasm'$/;"	v	class:NasmObjdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    name = 'AutoIt'$/;"	v	class:AutoItLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    name = 'autohotkey'$/;"	v	class:AutohotkeyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name = 'BlitzBasic'$/;"	v	class:BlitzBasicLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name = 'BlitzMax'$/;"	v	class:BlitzMaxLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name = 'CBM BASIC V2'$/;"	v	class:CbmBasicV2Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name = 'Monkey'$/;"	v	class:MonkeyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name = 'QBasic'$/;"	v	class:QBasicLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    name = 'BST'$/;"	v	class:BSTLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    name = 'BibTeX'$/;"	v	class:BibTeXLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'ABAP'$/;"	v	class:ABAPLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'COBOL'$/;"	v	class:CobolLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'COBOLFree'$/;"	v	class:CobolFreeformatLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'GoodData-CL'$/;"	v	class:GoodDataCLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'MAQL'$/;"	v	class:MaqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    name = 'OpenEdge ABL'$/;"	v	class:OpenEdgeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    name = 'C'$/;"	v	class:CLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    name = 'C++'$/;"	v	class:CppLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'Arduino'$/;"	v	class:ArduinoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'CUDA'$/;"	v	class:CudaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'Clay'$/;"	v	class:ClayLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'MQL'$/;"	v	class:MqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'Pike'$/;"	v	class:PikeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'SWIG'$/;"	v	class:SwigLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'Vala'$/;"	v	class:ValaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'eC'$/;"	v	class:ECLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    name = 'nesC'$/;"	v	class:NesCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^    name = 'Cap\\'n Proto'$/;"	v	class:CapnProtoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^    name = 'Chapel'$/;"	v	class:ChapelLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    name = 'Clean'$/;"	v	class:CleanLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'ApacheConf'$/;"	v	class:ApacheConfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'CFEngine3'$/;"	v	class:Cfengine3Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Docker'$/;"	v	class:DockerLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'INI'$/;"	v	class:IniLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Kconfig'$/;"	v	class:KconfigLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Lighttpd configuration file'$/;"	v	class:LighttpdConfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Nginx configuration file'$/;"	v	class:NginxConfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'PacmanConf'$/;"	v	class:PacmanConfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'PkgConfig'$/;"	v	class:PkgConfigLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Properties'$/;"	v	class:PropertiesLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'SquidConf'$/;"	v	class:SquidConfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Termcap'$/;"	v	class:TermcapLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Terminfo'$/;"	v	class:TerminfoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'Terraform'$/;"	v	class:TerraformLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    name = 'reg'$/;"	v	class:RegeditLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    name = "PyPy Log"$/;"	v	class:PyPyLogLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    name = 'VCTreeStatus'$/;"	v	class:VCTreeStatusLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    name = 'Crystal'$/;"	v	class:CrystalLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    name = 'Csound Document'$/;"	v	class:CsoundDocumentLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    name = 'Csound Orchestra'$/;"	v	class:CsoundOrchestraLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    name = 'Csound Score'$/;"	v	class:CsoundScoreLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    name = 'CSS'$/;"	v	class:CssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    name = 'LessCss'$/;"	v	class:LessCssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    name = 'SCSS'$/;"	v	class:ScssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    name = 'Sass'$/;"	v	class:SassLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    name = 'Croc'$/;"	v	class:CrocLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    name = 'D'$/;"	v	class:DLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    name = 'MiniD'$/;"	v	class:MiniDLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    name = 'Smali'$/;"	v	class:SmaliLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    name = 'JSON'$/;"	v	class:JsonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    name = 'JSON-LD'$/;"	v	class:JsonLdLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    name = 'JSONBareObject'$/;"	v	class:JsonBareObjectLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    name = 'YAML'$/;"	v	class:YamlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    name = 'Darcs Patch'$/;"	v	class:DarcsPatchLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    name = 'Diff'$/;"	v	class:DiffLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    name = 'WDiff'$/;"	v	class:WDiffLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'Boo'$/;"	v	class:BooLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'C#'$/;"	v	class:CSharpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'F#'$/;"	v	class:FSharpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'Nemerle'$/;"	v	class:NemerleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'VB.net'$/;"	v	class:VbNetLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'aspx-cs'$/;"	v	class:CSharpAspxLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'aspx-gen'$/;"	v	class:GenericAspxLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    name = 'aspx-vb'$/;"	v	class:VbNetAspxLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Alloy'$/;"	v	class:AlloyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Bro'$/;"	v	class:BroLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Crmsh'$/;"	v	class:CrmshLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Flatline'$/;"	v	class:FlatlineLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Mscgen'$/;"	v	class:MscgenLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Pan'$/;"	v	class:PanLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Protocol Buffer'$/;"	v	class:ProtoBufLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Puppet'$/;"	v	class:PuppetLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'RSL'$/;"	v	class:RslLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Snowball'$/;"	v	class:SnowballLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'Thrift'$/;"	v	class:ThriftLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    name = 'VGL'$/;"	v	class:VGLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    name = 'Dylan session'$/;"	v	class:DylanConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    name = 'Dylan'$/;"	v	class:DylanLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    name = 'DylanLID'$/;"	v	class:DylanLidLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    name = 'ECL'$/;"	v	class:ECLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^    name = 'Eiffel'$/;"	v	class:EiffelLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    name = 'Elm'$/;"	v	class:ElmLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    name = 'Elixir iex session'$/;"	v	class:ElixirConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    name = 'Elixir'$/;"	v	class:ElixirLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    name = 'Erlang erl session'$/;"	v	class:ErlangShellLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    name = 'Erlang'$/;"	v	class:ErlangLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'Aheui'$/;"	v	class:AheuiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'Befunge'$/;"	v	class:BefungeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'Brainfuck'$/;"	v	class:BrainfuckLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'CAmkES'$/;"	v	class:CAmkESLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'CapDL'$/;"	v	class:CapDLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    name = 'Redcode'$/;"	v	class:RedcodeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    name = 'Ezhil'$/;"	v	class:EzhilLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    name = 'Factor'$/;"	v	class:FactorLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    name = 'Fantom'$/;"	v	class:FantomLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    name = 'Felix'$/;"	v	class:FelixLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    name = 'Forth'$/;"	v	class:ForthLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    name = 'Fortran'$/;"	v	class:FortranLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    name = 'FortranFixed'$/;"	v	class:FortranFixedLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    name = 'FoxPro'$/;"	v	class:FoxProLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    name = 'Go'$/;"	v	class:GoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    name = 'ABNF'$/;"	v	class:AbnfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    name = 'BNF'$/;"	v	class:BnfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    name = 'JSGF'$/;"	v	class:JsgfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^    name = 'Cypher'$/;"	v	class:CypherLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    name = 'Asymptote'$/;"	v	class:AsymptoteLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    name = 'GLSL'$/;"	v	class:GLShaderLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    name = 'Gnuplot'$/;"	v	class:GnuplotLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    name = 'POVRay'$/;"	v	class:PovrayLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    name = 'PostScript'$/;"	v	class:PostScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Agda'$/;"	v	class:AgdaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Cryptol'$/;"	v	class:CryptolLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Haskell'$/;"	v	class:HaskellLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Idris'$/;"	v	class:IdrisLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Koka'$/;"	v	class:KokaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Literate Agda'$/;"	v	class:LiterateAgdaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Literate Cryptol'$/;"	v	class:LiterateCryptolLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Literate Haskell'$/;"	v	class:LiterateHaskellLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    name = 'Literate Idris'$/;"	v	class:LiterateIdrisLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    name = 'Haxe'$/;"	v	class:HaxeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    name = 'Hxml'$/;"	v	class:HxmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    name = 'systemverilog'$/;"	v	class:SystemVerilogLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    name = 'verilog'$/;"	v	class:VerilogLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    name = 'vhdl'$/;"	v	class:VhdlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^    name = 'Hexdump'$/;"	v	class:HexdumpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'DTD'$/;"	v	class:DtdLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'HTML'$/;"	v	class:HtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'Haml'$/;"	v	class:HamlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'Pug'$/;"	v	class:PugLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'Scaml'$/;"	v	class:ScamlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'XML'$/;"	v	class:XmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    name = 'XSLT'$/;"	v	class:XsltLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    name = 'IDL'$/;"	v	class:IDLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    name = 'Igor'$/;"	v	class:IgorLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    name = 'Limbo'$/;"	v	class:LimboLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    name = 'Debian Control file'$/;"	v	class:DebianControlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    name = 'Debian Sourcelist'$/;"	v	class:SourcesListLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    name = 'NSIS'$/;"	v	class:NSISLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    name = 'RPMSpec'$/;"	v	class:RPMSpecLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    name = 'Inform 6 template'$/;"	v	class:Inform6TemplateLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    name = 'Inform 6'$/;"	v	class:Inform6Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    name = 'Inform 7'$/;"	v	class:Inform7Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    name = 'TADS 3'$/;"	v	class:Tads3Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^    name = 'Io'$/;"	v	class:IoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    name = 'J'$/;"	v	class:JLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'CoffeeScript'$/;"	v	class:CoffeeScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Dart'$/;"	v	class:DartLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Earl Grey'$/;"	v	class:EarlGreyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'JavaScript'$/;"	v	class:JavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Juttle'$/;"	v	class:JuttleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Kal'$/;"	v	class:KalLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Lasso'$/;"	v	class:LassoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'LiveScript'$/;"	v	class:LiveScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Mask'$/;"	v	class:MaskLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'Objective-J'$/;"	v	class:ObjectiveJLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    name = 'TypeScript'$/;"	v	class:TypeScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    name = 'Julia console'$/;"	v	class:JuliaConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    name = 'Julia'$/;"	v	class:JuliaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'AspectJ'$/;"	v	class:AspectJLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Ceylon'$/;"	v	class:CeylonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Clojure'$/;"	v	class:ClojureLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'ClojureScript'$/;"	v	class:ClojureScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Golo'$/;"	v	class:GoloLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Gosu Template'$/;"	v	class:GosuTemplateLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Gosu'$/;"	v	class:GosuLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Groovy'$/;"	v	class:GroovyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Ioke'$/;"	v	class:IokeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Jasmin'$/;"	v	class:JasminLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Java'$/;"	v	class:JavaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Kotlin'$/;"	v	class:KotlinLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Pig'$/;"	v	class:PigLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Scala'$/;"	v	class:ScalaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    name = 'Xtend'$/;"	v	class:XtendLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'CPSA'$/;"	v	class:CPSALexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'Common Lisp'$/;"	v	class:CommonLispLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'EmacsLisp'$/;"	v	class:EmacsLispLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'Hy'$/;"	v	class:HyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'NewLisp'$/;"	v	class:NewLispLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'Racket'$/;"	v	class:RacketLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'Scheme'$/;"	v	class:SchemeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'Shen'$/;"	v	class:ShenLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    name = 'xtlang'$/;"	v	class:XtlangLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    name = 'Base Makefile'$/;"	v	class:BaseMakefileLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    name = 'CMake'$/;"	v	class:CMakeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    name = 'Makefile'$/;"	v	class:MakefileLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = "CSS+mozpreproc"$/;"	v	class:MozPreprocCssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = "Javascript+mozpreproc"$/;"	v	class:MozPreprocJavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = "XUL+mozpreproc"$/;"	v	class:MozPreprocXulLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'BBCode'$/;"	v	class:BBCodeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'Groff'$/;"	v	class:GroffLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'MoinMoin\/Trac Wiki markup'$/;"	v	class:MoinWikiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'TeX'$/;"	v	class:TexLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'markdown'$/;"	v	class:MarkdownLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'mozhashpreproc'$/;"	v	class:MozPreprocHashLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'mozpercentpreproc'$/;"	v	class:MozPreprocPercentLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    name = 'reStructuredText'$/;"	v	class:RstLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    name = 'Matlab session'$/;"	v	class:MatlabSessionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    name = 'Matlab'$/;"	v	class:MatlabLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    name = 'Octave'$/;"	v	class:OctaveLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    name = 'Scilab'$/;"	v	class:ScilabLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    name = 'OCaml'$/;"	v	class:OcamlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    name = 'Opa'$/;"	v	class:OpaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    name = 'Standard ML'$/;"	v	class:SMLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    name = 'BUGS'$/;"	v	class:BugsLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    name = 'JAGS'$/;"	v	class:JagsLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    name = 'Modelica'$/;"	v	class:ModelicaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    name = 'Stan'$/;"	v	class:StanLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    name = 'Modula-2'$/;"	v	class:Modula2Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^    name = 'Monte'$/;"	v	class:MonteLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    name = 'NCL'$/;"	v	class:NCLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    name = 'Nimrod'$/;"	v	class:NimrodLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^    name = 'Nit'$/;"	v	class:NitLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    name = 'Nix'$/;"	v	class:NixLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    name = 'Component Pascal'$/;"	v	class:ComponentPascalLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    name = 'Logos'$/;"	v	class:LogosLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    name = 'Objective-C'$/;"	v	class:ObjectiveCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    name = 'Objective-C++'$/;"	v	class:ObjectiveCppLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    name = 'Swift'$/;"	v	class:SwiftLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^    name = 'Ooc'$/;"	v	class:OocLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    name = 'ParaSail'$/;"	v	class:ParaSailLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With ActionScript Target'$/;"	v	class:AntlrActionScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With C# Target'$/;"	v	class:AntlrCSharpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With CPP Target'$/;"	v	class:AntlrCppLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With Java Target'$/;"	v	class:AntlrJavaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With ObjectiveC Target'$/;"	v	class:AntlrObjectiveCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With Perl Target'$/;"	v	class:AntlrPerlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With Python Target'$/;"	v	class:AntlrPythonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR With Ruby Target'$/;"	v	class:AntlrRubyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'ANTLR'$/;"	v	class:AntlrLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'EBNF'$/;"	v	class:EbnfLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Embedded Ragel'$/;"	v	class:RagelEmbeddedLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in C Host'$/;"	v	class:RagelCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in CPP Host'$/;"	v	class:RagelCppLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in D Host'$/;"	v	class:RagelDLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in Java Host'$/;"	v	class:RagelJavaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in Objective C Host'$/;"	v	class:RagelObjectiveCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel in Ruby Host'$/;"	v	class:RagelRubyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Ragel'$/;"	v	class:RagelLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    name = 'Treetop'$/;"	v	class:TreetopLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    name = 'Ada'$/;"	v	class:AdaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    name = 'Delphi'$/;"	v	class:DelphiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    name = 'Pawn'$/;"	v	class:PawnLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    name = 'SourcePawn'$/;"	v	class:SourcePawnLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    name = 'Perl'$/;"	v	class:PerlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    name = 'Perl6'$/;"	v	class:Perl6Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    name = 'PHP'$/;"	v	class:PhpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    name = 'Zephir'$/;"	v	class:ZephirLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    name = 'Praat'$/;"	v	class:PraatLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    name = 'Logtalk'$/;"	v	class:LogtalkLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    name = 'Prolog'$/;"	v	class:PrologLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Cython'$/;"	v	class:CythonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'NumPy'$/;"	v	class:NumPyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Python 3'$/;"	v	class:Python3Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Python 3.0 Traceback'$/;"	v	class:Python3TracebackLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Python Traceback'$/;"	v	class:PythonTracebackLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Python console session'$/;"	v	class:PythonConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'Python'$/;"	v	class:PythonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    name = 'dg'$/;"	v	class:DgLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^    name = 'QVTO'$/;"	v	class:QVToLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    name = 'RConsole'$/;"	v	class:RConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    name = 'Rd'$/;"	v	class:RdLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    name = 'S'$/;"	v	class:SLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    name = 'SPARQL'$/;"	v	class:SparqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    name = 'Turtle'$/;"	v	class:TurtleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    name = 'REBOL'$/;"	v	class:RebolLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    name = 'Red'$/;"	v	class:RedLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    name = 'ResourceBundle'$/;"	v	class:ResourceLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^    name = 'Relax-NG Compact'$/;"	v	class:RNCCompactLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    name = 'Roboconf Graph'$/;"	v	class:RoboconfGraphLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    name = 'Roboconf Instances'$/;"	v	class:RoboconfInstancesLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    name = 'RobotFramework'$/;"	v	class:RobotFrameworkLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    name = 'Fancy'$/;"	v	class:FancyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    name = 'Ruby irb session'$/;"	v	class:RubyConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    name = 'Ruby'$/;"	v	class:RubyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    name = 'Rust'$/;"	v	class:RustLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    name      = 'SAS'$/;"	v	class:SASLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = "MoonScript"$/;"	v	class:MoonScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'AppleScript'$/;"	v	class:AppleScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'ChaiScript'$/;"	v	class:ChaiscriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'Easytrieve'$/;"	v	class:EasytrieveLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'Hybris'$/;"	v	class:HybrisLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'JCL'$/;"	v	class:JclLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'LSL'$/;"	v	class:LSLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'Lua'$/;"	v	class:LuaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'MOOCode'$/;"	v	class:MOOCodeLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    name = 'Rexx'$/;"	v	class:RexxLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Bash Session'$/;"	v	class:BashSessionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Bash'$/;"	v	class:BashLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Batchfile'$/;"	v	class:BatchLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Fish'$/;"	v	class:FishShellLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'MSDOS Session'$/;"	v	class:MSDOSSessionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'PowerShell Session'$/;"	v	class:PowerShellSessionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'PowerShell'$/;"	v	class:PowerShellLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Tcsh Session'$/;"	v	class:TcshSessionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    name = 'Tcsh'$/;"	v	class:TcshLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    name = 'Newspeak'$/;"	v	class:NewspeakLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    name = 'Smalltalk'$/;"	v	class:SmalltalkLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^    name = 'NuSMV'$/;"	v	class:NuSMVLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^    name = "Snobol"$/;"	v	class:SnobolLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    name = 'Raw token data'$/;"	v	class:RawTokenLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    name = 'Text only'$/;"	v	class:TextLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'MySQL'$/;"	v	class:MySqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'PL\/pgSQL'$/;"	v	class:PlPgsqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'PostgreSQL SQL dialect'$/;"	v	class:PostgresLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'PostgreSQL console (psql)'$/;"	v	class:PostgresConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'PostgreSQL console - regexp based lexer'$/;"	v	class:PsqlRegexLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'RQL'$/;"	v	class:RqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'SQL'$/;"	v	class:SqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'Transact-SQL'$/;"	v	class:TransactSqlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    name = 'sqlite3con'$/;"	v	class:SqliteConsoleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^    name      = 'Stata'$/;"	v	class:StataLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    name = 'SuperCollider'$/;"	v	class:SuperColliderLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    name = 'Tcl'$/;"	v	class:TclLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = "Angular2"$/;"	v	class:Angular2Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = "HTML + Angular2"$/;"	v	class:Angular2HtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = "HTML+Handlebars"$/;"	v	class:HandlebarsHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = "HTML+Twig"$/;"	v	class:TwigHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = "Handlebars"$/;"	v	class:HandlebarsLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Django\/Jinja'$/;"	v	class:CssDjangoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Genshi Text'$/;"	v	class:CssGenshiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Lasso'$/;"	v	class:LassoCssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Mako'$/;"	v	class:MakoCssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Myghty'$/;"	v	class:MyghtyCssLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+PHP'$/;"	v	class:CssPhpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Ruby'$/;"	v	class:CssErbLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'CSS+Smarty'$/;"	v	class:CssSmartyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Cheetah'$/;"	v	class:CheetahLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Coldfusion CFC'$/;"	v	class:ColdfusionCFCLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Coldfusion HTML'$/;"	v	class:ColdfusionHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Coldfusion'$/;"	v	class:ColdfusionMarkupLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Django\/Jinja'$/;"	v	class:DjangoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'ERB'$/;"	v	class:ErbLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Evoque'$/;"	v	class:EvoqueLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Genshi Text'$/;"	v	class:GenshiTextLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Genshi'$/;"	v	class:GenshiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Cheetah'$/;"	v	class:CheetahHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Django\/Jinja'$/;"	v	class:HtmlDjangoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Evoque'$/;"	v	class:EvoqueHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Genshi'$/;"	v	class:HtmlGenshiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Lasso'$/;"	v	class:LassoHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Mako'$/;"	v	class:MakoHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Myghty'$/;"	v	class:MyghtyHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+PHP'$/;"	v	class:HtmlPhpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Smarty'$/;"	v	class:HtmlSmartyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'HTML+Velocity'$/;"	v	class:VelocityHtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Java Server Page'$/;"	v	class:JspLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Cheetah'$/;"	v	class:CheetahJavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Django\/Jinja'$/;"	v	class:JavascriptDjangoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Genshi Text'$/;"	v	class:JavascriptGenshiLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Lasso'$/;"	v	class:LassoJavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Mako'$/;"	v	class:MakoJavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Myghty'$/;"	v	class:MyghtyJavascriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+PHP'$/;"	v	class:JavascriptPhpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Ruby'$/;"	v	class:JavascriptErbLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'JavaScript+Smarty'$/;"	v	class:JavascriptSmartyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Mako'$/;"	v	class:MakoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Mason'$/;"	v	class:MasonLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Myghty'$/;"	v	class:MyghtyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'RHTML'$/;"	v	class:RhtmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Scalate Server Page'$/;"	v	class:SspLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Smarty'$/;"	v	class:SmartyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Tea'$/;"	v	class:TeaTemplateLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Twig'$/;"	v	class:TwigLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'Velocity'$/;"	v	class:VelocityLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Cheetah'$/;"	v	class:CheetahXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Django\/Jinja'$/;"	v	class:XmlDjangoLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Evoque'$/;"	v	class:EvoqueXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Lasso'$/;"	v	class:LassoXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Mako'$/;"	v	class:MakoXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Myghty'$/;"	v	class:MyghtyXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+PHP'$/;"	v	class:XmlPhpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Ruby'$/;"	v	class:XmlErbLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Smarty'$/;"	v	class:XmlSmartyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'XML+Velocity'$/;"	v	class:VelocityXmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'YAML+Jinja'$/;"	v	class:YamlJinjaLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'cfstatement'$/;"	v	class:ColdfusionLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    name = 'liquid'$/;"	v	class:LiquidLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    name = 'Gherkin'$/;"	v	class:GherkinLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    name = 'TAP'$/;"	v	class:TAPLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    name = 'Awk'$/;"	v	class:AwkLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    name = 'VimL'$/;"	v	class:VimLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    name = 'Gettext Catalog'$/;"	v	class:GettextLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    name = 'HTTP'$/;"	v	class:HttpLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    name = 'IRC logs'$/;"	v	class:IrcLogsLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    name = 'Todotxt'$/;"	v	class:TodotxtLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    name = 'Coq'$/;"	v	class:CoqLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    name = 'Isabelle'$/;"	v	class:IsabelleLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    name = 'Lean'$/;"	v	class:LeanLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^    name = 'TrafficScript'$/;"	v	class:RtsLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    name = 'TypoScript'$/;"	v	class:TypoScriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    name = 'TypoScriptCssData'$/;"	v	class:TypoScriptCssDataLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    name = 'TypoScriptHtmlData'$/;"	v	class:TypoScriptHtmlDataLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    name = 'UrbiScript'$/;"	v	class:UrbiscriptLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    name = 'VCL'$/;"	v	class:VCLLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    name = 'VCLSnippets'$/;"	v	class:VCLSnippetLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    name = 'Boogie'$/;"	v	class:BoogieLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    name = 'Silver'$/;"	v	class:SilverLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    name = 'Cirru'$/;"	v	class:CirruLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    name = 'Duel'$/;"	v	class:DuelLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    name = 'QML'$/;"	v	class:QmlLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    name = 'Slim'$/;"	v	class:SlimLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    name = 'XQuery'$/;"	v	class:XQueryLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^    name = 'Whiley'$/;"	v	class:WhileyLexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    name = 'X10'$/;"	v	class:X10Lexer
name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^    name = 'Xorg'$/;"	v	class:XorgLexer
name	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^    def name(self):$/;"	m	class:BaseProject
name	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def name(self):$/;"	m	class:Git
name	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^    def name(self):$/;"	m	class:Mercurial
name	plugged/vim-wakatime/packages/wakatime/projects/projectfile.py	/^    def name(self):$/;"	m	class:ProjectFile
name	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^    def name(self):$/;"	m	class:ProjectMap
name	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def name(self):$/;"	m	class:Subversion
name_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    name_builtins = ($/;"	v	class:FelixLexer
name_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    def name_callback(lexer, match):$/;"	m	class:CsoundOrchestraLexer
name_class	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name_class = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_constant	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name_constant = r'[A-Z_][A-Z0-9_]*'$/;"	v	class:MonkeyLexer
name_function	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name_function = r'[A-Z]\\w*'$/;"	v	class:MonkeyLexer
name_module	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name_module = r'[a-z0-9_]*'$/;"	v	class:MonkeyLexer
name_pseudo	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    name_pseudo = ($/;"	v	class:FelixLexer
name_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    name_re = r'(?:\\.\\.\\.|[a-z_]%s*[!?]?)' % alnum$/;"	v	class:ElixirLexer
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
name_variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    name_variable = r'[a-z_]\\w*'$/;"	v	class:MonkeyLexer
named	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "named": null,$/;"	z
namedtuple_as_object	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int namedtuple_as_object;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
nameprep	plugged/vim-wakatime/packages/wakatime/packages/idna/compat.py	/^def nameprep(s):$/;"	f
namespace	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
nanorc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nanorc": null,$/;"	z
nasm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nasm": null,$/;"	z
nastran	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nastran": null,$/;"	z
natural	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "natural": null,$/;"	z
ncf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ncf": null,$/;"	z
ncname	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    ncname = "(?:%s+%s*)" % (ncnamestartchar, ncnamechar)$/;"	v	class:XQueryLexer
ncnamechar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    ncnamechar = r"(?:" + ncnamestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
ncnamestartchar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    ncnamestartchar = r"(?:[A-Z]|_|[a-z])"$/;"	v	class:XQueryLexer
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define()$/;"	f
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState)$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
net	plugged/coc.nvim/bin/tsserverForkStart.js	/^let net = require('net');$/;"	v
netloc	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def netloc(self):$/;"	m	class:Url
netrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "netrc": null,$/;"	z
netrw	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "netrw": null,$/;"	z
new	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def new(self, **kw):$/;"	m	class:Retry
new_child	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def new_child(self):                        # like Django's Context.push()$/;"	m	class:_ChainMap
new_data	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    new_data = {}$/;"	v
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
newline	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^newline = (r'((?:(?:;|\/\/).*)*)(\\n)', bygroups(Comment.Single, Text))$/;"	v
newmod	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^newmod = _automodule(__name__)$/;"	v
newmod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^newmod = _automodule(__name__)$/;"	v
next	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    next = __next__  # for python2$/;"	v	class:_TextIterator
next	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    next = __next__  # for python2$/;"	v	class:LineIterator
next	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    next = __next__$/;"	v	class:lookahead
next	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def next(self):$/;"	m	class:Response
next	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        def next(self):$/;"	m	class:Iterator
next	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^next = advance_iterator$/;"	v
next	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        def next(self):$/;"	m	class:Iterator
next	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^next = advance_iterator$/;"	v
next_state	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def next_state(self, c):$/;"	m	class:CodingStateMachine
no-console	plugged/coc.nvim/tslint.json	/^    "no-console": true$/;"	b	object:rules
no-invalid-template-strings	plugged/coc.nvim/tslint.json	/^    "no-invalid-template-strings": false,$/;"	b	object:rules
no-unused-expression	plugged/coc.nvim/tslint.json	/^    "no-unused-expression": false,$/;"	b	object:rules
noImplicitAny	plugged/coc.nvim/tsconfig.json	/^    "noImplicitAny": false,$/;"	b	object:compilerOptions
noImplicitThis	plugged/coc.nvim/tsconfig.json	/^    "noImplicitThis": true,$/;"	b	object:compilerOptions
noUnusedLocals	plugged/coc.nvim/tsconfig.json	/^    "noUnusedLocals": false,$/;"	b	object:compilerOptions
noUnusedParameters	plugged/coc.nvim/tsconfig.json	/^    "noUnusedParameters": false,$/;"	b	object:compilerOptions
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node	plugged/coc.nvim/webpack.config.js	/^  node: {$/;"	c	class:module.exports
nonid_reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    nonid_reserved = set(('(', ')', '[', ']', '{', '}', ',', ';', '...', '_'))$/;"	v	class:SMLLexer
nonmacro	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    nonmacro = r'\\\\.|[\\w!$%&*+-\/<=>?@\\[\\]^{}~]'$/;"	v	class:CommonLispLexer
nonmacro	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    nonmacro = r'\\\\.|[\\w!$%&*+-\/<=>?@^{}~|]'$/;"	v	class:EmacsLispLexer
nonpackage	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    nonpackage = False$/;"	v	class:PythonParser
norm	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^def norm(n):$/;"	f
normal	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    normal = r'[^{}[\\]+-]+'  # for performance$/;"	v	class:WDiffLexer
normalize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^def normalize(string, remove=''):$/;"	f
normalize	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:UTC
normalize	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:_FixedOffset
normalize	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def normalize(self, dt):$/;"	m	class:DstTzInfo
normalize	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def normalize(self, dt, is_dst=False):$/;"	m	class:StaticTzInfo
nosyntax	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nosyntax": null,$/;"	z
now	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function now(){$/;"	f
nqc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nqc": null,$/;"	z
nroff	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nroff": null,$/;"	z
nsis	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "nsis": null,$/;"	z
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
num	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^function num(elem, prop) {$/;"	f
num	plugged/far.vim/test/odd.py	/^num = int(input("Enter a number: "))$/;"	v
num	plugged/vim-gitgutter/unplace.vim	/^let num = 500$/;"	v
number	plugged/far.vim/test/guess.py	/^number = random.randint(1, 20)$/;"	v
number	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    number = r'(?:0[xX][a-zA-Z0-9]+|\\d+)'$/;"	v	class:GasLexer
number_lines_in_file	plugged/vim-wakatime/packages/wakatime/stats.py	/^def number_lines_in_file(file_name):$/;"	f
numbers.vim	plugged/numbers.vim/README.md	/^numbers.vim$/;"	c
numeric_types	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    numeric_types = (int, float)$/;"	v
numeric_types	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    numeric_types = (int, long, float)$/;"	v
nvim-miniyank	plugged/nvim-miniyank/README.md	/^# nvim-miniyank$/;"	c
o	autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> o <NOP>$/;"	m
o	plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnP/;"	f	function:__webpack_require__
o	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> o           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
o	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> o           :call b:buffergator_catalog_viewer.visit_targe/;"	m
o	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> o           :call b:buffergator_catalog_viewer.visit_target()</;"	m
o	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> o    :<C-U>exe <SID>BlameCommit((&splitbelow ? "botright" : "/;"	m
o	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> o     :<C-U>.,.+1Gblame<CR>$/;"	m
o	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> o     :<C-U>exe <SID>GF("split")<CR>$/;"	m
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
obj	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "obj": null,$/;"	z
objc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "objc": "Objective-C",$/;"	s
objcpp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "objcpp": "Objective-C++",$/;"	s
object_hook	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *object_hook;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
objective	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^def objective(baselexer):$/;"	f
objective-c	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "objective-c": "Objective-C",$/;"	s
objective-c++	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "objective-c++": "Objective-C++",$/;"	s
objective-j	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "objective-j": "Objective-J",$/;"	s
objects	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    objects = ($/;"	v	class:PraatLexer
objm2_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    objm2_additional_builtins = ($/;"	v	class:Modula2Lexer
objm2_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    objm2_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
objm2_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    objm2_additional_reserved_words = ($/;"	v	class:Modula2Lexer
objm2_lexemes_to_reject	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    objm2_lexemes_to_reject = ($/;"	v	class:Modula2Lexer
ocaml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "ocaml": "OCaml",$/;"	s
ocaml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ocaml": "OCaml",$/;"	s
occam	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "occam": null,$/;"	z
oci8	plugged/php.vim/attic/syntax.ini	/^oci8 = no$/;"	k	section:extensions
oci8_11g	plugged/php.vim/attic/syntax.ini	/^oci8_11g = no$/;"	k	section:extensions
octn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    octn = r'[0-7]+q'$/;"	v	class:NasmLexer
octn	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    octn = r'[0-7]+q'$/;"	v	class:TasmLexer
odbc	plugged/php.vim/attic/syntax.ini	/^odbc = no$/;"	k	section:extensions
offset	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.offset = function() {$/;"	f	function:jQuery.fn
offsetChild	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetChild  = elem,$/;"	v
offsetParent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetParent = elem.offsetParent,$/;"	v
ok	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def ok(self):$/;"	m	class:Response
old_where	plugged/vim-wakatime/packages/wakatime/packages/certifi/core.py	/^def old_where():$/;"	f
oldmod	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
oldmod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^oldmod = sys.modules[__name__]$/;"	v
omnimark	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "omnimark": null,$/;"	z
on_init	plugged/nvim-miniyank/rplugin/python3/denite/source/miniyank.py	/^    def on_init(self, context):$/;"	m	class:Source
one	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						one = elem.type == "select-one";$/;"	v
one	plugged/lightline.vim/README.md	/^### one$/;"	S
oneOf	plugged/coc.nvim/data/schema.json	/^          "oneOf": [$/;"	a	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$
onreadystatechange	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var onreadystatechange = function(isTimeout){$/;"	f	function:AnonymousFunctionc5b93c5ca100
op	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    op = (u'[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:\/?@\\u00a6-\\u00a7\\u00a9\\u00ac\\u00ae\\u00b0-\\/;"	v	class:ScalaLexer
op1_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    op1_re = "|".join(re.escape(s) for s in OPERATORS1)$/;"	v	class:ElixirLexer
op2_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    op2_re = "|".join(re.escape(s) for s in OPERATORS2)$/;"	v	class:ElixirLexer
op3_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    op3_re = "|".join(re.escape(s) for s in OPERATORS3)$/;"	v	class:ElixirLexer
opWords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    opWords = [$/;"	v	class:NimrodLexer
op_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    op_re = r'[.=\\-<>,@~%\/+?*&^!]'$/;"	v	class:OpaLexer
opcode_name_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    def opcode_name_callback(lexer, match):$/;"	m	class:CsoundOrchestraLexer
opcodes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    opcodes = ('DAT', 'MOV', 'ADD', 'SUB', 'MUL', 'DIV', 'MOD',$/;"	v	class:RedcodeLexer
open	plugged/vim-wakatime/packages/wakatime/compat.py	/^    open = codecs.open$/;"	v
open	plugged/vim-wakatime/packages/wakatime/compat.py	/^    open = open$/;"	v
open_ascii_file	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def open_ascii_file(filename, mode):$/;"	f
open_brace_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    def open_brace_callback(self, match, ctx):$/;"	m	class:BibTeXLexer
open_resource	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def open_resource(name):$/;"	f
opener	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    opener = Opener()$/;"	v
opening_brace_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    def opening_brace_callback(lexer, match, context):$/;"	m	class:Perl6Lexer
opening_tag	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    opening_tag = False$/;"	v	class:HtmlParser
openroad	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "openroad": null,$/;"	z
openssl	plugged/php.vim/attic/syntax.ini	/^openssl = yes$/;"	k	section:extensions
openssl_backend	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^from cryptography.hazmat.backends.openssl import backend as openssl_backend$/;"	x
opera	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	opera: \/opera\/.test( userAgent ),$/;"	p	class:jQuery.browser
operations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    operations = ($/;"	v	class:IgorLexer
operator	plugged/coc.nvim/data/schema.json	/^        "operator": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
operator_root_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
operator_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    operator_words = ($/;"	v	class:FelixLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    operators = ($/;"	v	class:MathematicaLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    operators = ('AND', 'EQV', 'IMP', 'NOT', 'OR', 'XOR')$/;"	v	class:QBasicLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    operators = set(('not', 'or', 'and', 'xor'))$/;"	v	class:ArduinoLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    operators = r'[!$%&*+\\.\/:<=>?@^|~-]'$/;"	v	class:FSharpLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    operators = set(($/;"	v	class:DylanLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    operators = r'(\\+\\+?|--?|\\*|\/|<|>|\/=|=:=|=\/=|=<|>=|==?|<-|!|\\?)'$/;"	v	class:ErlangLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    operators = r'[!$%&*+\\.\/:<=>?@^|~-]'$/;"	v	class:OcamlLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    operators = ['++', '+', '?', '.', '!', '\/\/', '==',$/;"	v	class:NixLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    operators = ($/;"	v	class:PowerShellLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:IsabelleLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    operators = ($/;"	v	class:LeanLexer
operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    operators = r'[!$%&*+\\.\/:<=>?@^|~-]'$/;"	v	class:CoqLexer
opl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "opl": null,$/;"	z
ops_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    ops_re = r'(?:%s|%s|%s)' % (op3_re, op2_re, op1_re)$/;"	v	class:ElixirLexer
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						var option = options[ i ];$/;"	v
option	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_vim_builtins.py	/^option = _getoption()$/;"	v
option_set_to	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def option_set_to(name, new_value):$/;"	f
option_spec	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    option_spec = {}$/;"	v	class:PygmentsDoc
optional_arguments	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    optional_arguments = 0$/;"	v	class:PygmentsDoc
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						options = elem.options,$/;"	v
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var options = name;$/;"	v
options	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
options	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def options(self, section):$/;"	m	class:RawConfigParser
options	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def options(url, **kwargs):$/;"	f
options	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def options(self, url, **kwargs):$/;"	m	class:Session
options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def options(self):$/;"	m	class:PyOpenSSLContext
options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def options(self, value):$/;"	m	class:PyOpenSSLContext
options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def options(self):$/;"	m	class:SecureTransportContext
options	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def options(self, value):$/;"	m	class:SecureTransportContext
optionxform	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def optionxform(self, optionstr):$/;"	m	class:RawConfigParser
opts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    opts = ($/;"	v	class:SquidConfLexer
ora	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ora": null,$/;"	z
orig_util_HAS_SNI	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^orig_util_HAS_SNI = util.HAS_SNI$/;"	v
orig_util_HAS_SNI	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^orig_util_HAS_SNI = util.HAS_SNI$/;"	v
orig_util_SSLContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^orig_util_SSLContext = util.ssl_.SSLContext$/;"	v
orig_util_SSLContext	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^orig_util_SSLContext = util.ssl_.SSLContext$/;"	v
origin_req_host	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def origin_req_host(self):$/;"	m	class:MockRequest
originalEvent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = { originalEvent: originalEvent };$/;"	p	class:event
originalEvent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var originalEvent = event;$/;"	v
originalWriteSync	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let originalWriteSync = fs.writeSync;$/;"	v
outDir	plugged/coc.nvim/tsconfig.json	/^    "outDir": "lib",$/;"	s	object:compilerOptions
output	plugged/coc.nvim/webpack.config.js	/^  output: {$/;"	c	class:module.exports
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ''$/;"	v	class:VimTestCase
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	config/03.remaps.vim	/^map p <Plug>(miniyank-autoput)$/;"	m
p	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> p :call far#show_preview_window_under_cursor()<cr>$/;"	m
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
p	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> p    :<C-U>exe <SID>Edit((&splitbelow ? "botright" : "topleft/;"	m
p	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> p     :<C-U>.,.+2Gblame<CR>$/;"	m
p	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> p     :<C-U>exe <SID>GF("pedit")<CR>$/;"	m
p1_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    p1_additional_builtins = ($/;"	v	class:Modula2Lexer
p1_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    p1_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
p1_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    p1_additional_reserved_words = ($/;"	v	class:Modula2Lexer
package_folder	plugged/vim-wakatime/packages/wakatime/cli.py	/^    package_folder = os.path.dirname(os.path.dirname(os.path.abspath(sys.argv[0])))$/;"	v
package_folder	plugged/vim-wakatime/packages/wakatime/cli.py	/^package_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))$/;"	v
packers['_string']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['_string'] = function (buffer, str)$/;"	f
packers['_table']	plugged/nvim-miniyank/lua/MessagePack.lua	/^        packers['_table'] = function (buffer, tbl)$/;"	f
packers['_table']	plugged/nvim-miniyank/lua/MessagePack.lua	/^        packers['_table'] = function(buffer, tbl)$/;"	f
packers['array']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['array'] = function (buffer, tbl, n)$/;"	f
packers['binary']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['binary'] = function (buffer, str)$/;"	f
packers['boolean']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['boolean'] = function (buffer, bool)$/;"	f
packers['double']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['double'] = function (buffer, n)$/;"	f
packers['ext']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['ext'] = function (buffer, tag, data)$/;"	f
packers['float']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['float'] = function (buffer, n)$/;"	f
packers['map']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['map'] = function (buffer, tbl, n)$/;"	f
packers['nil']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['nil'] = function (buffer)$/;"	f
packers['number']	plugged/nvim-miniyank/lua/MessagePack.lua	/^        packers['number'] = function (buffer, n)$/;"	f
packers['signed']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['signed'] = function (buffer, n)$/;"	f
packers['string_compat']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['string_compat'] = function (buffer, str)$/;"	f
packers['table']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['table'] = function (buffer, tbl)$/;"	f
packers['unsigned']	plugged/nvim-miniyank/lua/MessagePack.lua	/^packers['unsigned'] = function (buffer, n)$/;"	f
pairs_hook	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *pairs_hook;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
pamconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pamconf": null,$/;"	z
papp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "papp": null,$/;"	z
parens	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    parens = 0$/;"	v	class:GoParser
parens	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    parens = 0$/;"	v	class:PhpParser
parens	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    parens = 0$/;"	v	class:PythonParser
parent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var parent       = elem.parentNode,$/;"	v
parent	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    parent = None$/;"	v	class:_TokenType
parents	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def parents(self):                          # like Django's Context.pop()$/;"	m	class:_ChainMap
parse	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def parse(self):$/;"	m	class:DependencyParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def parse(self, tokens=[]):$/;"	m	class:TokenParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    def parse(self):$/;"	m	class:CParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    def parse(self):$/;"	m	class:JsonParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    def parse(self):$/;"	m	class:CSharpParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    def parse(self):$/;"	m	class:ElmParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    def parse(self):$/;"	m	class:GoParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    def parse(self):$/;"	m	class:HaskellParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    def parse(self):$/;"	m	class:HaxeParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    def parse(self):$/;"	m	class:HtmlParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    def parse(self):$/;"	m	class:JavascriptParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def parse(self):$/;"	m	class:JavaParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def parse(self):$/;"	m	class:KotlinParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    def parse(self):$/;"	m	class:ScalaParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def parse(self):$/;"	m	class:ObjectiveCParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    def parse(self):$/;"	m	class:SwiftParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    def parse(self):$/;"	m	class:PhpParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    def parse(self):$/;"	m	class:PythonParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    def parse(self):$/;"	m	class:RustParser
parse	plugged/vim-wakatime/packages/wakatime/dependencies/unknown.py	/^    def parse(self):$/;"	m	class:UnknownParser
parse	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    parse = _importer._get_module("moves.urllib_parse")$/;"	v	class:Module_six_moves_urllib
parse	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    parse = _importer._get_module("moves.urllib_parse")$/;"	v	class:Module_six_moves_urllib
parseConfigFile	plugged/vim-wakatime/packages/wakatime/configs.py	/^def parseConfigFile(configFile=None):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f
parse_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def parse_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_arguments	plugged/vim-wakatime/packages/wakatime/arguments.py	/^def parse_arguments():$/;"	f
parse_block_scalar_empty_line	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def parse_block_scalar_empty_line(indent_token_class, content_token_class):$/;"	m	class:YamlLexer
parse_block_scalar_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def parse_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_challenge_message	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/ntlm.py	/^    def parse_challenge_message(self, msg2):$/;"	m	class:Ntlm
parse_constant	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_constant;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
parse_content	plugged/ultisnips/utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
parse_datatypes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    def parse_datatypes(f):$/;"	f
parse_dict_header	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def parse_dict_header(value):$/;"	f
parse_float	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_float;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
parse_header_links	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def parse_header_links(value):$/;"	f
parse_int	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *parse_int;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
parse_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    def parse_keywords(f):$/;"	f
parse_known_args	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def parse_known_args(self, args=None, namespace=None):$/;"	m	class:ArgumentParser
parse_list_header	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def parse_list_header(value):$/;"	f
parse_plain_scalar_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def parse_plain_scalar_indent(token_class):$/;"	m	class:YamlLexer
parse_pseudos	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    def parse_pseudos(f):$/;"	f
parse_retry_after	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def parse_retry_after(self, retry_after):$/;"	m	class:Retry
parse_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^def parse_url(url):$/;"	f
parser	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    parser = None$/;"	v	class:DependencyParser
parser	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def parser(self):$/;"	m	class:SectionProxy
partial	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def partial(self, token):$/;"	m	class:TokenParser
parts	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var parts = key.split(".");$/;"	v
pascal	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pascal": null,$/;"	z
passwd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "passwd": null,$/;"	z
patch	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def patch(url, data=None, **kwargs):$/;"	f
patch	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def patch(self, url, data=None, **kwargs):$/;"	m	class:Session
path	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^        "path": ".\/snippets.json"$/;"	s	object:contributes.snippets.0
path	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^        "path": ".\/snippets.json"$/;"	s	object:contributes.snippets.1
path	plugged/coc.nvim/webpack.config.js	/^    path: path.resolve(__dirname, 'build'),$/;"	p	class:module.exports.output
path	plugged/coc.nvim/webpack.config.js	/^const path = require('path')$/;"	C
path_url	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def path_url(self):$/;"	m	class:RequestEncodingMixin
patternProperties	plugged/coc.nvim/data/schema.json	/^      "patternProperties": {$/;"	o	object:properties.languageserver
patterns	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    patterns = {$/;"	v	class:TurtleLexer
pcap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pcap": null,$/;"	z
pccts	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pccts": null,$/;"	z
pcntl	plugged/php.vim/attic/syntax.ini	/^pcntl = no$/;"	k	section:extensions
pcre	plugged/php.vim/attic/syntax.ini	/^pcre = yes$/;"	k	section:extensions
pdf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pdf": null,$/;"	z
pdo	plugged/php.vim/attic/syntax.ini	/^pdo = yes$/;"	k	section:extensions
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
perl	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "perl": "Perl",$/;"	s
perl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "perl": "Perl",$/;"	s
perl6	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "perl6": "Perl",$/;"	s
pf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pf": null,$/;"	z
pfmain	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pfmain": null,$/;"	z
pgsql	plugged/php.vim/attic/syntax.ini	/^pgsql = yes$/;"	k	section:extensions
phar	plugged/php.vim/attic/syntax.ini	/^phar = yes$/;"	k	section:extensions
php	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "php": "PHP",$/;"	s
php	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "php": "PHP",$/;"	s
php.vim	plugged/php.vim/README.md	/^php.vim$/;"	c
php_folding	plugged/php.vim/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	plugged/php.vim/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	plugged/php.vim/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	plugged/php.vim/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_nowdoc	plugged/php.vim/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_html_in_strings	plugged/php.vim/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	plugged/php.vim/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	plugged/php.vim/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	plugged/php.vim/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	plugged/php.vim/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
php_sync_method	plugged/php.vim/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	plugged/php.vim/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_xml_heredoc	plugged/php.vim/syntax/php.vim	/^  let php_xml_heredoc=0$/;"	v
php_xml_nowdoc	plugged/php.vim/syntax/php.vim	/^  let php_xml_nowdoc=0$/;"	v
phtml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "phtml": "PHP",$/;"	s
pi	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pi          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
pic	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pic": null,$/;"	z
pike	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pike": null,$/;"	z
pil_available	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    pil_available = False$/;"	v
pil_available	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    pil_available = True$/;"	v
pilrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pilrc": null,$/;"	z
pim_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_additional_builtins = ($/;"	v	class:Modula2Lexer
pim_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
pim_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_additional_reserved_words = ($/;"	v	class:Modula2Lexer
pim_lexemes_to_reject	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_lexemes_to_reject = ($/;"	v	class:Modula2Lexer
pim_stdlib_const_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_stdlib_const_identifiers = ($/;"	v	class:Modula2Lexer
pim_stdlib_module_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_stdlib_module_identifiers = ($/;"	v	class:Modula2Lexer
pim_stdlib_proc_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_stdlib_proc_identifiers = ($/;"	v	class:Modula2Lexer
pim_stdlib_type_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_stdlib_type_identifiers = ($/;"	v	class:Modula2Lexer
pim_stdlib_var_identifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pim_stdlib_var_identifiers = ($/;"	v	class:Modula2Lexer
pine	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pine": null,$/;"	z
pinfo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pinfo": null,$/;"	z
pitarget	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    pitarget = "%s+%s*" % (pitarget_namestartchar, pitarget_namechar)$/;"	v	class:XQueryLexer
pitarget_namechar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    pitarget_namechar = r"(?:" + pitarget_namestartchar + r"|-|\\.|[0-9])"$/;"	v	class:XQueryLexer
pitarget_namestartchar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    pitarget_namestartchar = r"(?:[A-KN-WYZ]|_|:|[a-kn-wyz])"$/;"	v	class:XQueryLexer
pkg	plugged/coc.nvim/package.json	/^  "pkg": {$/;"	o
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
plaintex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "plaintex": null,$/;"	z
plm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "plm": null,$/;"	z
plp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "plp": null,$/;"	z
plsql	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "plsql": null,$/;"	z
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	plugged/coc.nvim/tsconfig.json	/^    "plugins": []$/;"	a	object:compilerOptions
plugins	plugged/coc.nvim/webpack.config.js	/^  plugins: [$/;"	p	class:module.exports
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ['ervandew\/supertab']$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
po	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> po          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
po	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> po          :call b:buffergator_catalog_viewer.visit_targe/;"	m
po	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "po": null,$/;"	z
pod	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pod": null,$/;"	z
pool_classes_by_scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    pool_classes_by_scheme = {$/;"	v	class:SOCKSProxyManager
pool_classes_by_scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^pool_classes_by_scheme = {$/;"	v
pop	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def pop(self):$/;"	m	class:Queue
pop	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def pop(self, key, *args):$/;"	m	class:_ChainMap
pop	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    pop = DictMixin.pop$/;"	v	class:OrderedDict
pop	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    pop = DictMixin.pop$/;"	v	class:OrderedDict
pop	plugged/vim-wakatime/packages/wakatime/packages/urllib3/_collections.py	/^    def pop(self, key, default=__marker):$/;"	m	class:HTTPHeaderDict
pop	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def pop(self, key, default=__marker):$/;"	m	class:OrderedDict
pop_many	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def pop_many(self, limit=None):$/;"	m	class:Queue
popitem	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def popitem(self):$/;"	m	class:RawConfigParser
popitem	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^    def popitem(self):$/;"	m	class:_ChainMap
popitem	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popitem	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popitem	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def popitem(self, last=True):$/;"	m	class:OrderedDict
popstate_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def popstate_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_kindtest_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def popstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_tag_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def popstate_tag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
popstate_xmlcomment_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def popstate_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
port	plugged/coc.nvim/data/schema.json	/^        "port": {$/;"	o	object:definitions.languageServerSocket.properties
port_by_scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^port_by_scheme = {$/;"	v
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
position	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
posix	plugged/php.vim/attic/syntax.ini	/^posix = no$/;"	k	section:extensions
post	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def post(url, data=None, json=None, **kwargs):$/;"	f
post	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def post(self, url, data=None, json=None, **kwargs):$/;"	m	class:Session
postscr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "postscr": null,$/;"	z
posva/vim-make	plugged/vim-vue/.circleci/README.md	/^# posva\/vim-make$/;"	c
pov	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pov": null,$/;"	z
povini	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "povini": null,$/;"	z
powerline (default)	plugged/lightline.vim/README.md	/^### powerline (default)$/;"	S
powershell	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "powershell": "PowerShell",$/;"	s
ppd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ppd": null,$/;"	z
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
ppwiz	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ppwiz": null,$/;"	z
pre.code	plugged/emmet-vim/docs/static/css/style-sites.css	/^pre.code {$/;"	c
preferred_clock	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^        preferred_clock = time.clock$/;"	v
prefix	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/snippets.json	/^    "prefix": "for",$/;"	s	object:For Loop
prefix	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^        def prefix(cls):$/;"	f	member:HtmlFormatter.get_style_defs	file:
prefix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:FSharpLexer
prefix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:OcamlLexer
prefix_syms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    prefix_syms = r'[!?~]'$/;"	v	class:CoqLexer
prefixedname	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    prefixedname = "%s:%s" % (ncname, ncname)$/;"	v	class:XQueryLexer
prepare	plugged/coc.nvim/package.json	/^    "prepare": "yarn clean && yarn build",$/;"	s	object:scripts
prepare	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare(self):$/;"	m	class:Request
prepare	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare(self,$/;"	m	class:PreparedRequest
prepare_auth	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_auth(self, auth, url=''):$/;"	m	class:PreparedRequest
prepare_body	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_body(self, data, files, json=None):$/;"	m	class:PreparedRequest
prepare_content_length	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_content_length(self, body):$/;"	m	class:PreparedRequest
prepare_cookies	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_cookies(self, cookies):$/;"	m	class:PreparedRequest
prepare_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_headers(self, headers):$/;"	m	class:PreparedRequest
prepare_hooks	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_hooks(self, hooks):$/;"	m	class:PreparedRequest
prepare_method	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_method(self, method):$/;"	m	class:PreparedRequest
prepare_request	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def prepare_request(self, request):$/;"	m	class:Session
prepare_url	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def prepare_url(self, url, params):$/;"	m	class:PreparedRequest
prepend_scheme_if_needed	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def prepend_scheme_if_needed(url, new_scheme):$/;"	f
preproc	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    preproc = ($/;"	v	class:FelixLexer
preproc_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    def preproc_callback(self, match, ctx):$/;"	m	class:HaxeLexer
preproc_stack	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    preproc_stack = []$/;"	v	class:HaxeLexer
prescribe	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "prescribe": null,$/;"	z
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
preventDefault	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event.preventDefault = function() {$/;"	f	function:event
primitives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    primitives = [$/;"	v	class:FSharpLexer
primitives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    primitives = ('unit', 'int', 'float', 'bool', 'string', 'char', 'list', 'array')$/;"	v	class:OcamlLexer
primitives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    primitives = ('unit', 'nat', 'bool', 'string', 'ascii', 'list')$/;"	v	class:CoqLexer
print_	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def print_(*args, **kwargs):$/;"	f
print_	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^print_ = getattr(moves.builtins, "print", None)$/;"	v
print_	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def print_(*args, **kwargs):$/;"	f
print_	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^print_ = getattr(moves.builtins, "print", None)$/;"	v
print_help	plugged/ale/test/script/custom-linting-rules	/^function print_help() {$/;"	f
print_help	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def print_help(self, file=None):$/;"	m	class:ArgumentParser
print_num	plugged/far.vim/test/very long directory name with spaces/very long file name also with spaces.py	/^def print_num(number):$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_usage	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def print_usage(self, file=None):$/;"	m	class:ArgumentParser
print_version	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def print_version(self, file=None):$/;"	m	class:ArgumentParser
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    priority = 0$/;"	v	class:Lexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    priority = 0.1$/;"	v	class:CppLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    priority = 0.04  # Lower than C\/C++ and Objective C\/C++$/;"	v	class:SwigLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C$/;"	v	class:ObjectiveCLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    priority = 0.05    # Lower than C++$/;"	v	class:ObjectiveCppLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    priority = 0.25$/;"	v	class:LogosLexer
priority	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/special.py	/^    priority = 0.01$/;"	v	class:TextLexer
priority_date_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    priority_date_regex = r'(' + priority_regex + r')( )(' + date_regex + r')'$/;"	v	class:TodotxtLexer
priority_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    priority_regex = r'\\([A-Z]\\)'$/;"	v	class:TodotxtLexer
privoxy	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "privoxy": null,$/;"	z
process	plugged/vim-wakatime/packages/wakatime/projects/base.py	/^    def process(self):$/;"	m	class:BaseProject
process	plugged/vim-wakatime/packages/wakatime/projects/git.py	/^    def process(self):$/;"	m	class:Git
process	plugged/vim-wakatime/packages/wakatime/projects/mercurial.py	/^    def process(self):$/;"	m	class:Mercurial
process	plugged/vim-wakatime/packages/wakatime/projects/projectfile.py	/^    def process(self):$/;"	m	class:ProjectFile
process	plugged/vim-wakatime/packages/wakatime/projects/projectmap.py	/^    def process(self):$/;"	m	class:ProjectMap
process	plugged/vim-wakatime/packages/wakatime/projects/subversion.py	/^    def process(self):$/;"	m	class:Subversion
process_tokendef	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def process_tokendef(cls, name, tokendefs=None):$/;"	m	class:RegexLexerMeta
processors	plugged/php.vim/attic/30-update.php	/^        $processors = array_filter(array_map('trim', preg_split('{[;, ]+}', $groups['processors'/;"	v
procmail	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "procmail": null,$/;"	z
progress	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "progress": null,$/;"	z
project	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    project = None$/;"	v	class:Heartbeat
project_regex	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    project_regex = r'\\+\\S+'$/;"	v	class:TodotxtLexer
prolog	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "prolog": "Prolog",$/;"	s
prolog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "prolog": "Prolog",$/;"	s
promela	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "promela": null,$/;"	z
proof_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    proof_operators = ('{', '}', '.', '..')$/;"	v	class:IsabelleLexer
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerBase
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerCommand
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerModule
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerSocket
properties	plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.completionItemKindLabels
properties	plugged/coc.nvim/data/schema.json	/^  "properties": {$/;"	o
property	plugged/coc.nvim/data/schema.json	/^        "property": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
props	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	c	class:AnonymousFunctionc5b93c5c2700
props	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var props = "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctr/;"	v
protocols	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "protocols": null,$/;"	z
proxy	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    proxy = None$/;"	v	class:PoolManager
proxy_bypass	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^    def proxy_bypass(host):  # noqa$/;"	f
proxy_bypass_registry	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^    def proxy_bypass_registry(host):$/;"	f
proxy_from_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^def proxy_from_url(url, **kw):$/;"	f
proxy_headers	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def proxy_headers(self, proxy):$/;"	m	class:HTTPAdapter
proxy_manager_for	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def proxy_manager_for(self, proxy, **proxy_kwargs):$/;"	m	class:HTTPAdapter
ps	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ps          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
ps	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ps          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pseudo_builtins_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    pseudo_builtins_db = {$/;"	v	class:Modula2Lexer
psf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "psf": null,$/;"	z
pspell	plugged/php.vim/attic/syntax.ini	/^pspell = no$/;"	k	section:extensions
pt	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pt          :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
pt	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pt          :call b:buffergator_catalog_viewer.visit_targe/;"	m
ptcap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ptcap": null,$/;"	z
punc_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    punc_re = r'[()\\[\\],;|]'  # '{' and '}' are treated elsewhere$/;"	v	class:OpaLexer
punctuation	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    punctuation = (",", ";", "(", ")", "[", "]", "{", "}")$/;"	v	class:MathematicaLexer
punctuation	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    punctuation = (u'(', u')', u':', u'{', u'}', u'[', u']', u'⦃', u'⦄',$/;"	v	class:LeanLexer
punctuation_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    punctuation_re = "|".join(re.escape(s) for s in PUNCTUATION)$/;"	v	class:ElixirLexer
punctuation_root_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def punctuation_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
punctuations	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    punctuations = ["(", ")", "[", "]", ";", "{", "}", ":", ",", "@"]$/;"	v	class:NixLexer
puppet	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "puppet": "Puppet",$/;"	s
pure-install	plugged/javascript-libraries-syntax.vim/Makefile	/^pure-install:$/;"	t
purifylog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "purifylog": null,$/;"	z
push	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	m	class:Array
push	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def push(self, heartbeat):$/;"	m	class:Queue
push_many	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    def push_many(self, heartbeats):$/;"	m	class:Queue
pushstate_cdata_section_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_cdata_section_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_element_content_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_processing_instruction_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_element_content_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_starttag_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_element_content_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_element_content_xmlcomment_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_element_content_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_kindtest_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_occurrenceindicator_kindtest_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_occurrenceindicator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_attribute_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_attribute_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_cdata_section_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_cdata_section_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtest_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtest_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_kindtestforpi_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_kindtestforpi_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_map_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_map_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_order_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_order_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_processing_instruction_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_processing_instruction_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_construct_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_construct_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_root_validate_withmode	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_root_validate_withmode(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_starttag_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_operator_xmlcomment_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_operator_xmlcomment_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_root_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_root_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
pushstate_starttag_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    def pushstate_starttag_callback(lexer, match, ctx):$/;"	m	class:XQueryLexer
put	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def put(url, data=None, **kwargs):$/;"	f
put	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def put(self, url, data=None, **kwargs):$/;"	m	class:Session
pv	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> pv          :call b:buffergator_catalog_viewer.visit_targe/;"	m
pwd	plugged/vim-wakatime/packages/wakatime/main.py	/^pwd = os.path.dirname(os.path.abspath(__file__))$/;"	v
py_encode_basestring_ascii	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^py_encode_basestring_ascii(PyObject* self UNUSED, PyObject *pystr)$/;"	f	typeref:typename:PyObject *	file:
py_encode_basestring_ascii	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^def py_encode_basestring_ascii(s, _PY3=PY3):$/;"	f
py_make_scanner	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^def py_make_scanner(context):$/;"	f
py_scanstring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^py_scanstring(PyObject* self UNUSED, PyObject *args)$/;"	f	typeref:typename:PyObject *	file:
py_scanstring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^def py_scanstring(s, end, encoding=None, strict=True,$/;"	f
pyopenssl	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^    pyopenssl = None$/;"	v
pyrex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "pyrex": null,$/;"	z
pytest	plugged/ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^[pytest]$/;"	s
python	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "python": "Python",$/;"	s
python	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "python": "Python",$/;"	s
python3	plugged/ultisnips/test/test_Plugin.py	/^def python3():$/;"	f
python_2_unicode_compatible	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def python_2_unicode_compatible(klass):$/;"	f
python_2_unicode_compatible	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def python_2_unicode_compatible(klass):$/;"	f
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	plugged/ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> q           :call b:buffergator_catalog_viewer.close(1)<CR/;"	m
q	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> q           :call b:buffergator_catalog_viewer.close(1)<CR>$/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> q    :exe substitute(bufwinnr(b:fugitive_blamed_bufnr).' winc/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>$/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q :<C-U>if bufnr('$') == 1<Bar>quit<Bar>else<Bar>bdelete<Bar>endi/;"	m
qf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "qf": null,$/;"	z
qname	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    qname = "(?:%s|%s)" % (prefixedname, unprefixedname)$/;"	v	class:XQueryLexer
quake	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "quake": null,$/;"	z
queue	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var queue = function( elem, type, array ) {$/;"	f
quickClass	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	quickClass = new RegExp("^([#.]?)(" + chars + "*)");$/;"	v
quickExpr	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var quickExpr = \/^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$\/,$/;"	v
quotattrcontentchar	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    quotattrcontentchar = r'[A-Za-z]|\\s|\\d|[!#$%()*+,\\-.\/:;=?@\\[\\\\\\]^_\\'`|~]'$/;"	v	class:XQueryLexer
r	plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.r = function(exports) {$/;"	f	function:__webpack_require__
r	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> r           :call b:buffergator_catalog_viewer.rebuild_cat/;"	m
r	plugged/vim-buffergator/autoload/buffergator.vim	/^        noremap <buffer> <silent> r           :call b:buffergator_catalog_viewer.rebuild_catalog/;"	m
r	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "r": "R",$/;"	s
r	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "r": "R",$/;"	s
r_comment	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    r_comment = re.compile(r'^\\s*@?#')$/;"	v	class:MakefileLexer
r_special	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    r_special = re.compile($/;"	v	class:MakefileLexer
ra	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ra    :<C-U>Grebase --abort<CR>$/;"	m
racc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "racc": null,$/;"	z
radiance	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "radiance": null,$/;"	z
raise_errmsg	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^raise_errmsg(char *msg, PyObject *s, Py_ssize_t end)$/;"	f	typeref:typename:void	file:
raise_for_status	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def raise_for_status(self):$/;"	m	class:Response
raise_from	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def raise_from(value, from_value):$/;"	f
raise_from	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def raise_from(value, from_value):$/;"	f
ratpoison	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ratpoison": null,$/;"	z
raw_decode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^    def raw_decode(self, s, idx=0, _w=WHITESPACE.match, _PY3=PY3):$/;"	m	class:JSONDecoder
rc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rc": null,$/;"	z
rcs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rcs": null,$/;"	z
rcslog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rcslog": null,$/;"	z
rd	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rd    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
re	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> re    :<C-U>Grebase --edit-todo<CR>$/;"	m
re_end_command	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_end_command = re.compile(r';\\s*(--.*?)?$')$/;"	v
re_error	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_error = re.compile(r'(ERROR|FATAL):')$/;"	v
re_message	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_message = re.compile($/;"	v
re_prompt	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_prompt = re.compile(r'^(\\S.*?)??[=\\-\\(\\$\\'\\"][#>]')$/;"	v
re_psql_command	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'(\\s*)(\\\\.+?)(\\s+)$')$/;"	v
re_psql_command	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^re_psql_command = re.compile(r'\\s*\\\\')$/;"	v
read	plugged/nvim-miniyank/lua/miniyank.lua	/^local function read(fn)$/;"	f
read	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def read(self, filenames, encoding=None):$/;"	m	class:RawConfigParser
read	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def read(self, amt=None, decode_content=None, cache_content=False):$/;"	m	class:HTTPResponse
read_chunked	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def read_chunked(self, amt=None, decode_content=None):$/;"	m	class:HTTPResponse
read_dict	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def read_dict(self, dictionary, source='<dict>'):$/;"	m	class:RawConfigParser
read_file	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def read_file(self, f, source=None):$/;"	m	class:RawConfigParser
read_string	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def read_string(self, string, source='<string>'):$/;"	m	class:RawConfigParser
read_text_file	plugged/ultisnips/test/vim_interface.py	/^def read_text_file(filename):$/;"	f
read_timeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def read_timeout(self):$/;"	m	class:Timeout
readable	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def readable(self):$/;"	m	class:HTTPResponse
readfp	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def readfp(self, fp, filename=None):$/;"	m	class:RawConfigParser
readinto	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def readinto(self, b):$/;"	m	class:HTTPResponse
readline	plugged/php.vim/attic/syntax.ini	/^readline = no$/;"	k	section:extensions
readline	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "readline": null,$/;"	z
readyBound	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var readyBound = false;$/;"	v
rebol	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rebol": null,$/;"	z
rebuild_auth	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def rebuild_auth(self, prepared_request, response):$/;"	m	class:SessionRedirectMixin
rebuild_method	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def rebuild_method(self, prepared_request, response):$/;"	m	class:SessionRedirectMixin
rebuild_proxies	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def rebuild_proxies(self, prepared_request, proxies):$/;"	m	class:SessionRedirectMixin
recode	plugged/php.vim/attic/syntax.ini	/^recode = no$/;"	k	section:extensions
record	plugged/javascript-libraries-syntax.vim/Makefile	/^record: mkfilelist mkrecordscript$/;"	t
record_file	plugged/javascript-libraries-syntax.vim/Makefile	/^record_file = \\$/;"	m
recursive_repr	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^def recursive_repr(fillvalue='...'):$/;"	f
recv	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def recv(self, *pos, **kw):$/;"	m	class:socksocket
recv	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def recv(self, *args, **kwargs):$/;"	m	class:WrappedSocket
recv	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def recv(self, bufsiz):$/;"	m	class:WrappedSocket
recv_into	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def recv_into(self, *args, **kwargs):$/;"	m	class:WrappedSocket
recv_into	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def recv_into(self, buffer, nbytes=None):$/;"	m	class:WrappedSocket
recvfrom	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def recvfrom(self, bufsize, flags=0):$/;"	m	class:socksocket
reference	plugged/coc.nvim/data/schema.json	/^        "reference": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
reflect	plugged/php.vim/attic/10-collect.php	/^        $reflect = new \\ReflectionExtension($extensionName);$/;"	v
reflection	plugged/php.vim/attic/syntax.ini	/^reflection = yes$/;"	k	section:extensions
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
regenerate	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    def regenerate(filename, modules):$/;"	f
regenerate	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    def regenerate(filename, natives):$/;"	f
regex_opt	plugged/vim-wakatime/packages/wakatime/packages/pygments/regexopt.py	/^def regex_opt(strings, prefix='', suffix=''):$/;"	f
regex_opt_inner	plugged/vim-wakatime/packages/wakatime/packages/pygments/regexopt.py	/^def regex_opt_inner(strings, open_paren):$/;"	f
register	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def register(self, registry_name, value, object):$/;"	m	class:_ActionsContainer
register	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    register = (r'r[0-9][0-5]?[bwd]|'$/;"	v	class:NasmLexer
register	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    register = (r'r[0-9][0-5]?[bwd]|'$/;"	v	class:TasmLexer
register	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    register = r'(\\$(c|s|d|q)' + register_number + ')'$/;"	v	class:HsailLexer
register	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def register(self, fileobj, events, data=None):$/;"	m	class:EpollSelector
register	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def register(self, fileobj, events, data=None):$/;"	m	class:KqueueSelector
register	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def register(self, fileobj, events, data=None):$/;"	m	class:PollSelector
register	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def register(self, fileobj, events, data=None):$/;"	m	class:SelectSelector
register	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def register(self, fileobj, events, data=None):$/;"	m	class:BaseSelector
register_hook	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def register_hook(self, event, hook):$/;"	m	class:RequestHooksMixin
register_number	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    register_number = r'[0-9]+'$/;"	v	class:HsailLexer
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
registry	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "registry": null,$/;"	z
release	plugged/coc.nvim/package.json	/^    "release": "pkg . --out-path .\/build"$/;"	s	object:scripts
release	plugged/emmet-vim/Makefile	/^release: emmet-vim.zip$/;"	t
release	plugged/javascript-libraries-syntax.vim/Makefile	/^release:$/;"	t
release_conn	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def release_conn(self):$/;"	m	class:HTTPResponse
reload_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/darwin.py	/^def reload_localzone():$/;"	f
reload_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/unix.py	/^def reload_localzone():$/;"	f
reload_localzone	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^def reload_localzone():$/;"	f
reload_module	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^        from imp import reload as reload_module$/;"	x
reload_module	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^        from importlib import reload as reload_module$/;"	x
reload_module	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    reload_module = reload$/;"	v
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remind	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "remind": null,$/;"	z
remove	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function(elem, types, handler) {$/;"	m	class:jQuery.event
remove-zip	plugged/emmet-vim/Makefile	/^remove-zip:$/;"	t
remove_comment_lines	plugged/ale/test/script/block-padding-checker	/^def remove_comment_lines(line_iter):$/;"	f
remove_cookie_by_name	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^def remove_cookie_by_name(cookiejar, name, domain=None, path=None):$/;"	f
remove_move	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def remove_move(name):$/;"	f
remove_move	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def remove_move(name):$/;"	f
remove_option	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def remove_option(self, section, option):$/;"	m	class:RawConfigParser
remove_section	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def remove_section(self, section):$/;"	m	class:RawConfigParser
render_headers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/fields.py	/^    def render_headers(self):$/;"	m	class:RequestField
repeat#invalidate	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeat.vim	plugged/vim-repeat/README.markdown	/^# repeat.vim$/;"	c
repeatPlugin	plugged/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeat_custom_motion	plugged/vim-repeat/autoload/repeat.vim	/^    augroup repeat_custom_motion$/;"	a
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def replace(match):$/;"	f	function:encode_basestring	file:
replace	plugged/vim-wakatime/packages/wakatime/packages/simplejson/encoder.py	/^    def replace(match):$/;"	f	function:py_encode_basestring_ascii	file:
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replace_vars	plugged/ultisnips/utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replacefunc	plugged/vim-wakatime/packages/wakatime/packages/pygments/filters/__init__.py	/^            def replacefunc(wschar):$/;"	f	member:VisibleWhitespaceFilter.filter	file:
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repo	plugged/emmet-vim/docs/index.html	/^			<article id="repo">$/;"	I
repository	plugged/coc.nvim/package.json	/^  "repository": {$/;"	o
repository	plugged/tcomment_vim/addon-info.json	/^    "repository" : {"type": "git", "url": "git:\/\/github.com\/tomtom\/tcomment_vim.git"},$/;"	o
repository	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	o
repro	plugged/ultisnips/Makefile	/^repro:$/;"	t
request	plugged/vim-wakatime/packages/wakatime/packages/requests/api.py	/^def request(method, url, **kwargs):$/;"	f
request	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def request(self, method, url,$/;"	m	class:Session
request	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    request = _importer._get_module("moves.urllib_request")$/;"	v	class:Module_six_moves_urllib
request	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    request = _importer._get_module("moves.urllib_request")$/;"	v	class:Module_six_moves_urllib
request	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    def request(self, method, url, fields=None, headers=None, **urlopen_kw):$/;"	m	class:RequestMethods
request_chunked	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def request_chunked(self, method, url, body=None, headers=None):$/;"	m	class:HTTPConnection
request_encode_body	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    def request_encode_body(self, method, url, fields=None, headers=None,$/;"	m	class:RequestMethods
request_encode_url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    def request_encode_url(self, method, url, fields=None, headers=None,$/;"	m	class:RequestMethods
request_uri	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def request_uri(self):$/;"	m	class:Url
request_url	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def request_url(self, request, proxies):$/;"	m	class:HTTPAdapter
requests_version	plugged/vim-wakatime/packages/wakatime/packages/requests/help.py	/^from . import __version__ as requests_version$/;"	x
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {$/;"	o	object:definitions.languageServerBase.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerCommand.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerModule.properties
requireRootPattern	plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerSocket.properties
required	plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	a	object:definitions.languageServerCommand
required	plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	a	object:definitions.languageServerModule
required	plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	a	object:definitions.languageServerSocket
required_arguments	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    required_arguments = 1$/;"	v	class:PygmentsDoc
requote_uri	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def requote_uri(uri):$/;"	f
reraise	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def reraise(tp, value, tb=None):$/;"	f
reraise	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def reraise(tp, value, tb=None):$/;"	f
res	plugged/coc.nvim/webpack.config.js	/^let res = cp.execSync('git rev-parse HEAD', {encoding: 'utf8'})$/;"	v
res	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@interface )\\w+', content)$/;"	v
res	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=@protocol )\\w+', content)$/;"	v
res	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef const struct )\\w+', content)$/;"	v
res	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef enum )\\w+', content)$/;"	v
res	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_cocoa_builtins.py	/^            res = re.findall('(?<=typedef struct )\\w+', content)$/;"	v
reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    reserved = ('Arith', 'Bit', 'Cmp', 'False', 'Inf', 'True', 'else',$/;"	v	class:CryptolLexer
reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'deriving', 'do', 'else',$/;"	v	class:HaskellLexer
reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    reserved = ('case', 'class', 'data', 'default', 'using', 'do', 'else',$/;"	v	class:IdrisLexer
reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    reserved = ['abstract', 'codata', 'coinductive', 'constructor', 'data',$/;"	v	class:AgdaLexer
reservedWords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    reservedWords = words(($/;"	v	class:ElmLexer
reserved_words_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    reserved_words_db = {$/;"	v	class:Modula2Lexer
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/chardistribution.py	/^    def reset(self):$/;"	m	class:CharDistributionAnalysis
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetgroupprober.py	/^    def reset(self):$/;"	m	class:CharSetGroupProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def reset(self):$/;"	m	class:CharSetProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/codingstatemachine.py	/^    def reset(self):$/;"	m	class:CodingStateMachine
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/escprober.py	/^    def reset(self):$/;"	m	class:EscCharSetProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/eucjpprober.py	/^    def reset(self):$/;"	m	class:EUCJPProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def reset(self):$/;"	m	class:HebrewProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/jpcntx.py	/^    def reset(self):$/;"	m	class:JapaneseContextAnalysis
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/latin1prober.py	/^    def reset(self):$/;"	m	class:Latin1Prober
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/mbcharsetprober.py	/^    def reset(self):$/;"	m	class:MultiByteCharSetProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/sbcharsetprober.py	/^    def reset(self):$/;"	m	class:SingleByteCharSetProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/sjisprober.py	/^    def reset(self):$/;"	m	class:SJISProber
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/universaldetector.py	/^    def reset(self):$/;"	m	class:UniversalDetector
reset	plugged/vim-wakatime/packages/wakatime/packages/chardet/utf8prober.py	/^    def reset(self):$/;"	m	class:UTF8Prober
reset_color	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^def reset_color():$/;"	f
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def reset_indent(token_class):$/;"	m	class:YamlLexer
reset_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def reset_string(self):$/;"	m	class:EscapeSequence
resolv	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "resolv": null,$/;"	z
resolveJsonModule	plugged/coc.nvim/tsconfig.json	/^    "resolveJsonModule": true,$/;"	b	object:compilerOptions
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
resolve_cert_reqs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def resolve_cert_reqs(candidate):$/;"	f
resolve_redirects	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def resolve_redirects(self, resp, req, stream=False, timeout=None,$/;"	m	class:SessionRedirectMixin
resolve_ssl_version	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def resolve_ssl_version(candidate):$/;"	f
resource_exists	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def resource_exists(name):$/;"	f
response	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    response = _importer._get_module("moves.urllib_response")$/;"	v	class:Module_six_moves_urllib
response	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    response = _importer._get_module("moves.urllib_response")$/;"	v	class:Module_six_moves_urllib
response_hook	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^    def response_hook(self, r, **kwargs):$/;"	m	class:HttpNtlmAuth
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
restructuredtext	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "restructuredtext": "reStructuredText",$/;"	s
results	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	c
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = "";$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = -1;$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = jQuery( elems );$/;"	v
ret	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
retry_using_http_NTLM_auth	plugged/vim-wakatime/packages/wakatime/packages/requests_ntlm/requests_ntlm.py	/^    def retry_using_http_NTLM_auth(self, auth_header_field, auth_header,$/;"	m	class:HttpNtlmAuth
reva	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "reva": null,$/;"	z
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {$/;"	o	object:definitions.languageServerBase.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerCommand.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerModule.properties
revealOutputChannelOn	plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerSocket.properties
revision	plugged/coc.nvim/webpack.config.js	/^let revision = res.slice(0, 10)$/;"	v
rewind_body	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def rewind_body(prepared_request):$/;"	f
rewind_body	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/request.py	/^def rewind_body(body, body_pos):$/;"	f
rexx	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rexx": null,$/;"	z
rf	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rf    :<C-U>Grebase --autosquash<C-R>=substitute(<SID>SquashArgum/;"	m
rgbcolor	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/latex.py	/^        def rgbcolor(col):$/;"	f	member:LatexFormatter._create_stylesheet	file:
rhelp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rhelp": null,$/;"	z
ri	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ri    :<C-U>Grebase --interactive<C-R>=substitute(<SID>SquashArgu/;"	m
rib	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rib": null,$/;"	z
rimraf	plugged/coc.nvim/package.json	/^    "rimraf": "^2.6.3",$/;"	s	object:devDependencies
rk	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rk    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
rm	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rm    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
rmrecord	plugged/javascript-libraries-syntax.vim/Makefile	/^rmrecord:$/;"	t
rnc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rnc": null,$/;"	z
rnoweb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rnoweb": null,$/;"	z
robotparser	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    robotparser = _importer._get_module("moves.urllib_robotparser")$/;"	v	class:Module_six_moves_urllib
robotparser	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    robotparser = _importer._get_module("moves.urllib_robotparser")$/;"	v	class:Module_six_moves_urllib
robots	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "robots": null,$/;"	z
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {$/;"	o	object:definitions.languageServerBase.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerCommand.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerModule.properties
rootPatterns	plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerSocket.properties
root_lexer	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def root_lexer(self):$/;"	m	class:DependencyParser
roundingMod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    roundingMod = (r'((_ftz)?(_up|_down|_zero|_near))')$/;"	v	class:HsailLexer
rp	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rp    :<C-U>Grebase --interactive @{push}<CR>$/;"	m
rpcgen	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rpcgen": null,$/;"	z
rpl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rpl": null,$/;"	z
rr	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rr    :<C-U>Grebase --continue<CR>$/;"	m
rs	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rs    :<C-U>Grebase --skip<CR>$/;"	m
rsc_role_action	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    rsc_role_action = (r'(?:Master|Started|Slave|Stopped|'$/;"	v	class:CrmshLexer
rst	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rst": null,$/;"	z
rtf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "rtf": null,$/;"	z
ru	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ru    :<C-U>Grebase --interactive @{upstream}<CR>$/;"	m
ruby	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "ruby": "Ruby",$/;"	s
ruby	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "ruby": "Ruby",$/;"	s
rules	plugged/coc.nvim/tslint.json	/^  "rules": {$/;"	o
run	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_lua_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_php_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^    def run():$/;"	f
run	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^    def run(self):$/;"	m	class:PygmentsDoc
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
runtime	plugged/coc.nvim/data/schema.json	/^        "runtime": {$/;"	o	object:definitions.languageServerModule.properties
rust	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "rust": "Rust",$/;"	s
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/utils/get_tm_snippets.py	/^        rv = fetch_snippets_from_dir(bundle)$/;"	v
rw	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rw    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
rx	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rx    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
s	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> s           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
s	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> s           :call b:buffergator_catalog_viewer.cycle_sort_/;"	m
s	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    def s(str):$/;"	m	class:FantomLexer
s:AcceptSelection	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
s:AddHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddHintsForTypeScriptParsingErrors	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
s:AddProblemsFromOtherBuffers	plugged/ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
s:AddSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AddSubCallbacks	plugged/ale/autoload/ale/fix.vim	/^function! s:AddSubCallbacks(full_list, callbacks) abort$/;"	f
s:Aliases	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Aliases() abort$/;"	f
s:AlternatePair	plugged/vim-javascript/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:AppendHeartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:AppendHeartbeat(file, now, is_write, last)$/;"	f
s:ApplyMappings	plugged/ack.vim/autoload/ack.vim	/^function! s:ApplyMappings() "{{{$/;"	f
s:ApplyPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
s:AsyncHandler	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:AsyncHandler(output, cmd)$/;"	f
s:AsyncRequest	plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
s:AutoReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AutoReloadStatus(...) abort$/;"	f
s:Autocmd	plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
s:Balanced	plugged/vim-javascript/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:Blame	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Blame(bang, line1, line2, count, mods, args) abort$/;"	f
s:BlameCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
s:BlameSyntax	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
s:BlobTemp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlurStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.Edit	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
s:Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:Browse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
s:BufName	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BufWinId	plugged/ale/autoload/ale/list.vim	/^function! s:BufWinId(buffer) abort$/;"	f
s:BufferCacheExists	plugged/ale/autoload/ale/statusline.vim	/^function! s:BufferCacheExists(buffer) abort$/;"	f
s:BuildClassPathOption	plugged/ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildClassPathOption	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildPrompt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
s:BuildSignMap	plugged/ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
s:BuildText	plugged/ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
s:COMPLETION_TRIGGER_CHARACTER	plugged/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	plugged/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:Call	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
s:CanAutoReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CanAutoReloadStatus() abort$/;"	f
s:Cd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Cd(...) abort$/;"	f
s:ChannelSet	plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
s:CheckForBadConfig	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
s:CheckWithLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:CheckWithLSP(linter, details) abort$/;"	f
s:Close	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
s:CloseCustomFuncs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CloseCustomFuncs()$/;"	f
s:CloseWindowIfNeeded	plugged/ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
s:CmpPatterns	plugged/ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
s:CodeActionFromSelected	plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
s:CommandList	plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
s:CommentBlock	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, cbeg, cend, comment_mode, comment_do, checkRx, cdef) abort$/;"	f
s:Commit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Commit(mods, args, ...) abort$/;"	f
s:CommitComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
s:CompareAge	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
s:CompletionStillValid	plugged/ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
s:ConfigTimestamps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ConstructFromCommentsOption	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^function! s:ConstructFromCommentsOption(comment_mode) abort$/;"	f
s:ContainingCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:Continues	plugged/vim-javascript/indent/javascript.vim	/^function s:Continues()$/;"	f
s:CreateCountDict	plugged/ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
s:CreateNewFile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
s:CreateTSServerMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
s:CreateTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CurTypeName	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CurTypeName()$/;"	f
s:CurrentTimeStr	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:CurrentTimeStr()$/;"	f
s:CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:DefaultOption	plugged/ale/autoload/ale/fixers/shfmt.vim	/^function! s:DefaultOption(buffer) abort$/;"	f
s:DefaultValue	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^function! s:DefaultValue(option) abort$/;"	f
s:DetectFileType	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:DetectFileType(type, ft)$/;"	f
s:DevIconsGetArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
s:Diff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
s:Dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirArg	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirArg(path) abort$/;"	f
s:DirCommitFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirComplete(A, L, P) abort$/;"	f
s:DirRev	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:Disable	plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
s:Disable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Disable()$/;"	f
s:DisableDebugMode	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:DisableDebugMode()$/;"	f
s:DisablePostamble	plugged/ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
s:DisableScreenRedraw	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:DisableScreenRedraw()$/;"	f
s:Dispatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
s:Do	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoReplacements	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) abort "{{{3$/;"	f
s:DoStageStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageStaged(record) abort$/;"	f
s:DoStageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoUnstageStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoWhile	plugged/vim-javascript/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:DotRelative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path) abort$/;"	f
s:Echo	plugged/ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:EchoCommand	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
s:EchoCommandHistory	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
s:EchoExecutable	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
s:EchoGlobalVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EchoLSPErrorMessages	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLSPErrorMessages(all_linter_names) abort$/;"	f
s:EchoLinterAliases	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
s:EchoLinterVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
s:Edit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Edit(cmd, bang, mods, args, ...) abort$/;"	f
s:EditParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:EditParse(args) abort$/;"	f
s:EditRunComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
s:Enable	plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable()$/;"	f
s:EnableDebugMode	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EnableDebugMode()$/;"	f
s:EnablePreamble	plugged/ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
s:EnableScreenRedraw	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EnableScreenRedraw()$/;"	f
s:EnableScreenRedrawAuto	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EnableScreenRedrawAuto()$/;"	f
s:EnoughTimePassed	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:EnoughTimePassed(now, last)$/;"	f
s:EscapeSignText	plugged/ale/autoload/ale/sign.vim	/^function! s:EscapeSignText(sign_text) abort$/;"	f
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:ExitCallback	plugged/ale/autoload/ale/command.vim	/^function! s:ExitCallback(buffer, line_list, Callback, data) abort$/;"	f
s:ExitIfSingleCandidate	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ExitIfSingleCandidate()$/;"	f
s:Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev) abort$/;"	f
s:ExpandVar	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc) abort$/;"	f
s:ExprCol	plugged/vim-javascript/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:ExtensionList	plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
s:ExtraErrorMsg	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
s:ExtractCommentsPart	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^function! s:ExtractCommentsPart() abort$/;"	f
s:Filter	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Filter()$/;"	f
s:FindConfig	plugged/ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
s:FindHistoryItem	plugged/ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
s:FindParentVCSRoot	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
s:FindSpan	plugged/ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
s:FinishCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
s:FixList	plugged/ale/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:ForceUpdate	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
s:Format	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatEntry	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
s:FormatExe	plugged/ale/autoload/ale/assert.vim	/^function! s:FormatExe(command, executable) abort$/;"	f
s:FormatFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatFromSelected	plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
s:FormatLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:GF	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:GatherOutput	plugged/ale/autoload/ale/command.vim	/^function! s:GatherOutput(line_list, job_id, line) abort$/;"	f
s:Generate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(rev, ...) abort$/;"	f
s:GetALEProjectDir	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! s:GetALEProjectDir(buffer) abort$/;"	f
s:GetAlarm	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:GetAlarm(buffer, timeout) abort$/;"	f
s:GetAliasedFiletype	plugged/ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
s:GetCachedExtensionMap	plugged/ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
s:GetCallbacks	plugged/ale/autoload/ale/fix.vim	/^function! s:GetCallbacks(buffer, fixing_flag, fixers) abort$/;"	f
s:GetCommandPrefix	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetCommandPrefix()$/;"	f
s:GetCommentGeometry	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentGeometry(cdef, beg, end, checkRx, comment_mode, cbeg, cend) abort$/;"	f
s:GetCounts	plugged/ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
s:GetCurrentFile	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetCurrentFile()$/;"	f
s:GetDetails	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
s:GetDir	plugged/ale/ale_linters/python/mypy.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetDir	plugged/ale/ale_linters/python/vulture.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetDocLocations	plugged/ack.vim/autoload/ack.vim	/^function! s:GetDocLocations() "{{{$/;"	f
s:GetErrMsg	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:GetErrMsg(i, lines, text) abort$/;"	f
s:GetExecutable	plugged/ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
s:GetFiletypeValue	plugged/ale/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
s:GetFirstProblems	plugged/ale/autoload/ale/statusline.vim	/^function! s:GetFirstProblems(buffer) abort$/;"	f
s:GetHeartbeatsJson	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetHeartbeatsJson()$/;"	f
s:GetIniSetting	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetIniSetting(section, key)$/;"	f
s:GetJSONLines	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
s:GetLastHeartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetLastHeartbeat()$/;"	f
s:GetLinter	plugged/ale/autoload/ale/assert.vim	/^function! s:GetLinter() abort$/;"	f
s:GetLinterNames	plugged/ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
s:GetLinterVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, linter_names) abort$/;"	f
s:GetLookupFromCompileCommandsFile	plugged/ale/autoload/ale/c.vim	/^function! s:GetLookupFromCompileCommandsFile(compile_commands_file) abort$/;"	f
s:GetPair	plugged/vim-javascript/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetPythonBinary	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:GetPythonBinary()$/;"	f
s:GetReplacements	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:GetReplacements(cdef, text) abort "{{{3$/;"	f
s:GetTempOption	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:GetTempOption(name, default) abort "{{{3$/;"	f
s:GetVars	plugged/vim-javascript/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GetVersion	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetVersion	plugged/ale/autoload/ale/semver.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetWorkingDirectory	plugged/ale/ale_linters/cs/mcsc.vim	/^function! s:GetWorkingDirectory(buffer) abort$/;"	f
s:Git	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Git(bang, mods, args) abort$/;"	f
s:GitComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
s:GlobComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern) abort$/;"	f
s:GlobPath	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
s:GlobalChange	plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
s:GoToLSPDefinition	plugged/ale/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options, capability) abort$/;"	f
s:Grep	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
s:GrepComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepComplete(A, L, P) abort$/;"	f
s:GroupLoclistItems	plugged/ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
s:HandleActivity	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:HandleActivity(is_write)$/;"	f
s:HandleExit	plugged/ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_info, buffer, output, data) abort$/;"	f
s:HandleExit	plugged/ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_info, buffer, job_output, data) abort$/;"	f
s:HandleLSPDiagnostics	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
s:HandleLSPErrorMessage	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPErrorMessage(linter_name, response) abort$/;"	f
s:HandleSyntaxError	plugged/ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
s:HandleTSServerDiagnostics	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
s:HandleUnixFormat	plugged/ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
s:Highlight	plugged/ack.vim/autoload/ack.vim	/^function! s:Highlight(args) "{{{$/;"	f
s:IAMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IAMain = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IAMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IAMiddle = [s:nord5_gui, s:nord1_gui, s:nord5_term, s:nord1_term]$/;"	v
s:IARight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IARight = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:IMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IMain = [s:nord1_gui, s:nord14_gui, s:nord1_term, s:nord6_term]$/;"	v
s:IMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:INTERNAL_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INTERNAL_ERROR = -32603$/;"	v
s:INVALID_PARAMS	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_PARAMS = -32602$/;"	v
s:INVALID_REQUEST	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_REQUEST = -32600$/;"	v
s:IRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:IRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:Ignore	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Ignore(item) abort$/;"	f
s:IgnoreFixers	plugged/ale/autoload/ale/fix.vim	/^function! s:IgnoreFixers(callback_list, filetype, config) abort$/;"	f
s:IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
s:IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
s:IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
s:Init	plugged/ack.vim/autoload/ack.vim	/^function! s:Init(cmd) "{{{$/;"	f
s:Init	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:Init()$/;"	f
s:InitAndHandleActivity	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:InitAndHandleActivity(is_write)$/;"	f
s:InitColor	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
s:InitCustomFuncs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:InitCustomFuncs()$/;"	f
s:InlineReplacement	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) abort "{{{3$/;"	f
s:InstallOptions	plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
s:IsBlock	plugged/vim-javascript/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsBoolean	plugged/ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
s:IsBuiltin	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:IsBuiltin()$/;"	f
s:IsCallback	plugged/ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
s:IsContOne	plugged/vim-javascript/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsGenericFixer	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:IsGenericFixer(suggested_filetypes) abort$/;"	f
s:IsHeaderFile	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
s:IsSbt	plugged/ale/ale_linters/scala/fsc.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsSbt	plugged/ale/ale_linters/scala/scalac.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsStartingDelimiter	plugged/vim-blade/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
s:IsSwitch	plugged/vim-javascript/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:IsWindows	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:IsWindows()$/;"	f
s:JoinArgs	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:JoinArgs(args)$/;"	f
s:JsonEscape	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:JsonEscape(str)$/;"	f
s:KeyLoop	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:Keywordprg	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:KillHandler	plugged/ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
s:LSP_COMPLETION_CLASS_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_CLASS_KIND = 7$/;"	v
s:LSP_COMPLETION_COLOR_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_COLOR_KIND = 16$/;"	v
s:LSP_COMPLETION_CONSTRUCTOR_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_CONSTRUCTOR_KIND = 4$/;"	v
s:LSP_COMPLETION_ENUM_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_ENUM_KIND = 13$/;"	v
s:LSP_COMPLETION_FIELD_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FIELD_KIND = 5$/;"	v
s:LSP_COMPLETION_FILE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FILE_KIND = 17$/;"	v
s:LSP_COMPLETION_FUNCTION_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_FUNCTION_KIND = 3$/;"	v
s:LSP_COMPLETION_INTERFACE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_INTERFACE_KIND = 8$/;"	v
s:LSP_COMPLETION_KEYWORD_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_KEYWORD_KIND = 14$/;"	v
s:LSP_COMPLETION_METHOD_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_METHOD_KIND = 2$/;"	v
s:LSP_COMPLETION_MODULE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_MODULE_KIND = 9$/;"	v
s:LSP_COMPLETION_PROPERTY_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_PROPERTY_KIND = 10$/;"	v
s:LSP_COMPLETION_REFERENCE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_REFERENCE_KIND = 18$/;"	v
s:LSP_COMPLETION_SNIPPET_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_SNIPPET_KIND = 15$/;"	v
s:LSP_COMPLETION_TEXT_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_TEXT_KIND = 1$/;"	v
s:LSP_COMPLETION_UNIT_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_UNIT_KIND = 11$/;"	v
s:LSP_COMPLETION_VALUE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_VALUE_KIND = 12$/;"	v
s:LSP_COMPLETION_VARIABLE_KIND	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_COMPLETION_VARIABLE_KIND = 6$/;"	v
s:LSP_INSERT_TEXT_FORMAT_PLAIN	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_PLAIN = 1$/;"	v
s:LSP_INSERT_TEXT_FORMAT_SNIPPET	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_SNIPPET = 2$/;"	v
s:LanguageGetter	plugged/ale/autoload/ale/linter.vim	/^function! s:LanguageGetter(buffer) dict abort$/;"	f
s:LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
s:LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
s:LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
s:Lint	plugged/ale/autoload/ale.vim	/^function! s:Lint(buffer, should_lint_file, timer_id) abort$/;"	f
s:LoadArgCount	plugged/ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
s:Log	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Log(cmd, bang, line1, line2, ...) abort$/;"	f
s:LookingAt	plugged/vim-javascript/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAX_COL_SIZE	plugged/ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_POS_VALUES	plugged/ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:METHOD_NOT_FOUND	plugged/ale/autoload/ale/lsp/response.vim	/^let s:METHOD_NOT_FOUND = -32601$/;"	v
s:MapNorms	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
s:MapOp	plugged/tcomment_vim/plugin/tcomment.vim	/^function! s:MapOp(name, extra, op, invoke) "{{{3$/;"	f
s:MapSpecs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
s:MarkToOpen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
s:MatchIt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
s:MatchedItems	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.isMinimal	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
s:MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:Merge	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Merge(cmd, bang, mods, args, ...) abort$/;"	f
s:MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
s:Move	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
s:NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
s:NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NMain = [s:nord1_gui, s:nord8_gui, s:nord1_term, s:nord8_term]$/;"	v
s:NMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:NRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:NRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:Nat	plugged/vim-javascript/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NavigateUp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NeoVimCallback	plugged/ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
s:NeoVimOutputCallback	plugged/ale/autoload/ale/socket.vim	/^function! s:NeoVimOutputCallback(channel_id, data, event) abort$/;"	f
s:NeovimAsyncExitHandler	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:NeovimAsyncExitHandler(job_id, exit_code, event)$/;"	f
s:NeovimAsyncOutputHandler	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:NeovimAsyncOutputHandler(job_id, output, event)$/;"	f
s:NewBufferCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewBufferCatalogViewer()$/;"	f
s:NewCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewCatalogViewer(name, title)$/;"	f
s:NewMessenger	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewMessenger(name)$/;"	f
s:NewTabCatalogViewer	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:NewTabCatalogViewer()$/;"	f
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:OnExit	plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OnExtensionInstalled	plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:OnExtensionInstalled(status, ...) closure$/;"	f
s:OnInstalled	plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnInstalled(status, ...) closure$/;"	f
s:OnReady	plugged/ale/autoload/ale/completion.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/definition.vim	/^function! s:OnReady(line, column, options, capability, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/hover.vim	/^function! s:OnReady(line, column, opt, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/references.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/symbol.vim	/^function! s:OnReady(query, options, linter, lsp_details) abort$/;"	f
s:OnUpdated	plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnUpdated(status, ...) closure$/;"	f
s:OneScope	plugged/vim-javascript/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:Open	plugged/ale/autoload/ale/preview.vim	/^function! s:Open(open_in_tab) abort$/;"	f
s:Open	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
s:OpenConfig	plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
s:OpenMulti	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
s:OpenNoMarks	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:OrderTime	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:OrderTime(time_str, loop_count)$/;"	f
s:Owner	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:PARSE_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:PARSE_ERROR = -32700$/;"	v
s:ParseArgs	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, comment_mode, arglist) abort "{{{3$/;"	f
s:ParseCino	plugged/vim-javascript/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParseProblemsInHeaders	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseProblemsInHeaders(buffer, lines) abort$/;"	f
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.Slash	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
s:Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.compareTo	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
s:Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
s:Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
s:Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PathInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlatformSlash	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PlatformSlash(path) abort$/;"	f
s:Prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Prepare(...) abort$/;"	f
s:PreparePathArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
s:PrepareWrappedCommand	plugged/ale/autoload/ale/job.vim	/^function! s:PrepareWrappedCommand(original_wrapper, command) abort$/;"	f
s:PreviousToken	plugged/vim-javascript/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:ProcessDeferredCommands	plugged/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCommands(initial_result) abort$/;"	f
s:ProcessLine	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:ProcessLine(comment_do, match, checkRx, replace) abort$/;"	f
s:ProjectionistDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:PromptForApiKey	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:PromptForApiKey()$/;"	f
s:PrtAdd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
s:PrtBS	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
s:PrtClear	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
s:PrtClearCache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
s:PrtCurEnd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
s:PrtCurLeft	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
s:PrtCurRight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
s:PrtCurStart	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
s:PrtDelete	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
s:PrtDeleteEnt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
s:PrtDeleteMRU	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
s:PrtDeleteWord	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
s:PrtExit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
s:PrtExpandDir	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
s:PrtFocusMap	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
s:PrtHistory	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
s:PrtInsert	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
s:PrtSelectJump	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
s:PrtSelectMove	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
s:PrtSwitcher	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
s:Pure	plugged/vim-javascript/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:QueryLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
s:QuickHelp	plugged/ack.vim/autoload/ack.vim	/^function! s:QuickHelp() "{{{$/;"	f
s:REQUEST_CANCELLED	plugged/ale/autoload/ale/lsp/response.vim	/^let s:REQUEST_CANCELLED = -32800$/;"	v
s:RMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RMain = [s:nord1_gui, s:nord14_gui, s:nord1_term, s:nord14_term]$/;"	v
s:RMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:RRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:RRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:Read	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Read(count, line1, line2, range, bang, mods, args, ...) abort$/;"	f
s:RebaseClean	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseClean(file) abort$/;"	f
s:RebaseEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseEdit(cmd, dir) abort$/;"	f
s:RebaseSequenceAborter	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSequenceAborter() abort$/;"	f
s:Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:RehighlightBlame	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
s:Relative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:RemapItemTypes	plugged/ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
s:Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
s:RemoteComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
s:Remove	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveModule	plugged/ale/autoload/ale/test.vim	/^function! s:RemoveModule(results) abort$/;"	f
s:RemoveProblemsForDisabledLinters	plugged/ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/flawfinder.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/pony.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RenameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RenameComplete(A,L,P) abort$/;"	f
s:Render	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
s:ReplaceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd, ...) abort$/;"	f
s:ReplaceCompletionOptions	plugged/ale/autoload/ale/completion.vim	/^function! s:ReplaceCompletionOptions() abort$/;"	f
s:ReplaceInLine	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:ReplaceInLine(text, match) abort "{{{3$/;"	f
s:Reset	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
s:ResetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetConcealOption()$/;"	f
s:ResetWidth	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
s:Resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RevisionComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
s:RunFixer	plugged/ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
s:RunIfExecutable	plugged/ale/autoload/ale/engine.vim	/^function! s:RunIfExecutable(buffer, linter, executable) abort$/;"	f
s:RunJob	plugged/ale/autoload/ale/engine.vim	/^function! s:RunJob(command, options) abort$/;"	f
s:RunJob	plugged/ale/autoload/ale/fix.vim	/^function! s:RunJob(result, options) abort$/;"	f
s:RunLinter	plugged/ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter) abort$/;"	f
s:SERVER_ERROR_END	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_END = -32000$/;"	v
s:SERVER_ERROR_START	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_START = -32099$/;"	v
s:SERVER_NOT_INITIALIZED	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_NOT_INITIALIZED = -32002$/;"	v
s:SEVERITY_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
s:SanitizeArg	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SanitizeArg(arg)$/;"	f
s:SearchLoop	plugged/vim-javascript/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SearchWithDispatch	plugged/ack.vim/autoload/ack.vim	/^function! s:SearchWithDispatch(grepprg, grepargs, grepformat) "{{{$/;"	f
s:SearchWithGrep	plugged/ack.vim/autoload/ack.vim	/^function! s:SearchWithGrep(grepcmd, grepprg, grepargs, grepformat) "{{{$/;"	f
s:SearchingFilepaths	plugged/ack.vim/autoload/ack.vim	/^function! s:SearchingFilepaths() "{{{$/;"	f
s:SelectJavascript	plugged/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
s:Selection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SendHeartbeats	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SendHeartbeats()$/;"	f
s:SendInitMessage	plugged/ale/autoload/ale/lsp.vim	/^function! s:SendInitMessage(conn) abort$/;"	f
s:SendMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
s:SendRequest	plugged/coc.nvim/plugin/coc.vim	/^function! s:SendRequest(name, args, ...)$/;"	f
s:SetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:SetConcealOption()$/;"	f
s:SetDefTxt	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
s:SetIniSetting	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetIniSetting(section, key, val)$/;"	f
s:SetLastHeartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetLastHeartbeat(last_activity_at, last_heartbeat_at, file)$/;"	f
s:SetLastHeartbeatInMemory	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetLastHeartbeatInMemory(last_activity_at, last_heartbeat_at, file)$/;"	f
s:SetListsImpl	plugged/ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
s:SetWD	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
s:Setup	plugged/ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
s:Setup	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
s:SetupConfigFile	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetupConfigFile()$/;"	f
s:SetupDebugMode	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:SetupDebugMode()$/;"	f
s:SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:SetupTemp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SetupTemp(file) abort$/;"	f
s:ShellExpand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ShellExpand(cmd) abort$/;"	f
s:ShouldIgnore	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:ShouldIgnore(buffer, linter_name) abort$/;"	f
s:ShouldOpen	plugged/ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
s:ShouldSuggestForType	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
s:ShowCursorDetailForItem	plugged/ale/autoload/ale/cursor.vim	/^function! s:ShowCursorDetailForItem(loc, options) abort$/;"	f
s:SkipFunc	plugged/vim-javascript/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:Slash	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:Slash	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:SourcedFile	plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:SpecInputs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
s:SplitPattern	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
s:SquashArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument() abort$/;"	f
s:StageApply	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum, count) abort$/;"	f
s:StageDiff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageIntend	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIntend(count) abort$/;"	f
s:StageNext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
s:StagePatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StagePrevious	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
s:StageReveal	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal(...) abort$/;"	f
s:StageSeek	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StartIfExecutable	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartIfExecutable(options, executable) abort$/;"	f
s:StartLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartLSP(options, address, executable, command) abort$/;"	f
s:StartWithAddress	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithAddress(options, address) abort$/;"	f
s:StartWithCommand	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithCommand(options, executable, command) abort$/;"	f
s:Status	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Status(bang, count, mods) abort$/;"	f
s:StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StopCurrentJobs	plugged/ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, clear_lint_file_jobs) abort$/;"	f
s:StopCursorTimer	plugged/ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopCursorTimer	plugged/ale/autoload/ale/virtualtext.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StripWhitespace	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:StripWhitespace(str)$/;"	f
s:Subcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Subcommands() abort$/;"	f
s:Subst	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Subst(format, vars) abort$/;"	f
s:SynAt	plugged/vim-javascript/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:SyncAutocmd	plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
s:System	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:System(cmd) abort$/;"	f
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TempCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
s:TemporaryFilename	plugged/ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
s:TemporaryPSScript	plugged/ale/autoload/ale/powershell.vim	/^function! s:TemporaryPSScript(buffer, input) abort$/;"	f
s:TimerHandler	plugged/ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
s:ToggleByFname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
s:ToggleFocus	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
s:ToggleKeyLoop	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
s:ToggleMRURelative	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
s:ToggleRegex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
s:ToggleType	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
s:Token	plugged/vim-javascript/indent/javascript.vim	/^function s:Token()$/;"	f
s:Tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getDirChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
s:TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:TreeInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:Trim	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Trim(str) abort$/;"	f
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UNKNOWN_ERROR_CODE	plugged/ale/autoload/ale/lsp/response.vim	/^let s:UNKNOWN_ERROR_CODE = -32001$/;"	v
s:Uniq	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UnreplaceInLine	plugged/tcomment_vim/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text, match) abort "{{{3$/;"	f
s:Update	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
s:UpdateCacheIfNecessary	plugged/ale/autoload/ale/statusline.vim	/^function! s:UpdateCacheIfNecessary(buffer) abort$/;"	f
s:UpdateCapabilities	plugged/ale/autoload/ale/lsp.vim	/^function! s:UpdateCapabilities(conn, capabilities) abort$/;"	f
s:UpdateLineNumbers	plugged/ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
s:UsableWin	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
s:UserCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand() abort$/;"	f
s:UsingListMappings	plugged/ack.vim/autoload/ack.vim	/^function! s:UsingListMappings() "{{{$/;"	f
s:UsingLocList	plugged/ack.vim/autoload/ack.vim	/^function! s:UsingLocList() "{{{$/;"	f
s:UsingModule	plugged/ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
s:VERSION	plugged/vim-wakatime/plugin/wakatime.vim	/^let s:VERSION = '7.1.4'$/;"	v
s:VMain	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VMain = [s:nord1_gui, s:nord7_gui, s:nord1_term, s:nord7_term]$/;"	v
s:VMiddle	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VMiddle = [s:nord5_gui, s:nord3_gui, s:nord5_term, s:nord3_term]$/;"	v
s:VRight	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:VRight = [s:nord1_gui, s:nord9_gui, s:nord1_term, s:nord9_term]$/;"	v
s:VimCloseCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
s:VimErrorCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
s:VimExitCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
s:VimOutputCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:VimOutputCallback	plugged/ale/autoload/ale/socket.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:Warn	plugged/ack.vim/autoload/ack.vim	/^function! s:Warn(msg) "{{{$/;"	f
s:Wq	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
s:Write	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
s:YankLine	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:YankLine(...)$/;"	f
s:_	plugged/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:__ale_julia_project_filenames	plugged/ale/autoload/ale/julia.vim	/^let s:__ale_julia_project_filenames = ['REQUIRE', 'Manifest.toml', 'Project.toml']$/;"	v
s:_buffergator_messenger	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_buffergator_messenger = s:NewMessenger("")$/;"	v
s:_catalog_viewer	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_catalog_viewer = s:NewBufferCatalogViewer()$/;"	v
s:_compare_dicts_by_basename	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_basename(m1, m2)$/;"	f
s:_compare_dicts_by_bufname	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_bufname(m1, m2)$/;"	f
s:_compare_dicts_by_bufnum	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_bufnum(m1, m2)$/;"	f
s:_compare_dicts_by_extension	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_extension(m1, m2)$/;"	f
s:_compare_dicts_by_filepath	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_filepath(m1, m2)$/;"	f
s:_compare_dicts_by_mru	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_mru(m1, m2)$/;"	f
s:_compare_dicts_by_value	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_compare_dicts_by_value(m1, m2, key)$/;"	f
s:_detect_filetype	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_detect_filetype(fname)$/;"	f
s:_find_buffers_with_var	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_find_buffers_with_var(varname, expr)$/;"	f
s:_find_mru_bufnr	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_find_mru_bufnr(dir, buffergator_mru)$/;"	f
s:_format_align_left	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_align_left(text, width, fill_char)$/;"	f
s:_format_align_right	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_align_right(text, width, fill_char)$/;"	f
s:_format_escaped_filename	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_escaped_filename(file)$/;"	f
s:_format_filled	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_filled(str, width, align, trunc)$/;"	f
s:_format_time	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_time(secs)$/;"	f
s:_format_truncated	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_format_truncated(str, max_len, trunc)$/;"	f
s:_get_split_mode	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_get_split_mode()$/;"	f
s:_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_is_full_height_window	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_is_full_height_window(win_num)$/;"	f
s:_is_full_width_window	plugged/vim-buffergator/autoload/buffergator.vim	/^function! s:_is_full_width_window(win_num)$/;"	f
s:_lightline	plugged/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_tab_catalog_viewer	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:_tab_catalog_viewer = s:NewTabCatalogViewer()$/;"	v
s:abs_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
s:ack_mappings	plugged/ack.vim/plugin/ack.vim	/^let s:ack_mappings = {$/;"	v
s:ack_param_proc	plugged/far.vim/autoload/far.vim	/^function! s:ack_param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
s:acquire_theme_data	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:acquire_theme_data()$/;"	f
s:activate	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	plugged/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
s:activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
s:activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode)$/;"	f
s:activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
s:activated	plugged/coc.nvim/autoload/coc/list.vim	/^let s:activated = 0$/;"	v
s:active_cwd	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd = ''$/;"	v
s:active_cwd_len	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd_len = 0$/;"	v
s:active_patterns	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_patterns = []$/;"	v
s:add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:add_dummy_sign(bufnr) abort$/;"	f
s:add_methods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addtomrufs	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
s:adjust_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
s:adjust_hunk_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
s:aliases	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:aliases = {}$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm"$/;"	v
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply_syntax_highlightings	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:apply_syntax_highlightings()$/;"	f
s:aqua	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:argmaps	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
s:ars	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assemble_context	plugged/far.vim/autoload/far.vim	/^function! s:assemble_context(far_params, win_params, cmdargs, callback, cbparams) abort "{{{$/;"	f
s:assemble_context_callback	plugged/far.vim/autoload/far.vim	/^function! s:assemble_context_callback(exec_ctx) abort "{{{$/;"	f
s:assert	plugged/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:at	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
s:attr	plugged/vim-vue/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
s:autocmds	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
s:available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:background	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base0 = [ '#0000ff', 12 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base00 = [ '#ffff00', 11  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base01 = [ '#00ff00', 10 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base02 = [ '#000000', 0 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444 ', 238 ]$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535 ', 236 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base03 = [ '#808080', 8 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base1 = [ '#00ffff', 14 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base2 = [ '#c0c0c0', 7 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base3 = [ '#ffffff', 15 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
s:begin_failed_skip_pattern	plugged/ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#282c34', 235 ]$/;"	v
s:bg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#fafafa', 255 ]$/;"	v
s:bin_dir	plugged/ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:bins	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:black	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:blobdirs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#000080', 4 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:bright_blue	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:buffer_commit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
s:buffer_counter	plugged/far.vim/autoload/far.vim	/^let s:buffer_counter = 1$/;"	v
s:buffer_data	plugged/ale/autoload/ale/command.vim	/^    let s:buffer_data = {}$/;"	v
s:buffer_getline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
s:buffer_getvar	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
s:buffer_name	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
s:buffer_path	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
s:buffer_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_relative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_relative(...) dict abort$/;"	f
s:buffer_repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_spec	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_spec() dict abort$/;"	f
s:buffer_type	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buffergator_buffer_line_symbols	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_buffer_line_symbols = {$/;"	v
s:buffergator_buffer_line_symbols_order	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_buffer_line_symbols_order = [$/;"	v
s:buffergator_catalog_display_regime_desc	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_display_regime_desc = {$/;"	v
s:buffergator_catalog_display_regimes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_display_regimes = ['basename', 'parentdir', 'filepath', 'bufname']$/;"	v
s:buffergator_catalog_sort_regime_desc	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_sort_regime_desc = {$/;"	v
s:buffergator_catalog_sort_regimes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_catalog_sort_regimes = ['basename', 'filepath', 'extension', 'bufnum', 'mru']$/;"	v
s:buffergator_default_catalog_sort_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_default_catalog_sort_regime = "bufnum"$/;"	v
s:buffergator_default_display_regime	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_default_display_regime = "basename"$/;"	v
s:buffergator_viewport_split_modes	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_viewport_split_modes = {$/;"	v
s:buffergator_viewport_split_modes_cycle_list	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:buffergator_viewport_split_modes_cycle_list = ["L", "T", "R", "B"]$/;"	v
s:buffunc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
s:bufnr	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufnr_width	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:bufnr_width = 3$/;"	v
s:bufnrfilpath	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufnrfilpath(line)$/;"	f
s:bufparts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufparts(bufnr)$/;"	f
s:buftab	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
s:bufwins	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
s:build_buffer_content	plugged/far.vim/autoload/far.vim	/^function! s:build_buffer_content(far_ctx, win_params) abort "{{{$/;"	f
s:build_command	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:buildpat	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
s:bvars	plugged/vim-javascript/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:bx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:byfname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
s:c_flag	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cached_map	plugged/ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:cachefile	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
s:can_diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:ccex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:center	plugged/numbers.vim/plugin/numbers.vim	/^let s:center=1$/;"	v
s:cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
s:chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
s:changed_wildignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:changed_wildignore = 0$/;"	v
s:changedtick	plugged/nvim-miniyank/autoload/miniyank.vim	/^let s:changedtick = -1$/;"	v
s:changelist	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
s:changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
s:channel_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:channel_map	plugged/ale/autoload/ale/socket.vim	/^let s:channel_map = get(s:, 'channel_map', {})$/;"	v
s:checkAutocmd	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
s:checkCommand	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
s:checkEnvironment	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
s:checkInitailize	plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
s:check_back_space	config/02.general.vim	/^function! s:check_back_space() abort$/;"	f
s:check_back_space	config/07.completion.vim	/^function! s:check_back_space() abort$/;"	f
s:check_far_window_to_resize	plugged/far.vim/autoload/far.vim	/^function! s:check_far_window_to_resize(bufnr) abort "{{{$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checkbuf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chknearby	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
s:choices	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
s:chop	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:classpath_sep	plugged/ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clear	plugged/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
s:clear	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
s:cli_location	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:cli_location = substitute(substitute(expand("<sfile>:p:h"), '\\', '\/', 'g'), '\/plugi/;"	v
s:client	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
s:closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
s:closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
s:closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
s:col_end_patterns	plugged/ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:colour	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:colour(r, g, b)$/;"	f
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
s:column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context)$/;"	f
s:column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context)$/;"	f
s:command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:command(definition) abort$/;"	f
s:command_output	plugged/ale/autoload/ale/assert.vim	/^let s:command_output = []$/;"	v
s:commands	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:commondirs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:comparent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
s:compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum()$/;"	f
s:compfnlen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
s:compile_commands_cache	plugged/ale/autoload/ale/c.vim	/^    let s:compile_commands_cache = {}$/;"	v
s:complete_dir	plugged/far.vim/autoload/far.vim	/^function! s:complete_dir(val)$/;"	f
s:compmatlen	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
s:compmreb	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
s:compmref	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
s:comptime	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
s:compval	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
s:compval	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
s:config	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config_file	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:config_file = s:home . '\/.wakatime.cfg'$/;"	v
s:config_file_already_setup	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:config_file_already_setup = s:false$/;"	v
s:connections	plugged/ale/autoload/ale/lsp.vim	/^let s:connections = get(s:, 'connections', {})$/;"	v
s:continuation	plugged/vim-javascript/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:convert	plugged/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
s:convert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
s:convert_colors	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:convert_colors()$/;"	f
s:coretype_names	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretype_names = {$/;"	v
s:coretypes	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretypes = map(copy(g:ctrlp_types), '[s:coretype_names[v:val], v:val]')$/;"	v
s:counter	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:cpath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:create_color_variables	plugged/papercolor-theme/colors/PaperColor.vim	/^    fun! s:create_color_variables(color_name, rich_color, term_color)$/;"	f
s:create_far_params	plugged/far.vim/autoload/far.vim	/^function! s:create_far_params() abort$/;"	f
s:create_repl_params	plugged/far.vim/autoload/far.vim	/^function! s:create_repl_params() abort$/;"	f
s:create_undo_params	plugged/far.vim/autoload/far.vim	/^function! s:create_undo_params() abort$/;"	f
s:create_win_params	plugged/far.vim/autoload/far.vim	/^function! s:create_win_params() abort$/;"	f
s:cuicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:current_ale_version	plugged/ale/autoload/ale.vim	/^let s:current_ale_version = [2, 4, 0]$/;"	v
s:current_dir	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
s:cursor_in_two_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
s:cursor_timer	plugged/ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	plugged/ale/autoload/ale/virtualtext.vim	/^let s:cursor_timer = -1$/;"	v
s:curtype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:curtype()$/;"	f
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:cyan = [ '#008080', 6 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:darkGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:data_file	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:data_file = s:home . '\/.wakatime.data'$/;"	v
s:debug	plugged/far.vim/autoload/far/tools.vim	/^let s:debug = exists('g:far#debug')? g:far#debug : 0$/;"	v
s:debug_mode_already_setup	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:debug_mode_already_setup = s:false$/;"	v
s:default_ale_linter_aliases	plugged/ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	plugged/ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_comment_string	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^let s:default_comment_string = s:DefaultValue('commentstring')$/;"	v
s:default_comments	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^let s:default_comments       = s:DefaultValue('comments')$/;"	v
s:default_configs	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:default_configs = ['[settings]', 'debug = false', 'hidefilenames = false', 'ignore =',/;"	v
s:default_libs	plugged/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:default_libs = [$/;"	v
s:default_registry	plugged/ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:define_commands	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:define_commands() abort$/;"	f
s:define_sign_line_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
s:define_sign_text	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
s:definitions	plugged/tcomment_vim/autoload/tcomment/type.vim	/^let s:definitions = {}$/;"	v
s:delbuf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbuf()$/;"	f
s:delbufcond	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbufcond(bufnr)$/;"	f
s:delent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark)$/;"	f
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:dict2list	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
s:dictindex	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff_modifier	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
s:diff_restore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:dir	plugged/coc.nvim/src/__tests__/vimrc	/^let s:dir = expand('<sfile>:h')$/;"	v
s:dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpand/;"	v
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dircompl	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
s:dircounts	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:directives_end	plugged/vim-blade/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-blade/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-blade/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	plugged/vim-blade/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasS/;"	v
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:discard_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:discard_header(hunk_diff)$/;"	f
s:dismrk	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
s:displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_tests	plugged/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:dohighlight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
s:dollar_add	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
s:done	plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:dosigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
s:dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
s:dummy_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:echo_signature	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
s:elapsed	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
s:emmet_settings	plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:emmet_unittest_complete	plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
s:enable_neovim	plugged/ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim' : ''$/;"	v
s:end_col_pattern_map	plugged/ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:error	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error_sign	plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:error_symbol	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:esctagscmd	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
s:evaluate_expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
s:excl	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
s:exec_paths	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:execextvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
s:exectags	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
s:exectagsonfile	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
s:executable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executable_cache_map	plugged/ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
s:expand	plugged/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
s:expand	plugged/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
s:expand	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
s:extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
s:fail	plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:false	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:false = 0$/;"	v
s:far_buffer_name	plugged/far.vim/autoload/far.vim	/^let s:far_buffer_name = 'FAR %d'$/;"	v
s:far_params_meta	plugged/far.vim/autoload/far.vim	/^let s:far_params_meta = {$/;"	v
s:far_preview_buffer_name	plugged/far.vim/autoload/far.vim	/^let s:far_preview_buffer_name = 'Preview'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:fg     = [ '#abb2bf', 145 ]$/;"	v
s:ficounts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filename	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
s:filter	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
s:filtermx	plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]/;"	v
s:filters.filter	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^  function! s:filters.filter(candidates, context)$/;"	f
s:findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr)$/;"	f
s:find_current_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
s:find_matches	plugged/far.vim/autoload/far.vim	/^function! s:find_matches(items, key) abort$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_win_params_meta	plugged/far.vim/autoload/far.vim	/^let s:find_win_params_meta = copy(s:win_params_meta)$/;"	v
s:findcommon	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
s:findcount	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str, tgaddr)$/;"	f
s:findroot	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_completion	plugged/tcomment_vim/autoload/tcomment/complete.vim	/^let s:first_completion = 0$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
s:fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
s:flag	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flatten	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
s:flatten_twice	plugged/lightline.vim/autoload/lightline.vim	/^function! s:flatten_twice(xss) abort$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:fnesc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
s:focus_was_lost	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:folded	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
s:foreground	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format	plugged/ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {r/;"	v
s:format	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
s:format_for_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:formatline	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
s:formatul	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
s:fpats	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:function	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:generate_language_option_variables	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_language_option_variables()$/;"	f
s:generate_theme_option_variables	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:generate_theme_option_variables()$/;"	f
s:generate_wildignore_options	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get_background_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
s:get_buf_far_ctx	plugged/far.vim/autoload/far.vim	/^function! s:get_buf_far_ctx(bufnr) abort "{{{$/;"	f
s:get_channel_id	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:get_channel_id(client)$/;"	f
s:get_contexts_under_cursor	plugged/far.vim/autoload/far.vim	/^function! s:get_contexts_under_cursor() abort "{{{$/;"	f
s:get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_foreground_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
s:get_indentexpr	plugged/vim-vue/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
s:get_ms_since	plugged/vim-smooth-scroll/autoload/smooth_scroll.vim	/^function! s:get_ms_since(time)$/;"	f
s:get_project_patterns	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:get_project_patterns(root_dir) abort$/;"	f
s:getbookmarks	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
s:getchar	plugged/coc.nvim/autoload/coc/list.vim	/^function! s:getchar()$/;"	f
s:getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
s:getcmdwintype_exists	plugged/ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:getenv	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
s:getextvar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
s:gethistdata	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
s:gethistloc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
s:getinput	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
s:getinput	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
s:getnewmix	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
s:getparent	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
s:getregs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
s:getundo	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
s:git_diff	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
s:git_diff_staged	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
s:git_supports_command_line_config_override	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:git_versions	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbpath	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
s:glbs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global_variable_list	plugged/ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globdirs	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
s:globsubs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:go_to_definition_map	plugged/ale/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#494b53', 238 ]$/;"	v
s:gray1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#5c6370', 241 ]$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#2c323d', 235 ]$/;"	v
s:gray2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#f0f0f0', 255 ]$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#3e4452', 240 ]$/;"	v
s:gray3	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#d0d0d0', 250 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green  = [ '#98c379', 35 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:grep_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
s:grey_colour	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_colour(n)$/;"	f
s:grey_level	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_level(n)$/;"	f
s:grey_number	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:grey_number(x)$/;"	f
s:gsub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:guicolor	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
s:handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
s:hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:has_async	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:has_async = has('patch-7.4-2344') && exists('*job_start')$/;"	v
s:has_conceal	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:has_conceal = has('conceal')$/;"	v
s:has_features	plugged/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	plugged/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && has('nvim-0.2.0')$/;"	v
s:has_fresh_changes	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
s:has_reltime	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:has_reltime = has('reltime') && localtime() - 1 < split(split(reltimestr(reltime()))[0/;"	v
s:hash_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:headntail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
s:heartbeats_buffer	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:heartbeats_buffer = []$/;"	v
s:hi	plugged/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
s:hi	plugged/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
s:hi	plugged/nord-vim/colors/nord.vim	/^function! s:hi(group, guifg, guibg, ctermfg, ctermbg, attr, guisp)$/;"	f
s:highlight	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
s:highlight_name_for_change	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
s:hlgrps	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:home	plugged/vim-wakatime/plugin/wakatime.vim	/^        let s:home = expand("$HOME")$/;"	v
s:home	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:home = expand("$WAKATIME_HOME")$/;"	v
s:hover_map	plugged/ale/autoload/ale/hover.vim	/^let s:hover_map = {}$/;"	v
s:html_indent	plugged/vim-vue/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:htmlindent	plugged/vim-blade/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hunk_op	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op)$/;"	f
s:hunk_re	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:identify_color_mode	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:identify_color_mode()$/;"	f
s:ifilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
s:ignore	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
s:in_comm	plugged/vim-javascript/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indexes	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicator_checking	plugged/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_checking = get(g:, 'lightline#ale#indicator_checking', 'Linting...')$/;"	v
s:indicator_errors	plugged/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_errors = get(g:, 'lightline#ale#indicator_errors', 'E: ')$/;"	v
s:indicator_ok	plugged/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_ok = get(g:, 'lightline#ale#indicator_ok', 'OK')$/;"	v
s:indicator_warnings	plugged/lightline-ale/autoload/lightline/ale.vim	/^let s:indicator_warnings = get(g:, 'lightline#ale#indicator_warnings', 'W: ')$/;"	v
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:init	plugged/tcomment_vim/autoload/tcomment/type.vim	/^let s:init = 0$/;"	v
s:initVariable	plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
s:init_path	plugged/ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:inputPrompt	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
s:inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
s:inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
s:insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
s:insertcache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
s:insertstr	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:install_plugin	plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
s:install_yarn	plugged/coc.nvim/autoload/coc/util.vim	/^let s:install_yarn = 0$/;"	v
s:isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:is_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
s:is_buffergator_buffers_open	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:is_buffergator_buffers_open = 0$/;"	v
s:is_buffergator_tabs_open	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:is_buffergator_tabs_open = 0$/;"	v
s:is_debug_on	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:is_debug_on = s:false$/;"	v
s:is_file_buffer	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
s:is_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
s:is_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vim	plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:isabs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isabs(path)$/;"	f
s:iscmdwin	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
s:iskeyword_save	plugged/php.vim/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:ispathitem	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
s:isterminal	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isterminal(buf)$/;"	f
s:italic	plugged/nord-vim/colors/nord.vim	/^  let s:italic = ""$/;"	v
s:italic	plugged/nord-vim/colors/nord.vim	/^let s:italic = "italic,"$/;"	v
s:italicize_comments	plugged/nord-vim/colors/nord.vim	/^    let s:italicize_comments = s:italic$/;"	v
s:italicize_comments	plugged/nord-vim/colors/nord.vim	/^let s:italicize_comments = ""$/;"	v
s:itemno	plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_kill_timers	plugged/ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	plugged/ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last)$/;"	f
s:jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
s:jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
s:jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
s:jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
s:jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
s:jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
s:jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward)$/;"	f
s:keyMaps	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:kprange	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:language	plugged/vim-vue/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:languages	plugged/vim-vue/indent/vue.vim	/^let s:languages = [$/;"	v
s:lash	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
s:lash	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
s:last_done_pos	plugged/ale/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_heartbeat	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:last_heartbeat = {'last_activity_at': 0, 'last_heartbeat_at': 0, 'file': ''}$/;"	v
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_pattern_options	plugged/ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	plugged/ale/autoload/ale/cursor.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	plugged/ale/autoload/ale/virtualtext.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_sent	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:last_sent = localtime()$/;"	v
s:last_wildignores	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:lastvisual	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
s:lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:leavepre	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
s:libs	plugged/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:libs = [$/;"	v
s:lightGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:line	plugged/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
s:line_adjustment_for_current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
s:linechars	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lineout	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lint_timer	plugged/ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	plugged/ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:lisp_regex	plugged/ale/autoload/ale/completion.vim	/^let s:lisp_regex = '\\v[a-zA-Z_\\-][a-zA-Z_\\-0-9]*$'$/;"	v
s:load	plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
s:load_256_to_GUI_converter	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:load_256_to_GUI_converter()$/;"	f
s:load_GUI_to_256_converter	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:load_GUI_to_256_converter()$/;"	f
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:load_project_patterns	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:load_project_patterns(root_dir) abort$/;"	f
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:local_cache_expire	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:local_cache_expire = 10  " seconds between reading s:data_file$/;"	v
s:localvar	plugged/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
s:log	plugged/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logWarning	plugged/nord-vim/colors/nord.vim	/^function! s:logWarning(msg)$/;"	f
s:log_file	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logfile	plugged/far.vim/autoload/far/tools.vim	/^let s:logfile = $HOME.'\/far.vim.log'$/;"	v
s:logging	plugged/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:logn	plugged/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:lsCmd	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
s:lsp_linter_map	plugged/ale/autoload/ale/lsp_linter.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:lua	plugged/nvim-miniyank/autoload/miniyank.vim	/^    let s:lua = v:false$/;"	v
s:lua	plugged/nvim-miniyank/autoload/miniyank.vim	/^    let s:lua = v:true$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:magenta = [ '#800080', 5 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map	plugged/lightline.vim/autoload/lightline.vim	/^  function! s:map(xs, f) abort$/;"	f
s:map	plugged/lightline.vim/autoload/lightline.vim	/^  let s:map = function('map')$/;"	v
s:map	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:map(mode, lhs, rhs, ...) abort$/;"	f
s:map_next	plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:match_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:match_highlight(highlight, pattern) abort$/;"	f
s:match_window_opts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
s:matchbuf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchbuf(item, pat)$/;"	f
s:matchfname	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
s:matchlens	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
s:matchtabe	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
s:matchtabs	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
s:max	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
s:maxf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:mergelists	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
s:message	plugged/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
s:messages	plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:metargs_complete	plugged/far.vim/autoload/far.vim	/^function! s:metargs_complete(arglead, cmdline, cursorpos, params_meta) abort$/;"	f
s:mfunc	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
s:mixedsort	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
s:mmode	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
s:mode	plugged/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:mode	plugged/numbers.vim/plugin/numbers.vim	/^let s:mode=0$/;"	v
s:modevar	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
s:modify	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
s:mruf_map_string	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^let s:mruf_map_string = '!stridx(v:val, cwd) ? strpart(v:val, idx) : v:val'$/;"	v
s:msg	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
s:mtype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
s:multipliers	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
s:mx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}'$/;"	v
s:n2s	plugged/vim-wakatime/plugin/wakatime.vim	/^    function! s:n2s(number)$/;"	f
s:name	plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:narrowable	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
s:navy	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:new_log_session	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:newcache	plugged/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nocache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
s:nocache	plugged/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
s:nocache	plugged/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
s:nomodeline	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nord0	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord0	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord0_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord0_gui = "#2E3440"$/;"	v
s:nord0_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord0_gui = "#2E3440"$/;"	v
s:nord0_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord0_term = "NONE"$/;"	v
s:nord1	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord1	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord10	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord10_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord10_gui = "#5E81AC"$/;"	v
s:nord10_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord10_gui = "#5E81AC"$/;"	v
s:nord10_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord10_term = "12"$/;"	v
s:nord10_term	plugged/nord-vim/colors/nord.vim	/^let s:nord10_term = "12"$/;"	v
s:nord11	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord11	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord11_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord11_gui = "#BF616A"$/;"	v
s:nord11_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord11_gui = "#BF616A"$/;"	v
s:nord11_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord11_term = "1"$/;"	v
s:nord11_term	plugged/nord-vim/colors/nord.vim	/^let s:nord11_term = "1"$/;"	v
s:nord12	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord12	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord12_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord12_gui = "#D08770"$/;"	v
s:nord12_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord12_gui = "#D08770"$/;"	v
s:nord12_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord12_term = "11"$/;"	v
s:nord12_term	plugged/nord-vim/colors/nord.vim	/^let s:nord12_term = "11"$/;"	v
s:nord13	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord13	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord13_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord13_gui = "#EBCB8B"$/;"	v
s:nord13_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord13_gui = "#EBCB8B"$/;"	v
s:nord13_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord13_term = "3"$/;"	v
s:nord13_term	plugged/nord-vim/colors/nord.vim	/^let s:nord13_term = "3"$/;"	v
s:nord14	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord14	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord14_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord14_gui = "#A3BE8C"$/;"	v
s:nord14_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord14_gui = "#A3BE8C"$/;"	v
s:nord14_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord14_term = "2"$/;"	v
s:nord14_term	plugged/nord-vim/colors/nord.vim	/^let s:nord14_term = "2"$/;"	v
s:nord15	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord15	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord15_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord15_gui = "#B48EAD"$/;"	v
s:nord15_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord15_gui = "#B48EAD"$/;"	v
s:nord15_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord15_term = "5"$/;"	v
s:nord15_term	plugged/nord-vim/colors/nord.vim	/^let s:nord15_term = "5"$/;"	v
s:nord1_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord1_gui = "#3B4252"$/;"	v
s:nord1_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord1_gui = "#3B4252"$/;"	v
s:nord1_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord1_term = "0"$/;"	v
s:nord1_term	plugged/nord-vim/colors/nord.vim	/^let s:nord1_term = "0"$/;"	v
s:nord2	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord2	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord2_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord2_gui = "#434C5E"$/;"	v
s:nord2_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord2_gui = "#434C5E"$/;"	v
s:nord2_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord2_term = "NONE"$/;"	v
s:nord3	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord3	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord3_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord3_gui = "#4C566A"$/;"	v
s:nord3_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui = "#4C566A"$/;"	v
s:nord3_gui_bright	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui_bright = "#616E88"$/;"	v
s:nord3_gui_brightened	plugged/nord-vim/colors/nord.vim	/^let s:nord3_gui_brightened = [$/;"	v
s:nord3_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord3_term = "8"$/;"	v
s:nord3_term	plugged/nord-vim/colors/nord.vim	/^let s:nord3_term = "8"$/;"	v
s:nord4	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord4	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord4_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord4_gui = "#D8DEE9"$/;"	v
s:nord4_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord4_gui = "#D8DEE9"$/;"	v
s:nord4_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord4_term = "NONE"$/;"	v
s:nord5	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord5	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord5_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord5_gui = "#E5E9F0"$/;"	v
s:nord5_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord5_gui = "#E5E9F0"$/;"	v
s:nord5_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord5_term = "7"$/;"	v
s:nord5_term	plugged/nord-vim/colors/nord.vim	/^let s:nord5_term = "7"$/;"	v
s:nord6	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord6	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord6_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord6_gui = "#ECEFF4"$/;"	v
s:nord6_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord6_gui = "#ECEFF4"$/;"	v
s:nord6_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord6_term = "15"$/;"	v
s:nord6_term	plugged/nord-vim/colors/nord.vim	/^let s:nord6_term = "15"$/;"	v
s:nord7	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord7	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord7_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord7_gui = "#8FBCBB"$/;"	v
s:nord7_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord7_gui = "#8FBCBB"$/;"	v
s:nord7_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord7_term = "14"$/;"	v
s:nord7_term	plugged/nord-vim/colors/nord.vim	/^let s:nord7_term = "14"$/;"	v
s:nord8	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord8	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord8_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord8_gui = "#88C0D0"$/;"	v
s:nord8_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord8_gui = "#88C0D0"$/;"	v
s:nord8_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord8_term = "6"$/;"	v
s:nord8_term	plugged/nord-vim/colors/nord.vim	/^let s:nord8_term = "6"$/;"	v
s:nord9	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nord9	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:nord9_gui	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord9_gui = "#81A1C1"$/;"	v
s:nord9_gui	plugged/nord-vim/colors/nord.vim	/^let s:nord9_gui = "#81A1C1"$/;"	v
s:nord9_term	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord9_term = "4"$/;"	v
s:nord9_term	plugged/nord-vim/colors/nord.vim	/^let s:nord9_term = "4"$/;"	v
s:nord_vim_version	plugged/nord-vim/autoload/airline/themes/nord.vim	/^let s:nord_vim_version="0.10.0"$/;"	v
s:nord_vim_version	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord_vim_version="0.10.0"$/;"	v
s:nord_vim_version	plugged/nord-vim/colors/nord.vim	/^let s:nord_vim_version="0.10.0"$/;"	v
s:normalize	plugged/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
s:nosort	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
s:nosplit	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
s:not_git_dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
s:not_tracked_by_git	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^  function! s:not_tracked_by_git(bufnr)$/;"	f
s:notify	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
s:nr	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
s:ns_id	plugged/ale/autoload/ale/virtualtext.vim	/^    let s:ns_id = nvim_create_namespace('ale')$/;"	v
s:null_comment_string	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^let s:null_comment_string    = '%s'$/;"	v
s:numbers_version	plugged/numbers.vim/plugin/numbers.vim	/^let s:numbers_version = '0.5.0'$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_async	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:nvim_async = exists('*jobstart')$/;"	v
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:obsolete_gitgutter_signs_to_remove	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
s:offset	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:old_cpo = &cpo$/;"	v
s:olive	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:omni_start_map	plugged/ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:on_async_response	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
s:on_bufenter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
s:on_exit	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
s:on_exit	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
s:on_exit_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
s:on_exit_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
s:on_stderr	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
s:on_stderr	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
s:on_stderr_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stderr_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
s:on_stdout	plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
s:on_stdout_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
s:openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
s:openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
s:openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
s:openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
s:openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
s:open_far_buff	plugged/far.vim/autoload/far.vim	/^function! s:open_far_buff(far_ctx, win_params) abort "{{{$/;"	f
s:openfile	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
s:opfirst	plugged/vim-javascript/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
s:opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
s:option	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
s:opts	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:orange = [ '#ff0000', 9 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:osascript	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
s:output	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statu/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:s/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:sta/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef'/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75'/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], s:p.normal/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678d/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], s:p.norm/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 2/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ],/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, /;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	plugged/nord-vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:package_file	plugged/coc.nvim/autoload/coc/util.vim	/^let s:package_file = s:root.'\/package.json'$/;"	v
s:param_proc	plugged/far.vim/autoload/far.vim	/^function! s:param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parseline	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
s:partial_timers	plugged/ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:parts	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path	plugged/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:path = expand('<sfile>:p:h')$/;"	v
s:pathshorten	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
s:pattern	plugged/ale/autoload/ale/handlers/gcc.vim	/^let s:pattern = '\\v^([a-zA-Z]?:?[^:]+):(\\d+):(\\d+)?:? ([^:]+): (.+)$'$/;"	v
s:pattern	plugged/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
s:peach	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:phpindent	plugged/vim-blade/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_path	plugged/nvim-miniyank/autoload/miniyank.vim	/^    let s:plug_path = expand( '<sfile>:p:h:h')$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin	plugged/coc.nvim/src/__tests__/vimrc	/^let s:plugin = s:dir.'\/plugins'$/;"	v
s:plugin_dir	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:pragma_error	plugged/ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepare_env	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prev_wildignore	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:prev_wildignore = ''$/;"	v
s:preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
s:previewBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark)$/;"	f
s:previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
s:previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
s:previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:process	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
s:process	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
s:process	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
s:process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
s:process_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
s:process_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:process_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:proj_cache	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:proj_cache = {}$/;"	v
s:promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:quit	plugged/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	plugged/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:rebase_abbrevs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:record	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#800000', 1 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:redirects	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
s:refar_params_meta	plugged/far.vim/autoload/far.vim	/^let s:refar_params_meta = {$/;"	v
s:references_map	plugged/ale/autoload/ale/references.vim	/^let s:references_map = {}$/;"	v
s:reformat	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
s:refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
s:refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
s:regexfilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
s:regisfilter	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
s:register_default_theme	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:register_default_theme()$/;"	f
s:register_language	plugged/vim-vue/syntax/vue.vim	/^function! s:register_language(language, tag, ...)$/;"	f
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
s:rel	plugged/vim-javascript/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:reload	plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remarksigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:renameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repl_params_meta	plugged/far.vim/autoload/far.vim	/^let s:repl_params_meta = {$/;"	v
s:repo_bare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
s:repo_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
s:request_async	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
s:reset_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
s:reset_tick	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
s:restore_fold_state	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
s:restore_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:rgb	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:rgb_colour	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_level(n)$/;"	f
s:rgb_number	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:rgb_number(x)$/;"	f
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:root	plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	plugged/coc.nvim/src/__tests__/vimrc	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_task	plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:runtime_loaded_map	plugged/ale/autoload/ale/linter.vim	/^let s:runtime_loaded_map = {}$/;"	v
s:safe_printf	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:safe_printf(format, ...)$/;"	f
s:samerootsyml	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
s:sanstail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
s:save_cpo	plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/numbers.vim/plugin/numbers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tcomment_vim/plugin/tcomment.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-buffergator/autoload/buffergator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-buffergator/plugin/buffergator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-smooth-scroll/autoload/smooth_scroll.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_fold_state	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
s:save_last_seen_change	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
s:savebookmark	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
s:saved_ve	plugged/coc.nvim/autoload/coc/list.vim	/^let s:saved_ve = &t_ve$/;"	v
s:savetofile	plugged/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
s:script_path	plugged/ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:seed	plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:select_api	plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:send_buffer_seconds	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:send_buffer_seconds = 30  " seconds between sending buffered heartbeats$/;"	v
s:sep	plugged/ale/autoload/ale/c.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	plugged/ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	plugged/ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:separator	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
s:set	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:set(var, default) abort$/;"	f
s:set	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_color_variables	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:set_color_variables()$/;"	f
s:set_fold_levels	plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
s:set_format_attributes	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:set_format_attributes()$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_overriding_colors	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:set_overriding_colors()$/;"	f
s:set_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path(bufnr, path)$/;"	f
s:setentries	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
s:setlines_post	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_post()$/;"	f
s:setlines_pre	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_pre(...)$/;"	f
s:settype	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
s:setup_maps	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_maps()$/;"	f
s:setupblank	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
s:sfile	plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
s:shellesc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shortest	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
s:should_complete_map	plugged/ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
s:show_category	plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
s:show_done	plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
s:show_ng	plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
s:show_ok	plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
s:show_pass	plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
s:show_skip	plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
s:show_title	plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
s:show_type	plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
s:signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
s:skip_expr	plugged/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:smooth_scroll	plugged/vim-smooth-scroll/autoload/smooth_scroll.vim	/^function! s:smooth_scroll(dir, dist, duration, speed)$/;"	f
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:solarized_termcolors	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:sorted_items	plugged/ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context)$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
s:start	plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
s:start_resize_timer	plugged/far.vim/autoload/far.vim	/^function! s:start_resize_timer() abort$/;"	f
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
s:status	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statusline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strip_trailing_new_line	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
s:strwidth	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
s:sub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:sublist	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
s:sublist7071	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
s:subseparator	plugged/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
s:subseparator	plugged/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
s:suggest_sources	plugged/far.vim/autoload/far.vim	/^let s:suggest_sources = keys(filter(copy(g:far#sources), "get(g:far#sources[v:key], 'suggest', '/;"	v
s:suite	plugged/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	plugged/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	plugged/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	plugged/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	plugged/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	plugged/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	plugged/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	plugged/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	plugged/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	plugged/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	plugged/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	plugged/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite.active_inactive	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
s:suite.component_raw	plugged/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
s:suite.component_type	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
s:suite.component_type	plugged/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
s:suite.custom	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
s:suite.custom_error	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
s:suite.custom_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
s:suite.custom_mixed	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
s:suite.custom_mixed_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
s:suite.custom_number	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
s:suite.custom_one	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
s:suite.custom_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
s:suite.custom_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
s:suite.custom_two	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
s:suite.custom_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
s:suite.custom_type_error	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
s:suite.custom_type_flatten	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
s:suite.custom_type_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
s:suite.custom_type_mixed	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
s:suite.custom_type_mixed_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
s:suite.custom_type_notfound	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
s:suite.custom_type_number	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
s:suite.custom_type_one	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
s:suite.custom_type_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
s:suite.custom_type_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
s:suite.custom_type_two	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
s:suite.custom_type_void_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
s:suite.custom_type_void_string_array	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
s:suite.custom_type_void_string_array_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
s:suite.custom_type_void_string_array_3	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
s:suite.custom_type_void_string_array_4	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
s:suite.custom_void_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
s:suite.custom_void_string_array	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
s:suite.custom_void_string_array_2	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
s:suite.custom_void_string_array_3	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
s:suite.custom_void_string_array_4	plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
s:suite.default	plugged/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
s:suite.default	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
s:suite.dictionary_function	plugged/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
s:suite.disable_enable	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
s:suite.disabled	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
s:suite.duplicated_both_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
s:suite.duplicated_both_nil_left_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
s:suite.duplicated_both_nil_right_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
s:suite.duplicated_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
s:suite.duplicated_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
s:suite.duplicated_string	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
s:suite.duplicated_type_both_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
s:suite.duplicated_type_both_nil_left_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
s:suite.duplicated_type_both_nil_right_most	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
s:suite.duplicated_type_left_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
s:suite.duplicated_type_right_nil	plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
s:suite.enabled	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
s:suite.error	plugged/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
s:suite.expand	plugged/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
s:suite.filename	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
s:suite.filename_modified	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
s:suite.flatten	plugged/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
s:suite.highlight	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
s:suite.insert	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
s:suite.insert	plugged/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
s:suite.keep_original	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
s:suite.left_right	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
s:suite.left_right	plugged/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
s:suite.link	plugged/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
s:suite.many1	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
s:suite.many2	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
s:suite.many3	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
s:suite.mode	plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
s:suite.mode_map	plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
s:suite.modified	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
s:suite.multiple	plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
s:suite.multiple_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
s:suite.nil	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
s:suite.nil	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
s:suite.no_components	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
s:suite.notfound	plugged/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
s:suite.one	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
s:suite.one	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
s:suite.one_empty	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
s:suite.onetab	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
s:suite.raw_type	plugged/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
s:suite.replace	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	plugged/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
s:suite.subseparator	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator	plugged/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator_component	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
s:suite.subseparator_component_expand	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
s:suite.subseparator_component_expand_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
s:suite.subseparator_component_expand_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
s:suite.subseparator_component_expand_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
s:suite.subseparator_component_function	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
s:suite.subseparator_component_function_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
s:suite.subseparator_component_function_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
s:suite.subseparator_component_function_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
s:suite.subseparator_component_function_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
s:suite.subseparator_component_function_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
s:suite.subseparator_component_function_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
s:suite.subseparator_component_function_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
s:suite.subseparator_component_function_visible_condition_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
s:suite.subseparator_component_function_visible_condition_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
s:suite.subseparator_component_function_visible_condition_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
s:suite.subseparator_component_function_visible_condition_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
s:suite.subseparator_component_function_visible_condition_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
s:suite.subseparator_component_function_visible_condition_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
s:suite.subseparator_component_function_visible_condition_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
s:suite.subseparator_component_not_found	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
s:suite.subseparator_component_not_found_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
s:suite.subseparator_component_not_found_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
s:suite.subseparator_component_visible_condition_1	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
s:suite.subseparator_component_visible_condition_2	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
s:suite.subseparator_component_visible_condition_3	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
s:suite.subseparator_component_visible_condition_4	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
s:suite.subseparator_component_visible_condition_5	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
s:suite.subseparator_component_visible_condition_6	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
s:suite.subseparator_component_visible_condition_7	plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
s:suite.tab_component	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
s:suite.tab_component_empty_left	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
s:suite.tab_component_empty_middle	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
s:suite.tab_component_function	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
s:suite.tabclose	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
s:suite.tabclose_last	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
s:suite.tabline	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew_20	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
s:suite.tabnew_20_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
s:suite.tabnew_20_tabfirst_tabnext	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
s:suite.tabnew_20_tabnext_10	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
s:suite.tabnew_20_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
s:suite.tabnew_20_tabprevious_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
s:suite.tabnew_first	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
s:suite.tabnew_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew	plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew_tabfirst	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew_tabprevious	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
s:suite.tabnext	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
s:suite.tabonly	plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
s:suite.tabs	plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
s:suite.three	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
s:suite.three	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
s:suite.three_duplicated	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
s:suite.three_empty_all	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
s:suite.three_empty_left	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
s:suite.three_empty_left_middle	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
s:suite.three_empty_left_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
s:suite.three_empty_middle	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
s:suite.three_empty_middle_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
s:suite.three_empty_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
s:suite.toggle	plugged/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
s:suite.two	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
s:suite.two	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
s:suite.two_duplicated	plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
s:suite.two_empty_both	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
s:suite.two_empty_left	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
s:suite.two_empty_right	plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
s:suite.visual	plugged/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
s:suite.visual	plugged/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
s:supports_star	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:sw	plugged/vim-javascript/indent/javascript.vim	/^  function s:sw()$/;"	f
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol_map	plugged/ale/autoload/ale/symbol.vim	/^let s:symbol_map = {}$/;"	v
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
s:syntax	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
s:syntax_available	plugged/vim-vue/syntax/vue.vim	/^function! s:syntax_available(language)$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	plugged/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t_string	plugged/vim-gitgutter/autoload/gitgutter.vim	/^let s:t_string = type('')$/;"	v
s:tab	plugged/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
s:tabcnt	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnr	plugged/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tail	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
s:temp_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_dir	plugged/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(ale#util#Tempname(), ':h')$/;"	v
s:temp_dir	plugged/ale/autoload/ale/path.vim	/^let s:temp_dir = ale#path#Simplify(fnamemodify(ale#util#Tempname(), ':h'))$/;"	v
s:temp_files	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_from	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:temp_regex_prefix	plugged/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:term	plugged/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
s:term_black	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_purple	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:test	plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
s:test_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:text	plugged/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:textdialog	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
s:theme_has_hint	plugged/papercolor-theme/colors/PaperColor.vim	/^fun! s:theme_has_hint(hint)$/;"	f
s:themes	plugged/papercolor-theme/colors/PaperColor.vim	/^let s:themes = {}$/;"	v
s:throw	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:timer_args	plugged/ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	plugged/ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:to_256	plugged/papercolor-theme/colors/PaperColor.vim	/^  fun! s:to_256(rgb)$/;"	f
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
s:toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
s:toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
s:toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
s:toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
s:trace	plugged/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:trace(message) abort$/;"	f
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trigger_character_map	plugged/ale/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:trigger_gitgutter	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	plugged/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
s:true	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:true = 1$/;"	v
s:types	plugged/ctrlp.vim/autoload/ctrlp.vim	/^let s:types = ['fil', 'buf', 'mru']$/;"	v
s:types	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:unc_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
s:underline	plugged/nord-vim/colors/nord.vim	/^  let s:underline = "NONE,"$/;"	v
s:underline	plugged/nord-vim/colors/nord.vim	/^let s:underline = "underline,"$/;"	v
s:undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
s:undo_params_meta	plugged/far.vim/autoload/far.vim	/^let s:undo_params_meta = {$/;"	v
s:uniq	plugged/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
s:uniq	plugged/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	plugged/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate)$/;"	f
s:unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate)$/;"	f
s:unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context)$/;"	f
s:unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list)$/;"	f
s:unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unmarksigns	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
s:upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
s:upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
s:upconvert	plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_far_buffer	plugged/far.vim/autoload/far.vim	/^function! s:update_far_buffer(far_ctx, bufnr) abort "{{{$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:upsert_new_gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
s:use_known_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
s:usrign	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
s:vacantdict	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
s:validfile	plugged/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
s:var	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:version	plugged/papercolor-theme/colors/PaperColor.vim	/^let s:version = '0.9.x'$/;"	v
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.11.0'$/;"	v
s:version_cache	plugged/ale/ale_linters/java/eclipselsp.vim	/^let s:version_cache = {}$/;"	v
s:version_cache	plugged/ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:veryDarkGray	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
s:vimwiki_hcolor_ctermfg	plugged/nord-vim/colors/nord.vim	/^  let s:vimwiki_hcolor_ctermfg = [s:nord7_term, s:nord8_term, s:nord9_term, s:nord10_term, s:nor/;"	v
s:vimwiki_hcolor_guifg	plugged/nord-vim/colors/nord.vim	/^  let s:vimwiki_hcolor_guifg = [s:nord7_gui, s:nord8_gui, s:nord9_gui, s:nord10_gui, s:nord14_gu/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:violet = [ '#ff00ff', 13 ]$/;"	v
s:violet	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:visual_bg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_fg	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:walker	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:warn(str) abort$/;"	f
s:warning_definetype	plugged/tcomment_vim/autoload/tcomment.vim	/^let s:warning_definetype = 0$/;"	v
s:warning_sign	plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:warning_symbol	plugged/coc.nvim/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:watched_keys	plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:wig_cond	plugged/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:wildignore	plugged/vim-wakatime/plugin/wakatime.vim	/^    let s:wildignore = &wildignore$/;"	v
s:wildignores_options_path	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win_params_meta	plugged/far.vim/autoload/far.vim	/^let s:win_params_meta = {$/;"	v
s:window	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:winshell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:winshell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
s:word_regex_list	plugged/ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
s:wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
s:write_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:writecache	plugged/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
s:writecache	plugged/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#808000', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:z	plugged/vim-javascript/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
safari	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	safari: \/webkit\/.test( userAgent ),$/;"	p	class:jQuery.browser
safari2	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    safari2      = safari && parseInt(version) < 522 && !\/adobeair\/i.test(userAgent),$/;"	v
samba	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "samba": null,$/;"	z
sanitize	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def sanitize(self):$/;"	m	class:Heartbeat
sas	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sas": null,$/;"	z
sass	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "sass": "Sass",$/;"	s
sass	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sass": "Sass",$/;"	s
sather	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sather": null,$/;"	z
save	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    def save(self, session):$/;"	m	class:SessionCache
save_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def save_indent(token_class, start=False):$/;"	m	class:YamlLexer
save_mark	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def save_mark(name):$/;"	f
sboundary	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    sboundary = '(?!'+symbols+')'$/;"	v	class:KokaLexer
scala	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "scala": "Scala",$/;"	s
scan	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def scan(self, pattern):$/;"	m	class:Scanner
scan	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^    from . import scanner as scan$/;"	x	function:_toggle_speedups	file:
scan_once	plugged/vim-wakatime/packages/wakatime/packages/simplejson/scanner.py	/^    def scan_once(string, idx):$/;"	f	function:py_make_scanner	file:
scan_once_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scan_once_str(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	typeref:typename:PyObject *	file:
scan_once_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scan_once_unicode(PyScannerObject *s, PyObject *pystr, Py_ssize_t idx, Py_ssize_t *next_idx_ptr)$/;"	f	typeref:typename:PyObject *	file:
scanner_call	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_call(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:PyObject *	file:
scanner_clear	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_clear(PyObject *self)$/;"	f	typeref:typename:int	file:
scanner_dealloc	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_dealloc(PyObject *self)$/;"	f	typeref:typename:void	file:
scanner_init	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_init(PyObject *self, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:int	file:
scanner_members	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMemberDef scanner_members[] = {$/;"	v	typeref:typename:PyMemberDef[]	file:
scanner_new	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	typeref:typename:PyObject *	file:
scanner_traverse	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanner_traverse(PyObject *self, visitproc visit, void *arg)$/;"	f	typeref:typename:int	file:
scanstring	plugged/vim-wakatime/packages/wakatime/packages/simplejson/decoder.py	/^scanstring = c_scanstring or py_scanstring$/;"	v
scanstring_str	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanstring_str(PyObject *pystr, Py_ssize_t end, char *encoding, int strict, Py_ssize_t *next_end/;"	f	typeref:typename:PyObject *	file:
scanstring_unicode	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^scanstring_unicode(PyObject *pystr, Py_ssize_t end, int strict, Py_ssize_t *next_end_ptr)$/;"	f	typeref:typename:PyObject *	file:
schema	plugged/coc.nvim/src/__tests__/modules/settings.json	/^  "schema": {$/;"	o
scheme	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "scheme": "Scheme",$/;"	s
scheme	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "scheme": "Scheme",$/;"	s
scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    scheme = 'http'$/;"	v	class:HTTPConnectionPool
scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    scheme = 'https'$/;"	v	class:HTTPSConnectionPool
scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    scheme = None$/;"	v	class:ConnectionPool
scheme	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^    scheme = 'https'$/;"	v	class:NTLMConnectionPool
scheme_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    scheme_functions = ($/;"	v	class:XtlangLexer
scheme_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    scheme_keywords = ($/;"	v	class:XtlangLexer
scilab	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "scilab": null,$/;"	z
screen	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "screen": null,$/;"	z
script	plugged/php.vim/attic/30-update.php	/^                $script = preg_replace('{\\\\\\\\@\\d+}', '\\@', $script);$/;"	v
script	plugged/php.vim/attic/30-update.php	/^        $script = $captures['script'];$/;"	v
scripts	plugged/coc.nvim/package.json	/^    "scripts": [$/;"	a	object:pkg
scripts	plugged/coc.nvim/package.json	/^  "scripts": {$/;"	o
scripts	plugged/vim-wakatime/packages/wakatime/packages/idna/idnadata.py	/^scripts = {$/;"	v
scss	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "scss": "SCSS",$/;"	s
scss	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "scss": "SCSS",$/;"	s
sd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sd": null,$/;"	z
sdc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sdc": null,$/;"	z
sdl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sdl": null,$/;"	z
search	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^def search(ctx, args, cmdargs):$/;"	f
section	plugged/emmet-vim/docs/static/css/style-sites.css	/^section {$/;"	s
sections	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def sections(self):$/;"	m	class:RawConfigParser
security_path	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^security_path = find_library('Security')$/;"	v
sed	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sed": null,$/;"	z
seen	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^    seen = set()  # only keep first type for a given word$/;"	v
select	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def select(self, timeout=None):$/;"	m	class:EpollSelector
select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def select(self, timeout=None):$/;"	m	class:KqueueSelector
select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def select(self, timeout=None):$/;"	m	class:PollSelector
select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def select(self, timeout=None):$/;"	m	class:SelectSelector
select	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def select(self, timeout=None):$/;"	m	class:BaseSelector
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards=False):$/;"	m	class:SnippetInstance
select_proxy	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def select_proxy(url, proxies):$/;"	f
semi	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
semver	plugged/coc.nvim/bin/server.js	/^const semver = require('semver')$/;"	C
semver	plugged/coc.nvim/package.json	/^    "semver": "^6.0.0",$/;"	s	object:dependencies
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    def send(self, i):$/;"	m	class:lookahead
send	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):$/;"	m	class:HTTPAdapter
send	plugged/vim-wakatime/packages/wakatime/packages/requests/adapters.py	/^    def send(self, request, stream=False, timeout=None, verify=True,$/;"	m	class:BaseAdapter
send	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^    def send(self, request, **kwargs):$/;"	m	class:Session
send	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def send(self, bytes, flags=0, **kwargs):$/;"	m	class:socksocket
send	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def send(self, data):$/;"	m	class:WrappedSocket
send_heartbeats	plugged/vim-wakatime/packages/wakatime/api.py	/^def send_heartbeats(heartbeats, args, configs, use_ntlm_proxy=False):$/;"	f
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
sendall	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def sendall(self, data):$/;"	m	class:WrappedSocket
sendall	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def sendall(self, data):$/;"	m	class:WrappedSocket
sendpr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sendpr": null,$/;"	z
sendto	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def sendto(self, bytes, *args, **kwargs):$/;"	m	class:socksocket
sensors	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sensors": null,$/;"	z
seoul256	plugged/lightline.vim/README.md	/^### seoul256$/;"	S
server	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let server = net.createServer(function (stream) {$/;"	v
servers	plugged/coc.nvim/src/__tests__/modules/settings.json	/^  "servers": {$/;"	o
services	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "services": null,$/;"	z
session	plugged/php.vim/attic/syntax.ini	/^session = yes$/;"	k	section:extensions
session	plugged/vim-wakatime/packages/wakatime/packages/requests/sessions.py	/^def session():$/;"	f
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
set	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    from sets import Set as set$/;"	x
set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def set(self, section, option, value=None):$/;"	m	class:ConfigParser
set	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def set(self, section, option, value=None):$/;"	m	class:RawConfigParser
set	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def set(self, value=0):$/;"	m	class:U32
set	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    from sets import Set as set$/;"	x
set	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def set(self, name, value, **kwargs):$/;"	m	class:RequestsCookieJar
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_array	plugged/nvim-miniyank/lua/MessagePack.lua	/^local set_array = function (array)$/;"	f
set_block_scalar_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def set_block_scalar_indent(token_class):$/;"	m	class:YamlLexer
set_cert	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    def set_cert(self, key_file=None, cert_file=None,$/;"	m	class:VerifiedHTTPSConnection
set_ciphers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def set_ciphers(self, ciphers):$/;"	m	class:PyOpenSSLContext
set_ciphers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def set_ciphers(self, ciphers):$/;"	m	class:SecureTransportContext
set_ciphers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        def set_ciphers(self, cipher_suite):$/;"	m	class:SSLContext
set_cookie	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def set_cookie(self, cookie, *args, **kwargs):$/;"	m	class:RequestsCookieJar
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def set_cursor_from_pos(pos):$/;"	f
set_default_proxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^def set_default_proxy(proxy_type=None, addr=None, port=None, rdns=True, username=None, password=/;"	f
set_default_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def set_default_template(self, template):$/;"	m	class:TestCaseTable
set_default_verify_paths	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def set_default_verify_paths(self):$/;"	m	class:PyOpenSSLContext
set_default_verify_paths	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def set_default_verify_paths(self):$/;"	m	class:SecureTransportContext
set_defaults	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def set_defaults(self, **kwargs):$/;"	m	class:_ActionsContainer
set_dialect	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    def set_dialect(self, dialect_id):$/;"	m	class:Modula2Lexer
set_environ	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def set_environ(env_name, value):$/;"	f
set_file_position	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/request.py	/^def set_file_position(body, pos):$/;"	f
set_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def set_indent(token_class, implicit=False):$/;"	m	class:YamlLexer
set_integer	plugged/nvim-miniyank/lua/MessagePack.lua	/^local set_integer = function (integer)$/;"	f
set_key_odd_parity	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^def set_key_odd_parity(key):$/;"	f
set_log_level	plugged/vim-wakatime/packages/wakatime/logger.py	/^def set_log_level(logger, args):$/;"	f
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_model_probers	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def set_model_probers(self, logicalProber, visualProber):$/;"	m	class:HebrewProber
set_number	plugged/nvim-miniyank/lua/MessagePack.lua	/^local set_number = function (number)$/;"	f
set_proxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def set_proxy(self, proxy_type=None, addr=None, port=None, rdns=True, username=None, passwor/;"	m	class:socksocket
set_string	plugged/nvim-miniyank/lua/MessagePack.lua	/^local set_string = function (str)$/;"	f
set_test_template	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def set_test_template(self, template):$/;"	m	class:TestCaseTable
setblocking	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def setblocking(self, v):$/;"	m	class:socksocket
setdefault	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    setdefault = DictMixin.setdefault$/;"	v	class:OrderedDict
setdefault	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    setdefault = DictMixin.setdefault$/;"	v	class:OrderedDict
setdefault	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def setdefault(self, key, default=None):$/;"	m	class:OrderedDict
setdefaultproxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^setdefaultproxy = set_default_proxy$/;"	v
setproxy	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    setproxy = set_proxy$/;"	v	class:socksocket
setserial	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "setserial": null,$/;"	z
settimeout	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^    def settimeout(self, timeout):$/;"	m	class:socksocket
settimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def settimeout(self, timeout):$/;"	m	class:WrappedSocket
settimeout	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def settimeout(self, timeout):$/;"	m	class:WrappedSocket
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {$/;"	o	object:definitions.languageServerBase.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerCommand.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerModule.properties
settings	plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerSocket.properties
setup	plugged/vim-wakatime/packages/wakatime/logger.py	/^    def setup(self, timestamp, is_write, entity, version, plugin, verbose,$/;"	m	class:JsonFormatter
setup	plugged/vim-wakatime/packages/wakatime/packages/pygments/sphinxext.py	/^def setup(app):$/;"	f
setup_logging	plugged/vim-wakatime/packages/wakatime/logger.py	/^def setup_logging(args, version):$/;"	f
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
sgml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sgml": null,$/;"	z
sgmldecl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sgmldecl": null,$/;"	z
sgmllnx	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sgmllnx": null,$/;"	z
sh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sh": null,$/;"	z
sha_utf8	plugged/vim-wakatime/packages/wakatime/packages/requests/auth.py	/^            def sha_utf8(x):$/;"	f	member:HTTPDigestAuth.build_digest_header	file:
shebang_matches	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def shebang_matches(text, regex):$/;"	f
shell	plugged/coc.nvim/data/schema.json	/^        "shell": {$/;"	o	object:definitions.languageServerCommand.properties
shell	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "shell": "Shell",$/;"	s
shell_in_repro	plugged/ultisnips/Makefile	/^shell_in_repro:$/;"	t
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shifts2	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des_c.py	/^shifts2 = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0]$/;"	v
shmop	plugged/php.vim/attic/syntax.ini	/^shmop = no$/;"	k	section:extensions
should_bypass_proxies	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def should_bypass_proxies(url, no_proxy):$/;"	f
should_exclude	plugged/vim-wakatime/packages/wakatime/utils.py	/^def should_exclude(entity, include, exclude):$/;"	f
should_obfuscate_filename	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def should_obfuscate_filename(self):$/;"	m	class:Heartbeat
should_obfuscate_project	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def should_obfuscate_project(self):$/;"	m	class:Heartbeat
show	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(){$/;"	m	class:jQuery.fx
shutdown	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def shutdown(self):$/;"	m	class:WrappedSocket
shutdown	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def shutdown(self):$/;"	m	class:WrappedSocket
sicad	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sicad": null,$/;"	z
sieve	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sieve": null,$/;"	z
signature.enable	plugged/coc.nvim/data/schema.json	/^    "signature.enable": {$/;"	o	object:properties
signature.hideOnTextChange	plugged/coc.nvim/data/schema.json	/^    "signature.hideOnTextChange": {$/;"	o	object:properties
signature.maxWindowHeight	plugged/coc.nvim/data/schema.json	/^    "signature.maxWindowHeight": {$/;"	o	object:properties
signature.preferShownAbove	plugged/coc.nvim/data/schema.json	/^    "signature.preferShownAbove": {$/;"	o	object:properties
signature.target	plugged/coc.nvim/data/schema.json	/^    "signature.target": {$/;"	o	object:properties
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
simple_first	plugged/vim-wakatime/packages/wakatime/packages/simplejson/__init__.py	/^def simple_first(kv):$/;"	f
simplefilter	plugged/vim-wakatime/packages/wakatime/packages/pygments/filter.py	/^def simplefilter(f):$/;"	f
simplexml	plugged/php.vim/attic/syntax.ini	/^simplexml = yes$/;"	k	section:extensions
simula	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "simula": null,$/;"	z
sinda	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sinda": null,$/;"	z
sindacmp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sindacmp": null,$/;"	z
sindaout	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sindaout": null,$/;"	z
sisu	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sisu": null,$/;"	z
skill	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "skill": "SKILL",$/;"	s
skip	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    skip = False$/;"	v	class:Heartbeat
skip	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def skip(lexer, match, ctx):$/;"	m	class:CleanLexer
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = lambda self: 'Vim older than 7.4.214 is required' \\$/;"	m	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:_UmlautsBase
skip_if	plugged/ultisnips/test/test_ContextSnippets.py	/^    skip_if = lambda self: 'Bug in Neovim.' \\$/;"	m	class:ContextSnippets_ReportErrorOnIndexOutOfRange
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Leave
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_ShebangPython
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_SimpleExample
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TextInNextLine
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_WithUmlauts
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_LowerCaseAsciiResult
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_SimpleCaseAsciiResult
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	m	class:VimTestCase
skipkeys	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int skipkeys;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
skipkeys_bool	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *skipkeys_bool;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
sl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sl": null,$/;"	z
slang	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slang": null,$/;"	z
sleep	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def sleep(self, response=None):$/;"	m	class:Retry
sleep_for_retry	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/retry.py	/^    def sleep_for_retry(self, response=None):$/;"	m	class:Retry
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
slice	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slice": null,$/;"	z
slim	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "slim": "Slim",$/;"	s
slpconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slpconf": null,$/;"	z
slpreg	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slpreg": null,$/;"	z
slpspi	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slpspi": null,$/;"	z
slrnrc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slrnrc": null,$/;"	z
slrnsc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "slrnsc": null,$/;"	z
sm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sm": null,$/;"	z
small_strings	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *small_strings;  \/* Pending small strings *\/$/;"	m	struct:__anondf9dcc210108	typeref:typename:PyObject *	file:
smalltalk	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "smalltalk": "Smalltalk",$/;"	s
smart_guess_lexer	plugged/vim-wakatime/packages/wakatime/stats.py	/^def smart_guess_lexer(file_name, local_file):$/;"	f
smarty	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "smarty": null,$/;"	z
smcl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "smcl": null,$/;"	z
smil	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "smil": null,$/;"	z
smith	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "smith": null,$/;"	z
sml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sml": null,$/;"	z
smooth_scroll#down	plugged/vim-smooth-scroll/autoload/smooth_scroll.vim	/^function! smooth_scroll#down(dist, duration, speed)$/;"	f
smooth_scroll#up	plugged/vim-smooth-scroll/autoload/smooth_scroll.vim	/^function! smooth_scroll#up(dist, duration, speed)$/;"	f
snipMate & UltiSnip Snippets	plugged/vim-snippets/README.md	/^snipMate & UltiSnip Snippets$/;"	c
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet	plugged/coc.nvim/data/schema.json	/^        "snippet": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^    "snippets": [$/;"	a	object:contributes
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ('test', '[ ${1:foo} ]')$/;"	v	class:Autocommands
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', """Hello \\t ${1:default}\\n$2""")$/;"	v	class:LeaveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', """Hello\\t ${1:default}\\n$2""", '', 's')$/;"	v	class:RemoveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', """next line\\n\\nshould be empty""", '', '')$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', """next line\\n\\nshould be empty""", '', 'm')$/;"	v	class:TrimSpacesAtEndOfLines
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('test', r"""$/;"	v	class:_MultiLineDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü $1')$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üüüüüßßßß')$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts_List
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 ${1:blah}')$/;"	v	class:Completion_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:JumpForward_DefSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_ChangesInPlaceholder
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '$1 Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveEditInTabstop
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '$1hello\\nnice\\nworld')$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hello} $1')$/;"	v	class:DeleteSnippetInsertion0
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\nend')$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:one}(${2:xxx})${3:three}')$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '''\\$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${0:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_Zero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${2:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_NotZero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'Hello\\n${1:Hello}World')$/;"	v	class:Undo_RemoveWholeSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!')$/;"	v	class:_SimpleExpands
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt\\n')$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('test', 'SimpleText')$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('pd', 'padding: ${1:0}px')$/;"	v	class:VirtualEdit
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${2:#2} ${1:#1};$0')$/;"	v	class:Bug1251994
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '\\t${1}${0}')$/;"	v	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', 'hello')$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:FoldOverwrite_Simple_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('test', r"""Hello {{{$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('test', r"""package ${1:`!v printf('c%02d', 3)`};$/;"	v	class:PerlSyntaxFold
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ($/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('m', '\\tBlaahblah \\t\\t  ')$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}\\n$1\\n$0', '', 'f')$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'Before${1:longer expand}After\\nstart$1end')$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'for\\n    blah')$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptNoExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TrickyReferences
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:Python_WeirdScoping_Error
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """${1:hi} `!p res = t[1]+".blah"` End""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """${1:hi} `!p snip.rv = t[1]+".blah"` End""")$/;"	v	class:PythonCode_ReferencePlaceholder
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """${1\/.+\/egal\/m} ${1:`!p$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """${1\/.+\/egal\/m} ${1:`!p$/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """Hallo ${1:now `#!\/usr\/bin\/env %s$/;"	v	class:TabStop_Shell_ShebangPython
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """`!p res = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """`!p snip.rv = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCode_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!p res = "Hallo"` End""")$/;"	v	class:PythonCodeOld_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!p res = "Old"$/;"	v	class:PythonCode_UseNewOverOld
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!p snip.rv = "Hallo"` End""")$/;"	v	class:PythonCode_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!p snip.rv = "Hallo1"$/;"	v	class:PythonCode_MultiAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!p snip.rv = "Hallo1"$/;"	v	class:PythonCode_SimpleAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi `!v indent(".")` End""")$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi$/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """hi`!p snip.rv = ""`End""")$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """start `!p a = 1$/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', """start `!p a = 1$/;"	v	class:PythonCode_MultilineIndented
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_SelectOneWord
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo` you!')$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo`\\nWeiter')$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo höüäh` you!')$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""`echo \\`echo "\\\\$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""`hi="blah"; echo \\`echo "$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi `!p a = "test"$/;"	v	class:PythonCode_Locals
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi `!p$/;"	v	class:PythonCode_IndentProblem
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_IndentEtSw
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_IndentEtSwOffset
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_IndentNoetSwTs
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_MultiAppendShift
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_ResetIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi$/;"	v	class:PythonCode_SimpleMkline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', r"""hi`!p snip.rv = "a" * 100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_Chars
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = (('testblah', 'BLAAH', 'Say BLAH'),$/;"	v	class:_ListAllSnippets
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', 'welt${1:welt${2:welt}welt} $2'$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '    $1\\n$1\\na$1b\\n$1\\ntest $1 mich')$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 Hinten\\n$1')$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1 Hinten')$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n${1:sometext}')$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1 Hinten')$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1')$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n\\n$1\\n\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ObenVorne $1 ObenHinten\\nVorne $1 Hinten')$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1 Hinten\\n$1')$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1\\n$1')$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h $1.c}\\ntest $1')$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}')$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('<trh', '<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3')$/;"	v	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Some}')$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = (('test', 'Case1', 'This is Case 1'),$/;"	v	class:_MultipleMatches
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ('long', 'Hello', '', 'w')$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $1\\nM END -> $0')$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:OldSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', '${1:World}')$/;"	v	class:_SelectModeMappings
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('((?<=\\W)|^)(\\.)', 'self.', '', 'r')$/;"	v	class:_Regex_Self
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(.*test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test *)+', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test.*)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('hi',$/;"	v	class:_TabExpand_RealWorld
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test ', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test me', 'Expand me!')$/;"	v	class:MultiWordSnippet_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', '\\t\\tExpand\\tme!\\t', '', 't')$/;"	v	class:_No_Tab_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'w'), )$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'w'), )$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (r"([abc]+)([def]+)", r"""`!p m = match$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (r"cabfed", r"""`!p snip.rv =  match or "No match"`""")$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('echo', '$0 run')$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('echo', 'echo ${1:Hallo}')$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'Hallo ${1:WELT} ups')$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 $1')$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work')$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} ${1:Beginning}')$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${1:End} ${0:Beginning}')$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte ${1:Beginning}')$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte${1:Beginning}')$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'nothing ${1:i} hups')$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $3  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """Test: ${1:snippet start\\nNested tabstop: $0\\nsnippet end}\\nTrailin/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """Test: ${1:snippet start\\nNested tabstop: $0\\nsnippet end}\\nTrailin/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '[ $1$2 ] $1')$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '\\n\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'each_byte { |${1:byte}| $0 }')$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world')$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip $1')$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:default}')$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:i}')$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 't$1t${2: }t{\\n\\t$0\\n}')$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/$1\/a}')$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/\\L$1\\E\/a}')$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.)\/\\\\u$1\/}')$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\L$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\\\U$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\l$1\/}')$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/([ab])oo\/$1ull\/}')$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(^a).*\/(?0:began with an a)\/}')$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}')$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} $1')$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} ${1:replace me}')$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict3
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict2
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testâ', 'abc123ά', '123\\'êabc')$/;"	v	class:VerifyVimDict1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('if', 'if {\\n\\t${VISUAL}$0\\n}')$/;"	v	class:Visual_LineSelect_DedentLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${0:${VISUAL}}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend')$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforeaaa${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${2:ahh}${VISUAL}${1:ups}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b${VISUAL}a')$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_CrossOneLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_ExpandTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordExclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordInclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_Inword
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'hello\\n\\t ${1:${VISUAL}}\\nend')$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, searchAll):$/;"	m	class:SnippetManager
snmp	plugged/php.vim/attic/syntax.ini	/^snmp = no$/;"	k	section:extensions
snnsnet	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "snnsnet": null,$/;"	z
snnspat	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "snnspat": null,$/;"	z
snnsres	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "snnsres": null,$/;"	z
snobol4	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "snobol4": null,$/;"	z
soap	plugged/php.vim/attic/syntax.ini	/^soap = yes$/;"	k	section:extensions
sockets	plugged/php.vim/attic/syntax.ini	/^sockets = yes$/;"	k	section:extensions
socksocket	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^class socksocket(_BaseSocket):$/;"	c
solarized dark	plugged/lightline.vim/README.md	/^### solarized dark$/;"	S
solarized light	plugged/lightline.vim/README.md	/^### solarized light$/;"	S
something	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    def something(token_class):$/;"	m	class:YamlLexer
sort_keys	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *sort_keys;$/;"	m	struct:_PyEncoderObject	typeref:typename:PyObject *	file:
sorted	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def sorted(iterable, reverse=False):$/;"	f
sourceMap	plugged/coc.nvim/tsconfig.json	/^    "sourceMap": true,$/;"	b	object:compilerOptions
source_file	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    source_file = None$/;"	v	class:DependencyParser
space_before_function_paren	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spec	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "spec": null,$/;"	z
specfun	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    specfun = ("airy", "besselj", "bessely", "besselh", "besseli", "besselk", "beta",$/;"	v	class:MatlabLexer
specialName	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    specialName = r'^main '$/;"	v	class:ElmLexer
special_atom_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    special_atom_re = r'(?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})'$/;"	v	class:ElixirLexer
special_forms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    special_forms = ('let',)$/;"	v	class:FlatlineLexer
special_forms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    special_forms = ($/;"	v	class:ClojureLexer
special_forms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    special_forms = ($/;"	v	class:HyLexer
special_forms	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    special_forms = set(($/;"	v	class:EmacsLispLexer
specman	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "specman": null,$/;"	z
speedups_methods	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^static PyMethodDef speedups_methods[] = {$/;"	v	typeref:typename:PyMethodDef[]	file:
spice	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "spice": null,$/;"	z
spl	plugged/php.vim/attic/syntax.ini	/^spl = yes$/;"	k	section:extensions
splint	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "splint": null,$/;"	z
split	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def split(self, row):$/;"	m	class:RowSplitter
split	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^    def split(self):$/;"	m	class:_TokenType
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^def split_at_whitespace(string):$/;"	f
split_first	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^def split_first(s, delims):$/;"	f
split_path_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^split_path_re = re.compile(r'[\/\\\\ ]')$/;"	v
spup	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "spup": null,$/;"	z
spyce	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "spyce": null,$/;"	z
sql	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "sql": "SQL",$/;"	s
sql	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sql": null,$/;"	z
sqlanywhere	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqlanywhere": null,$/;"	z
sqlforms	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqlforms": null,$/;"	z
sqlinformix	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqlinformix": null,$/;"	z
sqlite	plugged/php.vim/attic/syntax.ini	/^sqlite = no$/;"	k	section:extensions
sqlite3	plugged/php.vim/attic/syntax.ini	/^sqlite3 = yes$/;"	k	section:extensions
sqlj	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqlj": null,$/;"	z
sqloracle	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqloracle": null,$/;"	z
sqr	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sqr": null,$/;"	z
squid	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "squid": null,$/;"	z
src	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var src = target[ name ], copy = options[ name ];$/;"	v
sshconfig	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sshconfig": null,$/;"	z
sshdconfig	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sshdconfig": null,$/;"	z
ssl	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    ssl = None$/;"	v
ssl	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/socks.py	/^    ssl = None$/;"	v
ssl_version	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    ssl_version = None$/;"	v	class:HTTPSConnection
ssl_version	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connection.py	/^    ssl_version = None$/;"	v	class:VerifiedHTTPSConnection
ssl_wrap_socket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^def ssl_wrap_socket(sock, keyfile=None, certfile=None, cert_reqs=None,$/;"	f
st	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "st": null,$/;"	z
standard	plugged/php.vim/attic/syntax.ini	/^standard = yes$/;"	k	section:extensions
standardize_language	plugged/vim-wakatime/packages/wakatime/stats.py	/^def standardize_language(language, plugin):$/;"	f
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
start	plugged/vim-gitgutter/unplace.vim	/^let start = reltime()$/;"	v
start	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    def start(self, arg=None):$/;"	m	class:_PseudoMatch
start_connect	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/timeout.py	/^    def start_connect(self):$/;"	m	class:Timeout
start_section	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^    def start_section(self, heading):$/;"	m	class:HelpFormatter
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream, chars=r'{}\\$`'):$/;"	m	class:EscapeCharToken
stata	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "stata": null,$/;"	z
state	plugged/vim-wakatime/packages/wakatime/dependencies/c_cpp.py	/^    state = None$/;"	v	class:CParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/data.py	/^    state = None$/;"	v	class:JsonParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/dotnet.py	/^    state = None$/;"	v	class:CSharpParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/elm.py	/^    state = None$/;"	v	class:ElmParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/go.py	/^    state = None$/;"	v	class:GoParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/haskell.py	/^    state = None$/;"	v	class:HaskellParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/haxe.py	/^    state = None$/;"	v	class:HaxeParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/javascript.py	/^    state = None$/;"	v	class:JavascriptParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    state = None$/;"	v	class:JavaParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    state = None$/;"	v	class:KotlinParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/jvm.py	/^    state = None$/;"	v	class:ScalaParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    state = None$/;"	v	class:ObjectiveCParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/objective.py	/^    state = None$/;"	v	class:SwiftParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/php.py	/^    state = None$/;"	v	class:PhpParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/python.py	/^    state = None$/;"	v	class:PythonParser
state	plugged/vim-wakatime/packages/wakatime/dependencies/rust.py	/^    state = None$/;"	v	class:RustParser
state	plugged/vim-wakatime/packages/wakatime/packages/chardet/charsetprober.py	/^    def state(self):$/;"	m	class:CharSetProber
state	plugged/vim-wakatime/packages/wakatime/packages/chardet/hebrewprober.py	/^    def state(self):$/;"	m	class:HebrewProber
state	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    state = None$/;"	v	class:ARC4
statements	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    statements = ($/;"	v	class:QBasicLexer
stdErrPipeName	plugged/coc.nvim/bin/tsserverForkStart.js	/^let stdErrPipeName = process.env['STDERR_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdErrStream	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let stdErrStream = net.connect(stdErrPipeName);$/;"	v
stdInPipeName	plugged/coc.nvim/bin/tsserverForkStart.js	/^let stdInPipeName = process.env['STDIN_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdOutPipeName	plugged/coc.nvim/bin/tsserverForkStart.js	/^let stdOutPipeName = process.env['STDOUT_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdOutStream	plugged/coc.nvim/bin/tsserverForkStart.js	/^    let stdOutStream = net.connect(stdOutPipeName);$/;"	v
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {$/;"	o	object:definitions.languageServerBase.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerCommand.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerModule.properties
stdioEncoding	plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerSocket.properties
stdlib_adts_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_adts_db = {$/;"	v	class:Modula2Lexer
stdlib_constants_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_constants_db = {$/;"	v	class:Modula2Lexer
stdlib_modules_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_modules_db = {$/;"	v	class:Modula2Lexer
stdlib_procedures_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_procedures_db = {$/;"	v	class:Modula2Lexer
stdlib_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    stdlib_types = set(($/;"	v	class:CFamilyLexer
stdlib_types_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_types_db = {$/;"	v	class:Modula2Lexer
stdlib_variables_db	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    stdlib_variables_db = {$/;"	v	class:Modula2Lexer
step	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	step: function(gotoEnd){$/;"	m	class:jQuery.fx
step_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    step_keywords = u'^(\\\\s*)(하지만|조건|먼저|만일|만약|단|그리고|그러면|那/;"	v	class:GherkinLexer
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine2
stopPropagation	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event.stopPropagation = function() {$/;"	f	function:event
store_indent	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    def store_indent(lexer, match, ctx):$/;"	m	class:CleanLexer
stp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "stp": null,$/;"	z
str	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^str = type('str')$/;"	v
str	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    str = str$/;"	v
str	plugged/vim-wakatime/packages/wakatime/packages/requests/compat.py	/^    str = unicode$/;"	v
str_to_key56	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/des.py	/^def str_to_key56(key_str):$/;"	f
strace	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "strace": null,$/;"	z
stream	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def stream(self, amt=2**16, decode_content=None):$/;"	m	class:HTTPResponse
stream_decode_response_unicode	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def stream_decode_response_unicode(iterator, r):$/;"	f
streamer	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^        def streamer():$/;"	f	member:Lexer.get_tokens	file:
strict	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    PyObject *strict;$/;"	m	struct:_PyScannerObject	typeref:typename:PyObject *	file:
strictFunctionTypes	plugged/coc.nvim/tsconfig.json	/^    "strictFunctionTypes": false,$/;"	b	object:compilerOptions
strictNullChecks	plugged/coc.nvim/tsconfig.json	/^    "strictNullChecks": false,$/;"	b	object:compilerOptions
strictPropertyInitialization	plugged/coc.nvim/tsconfig.json	/^    "strictPropertyInitialization": false,$/;"	b	object:compilerOptions
string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"\\n])*"|' + r"'(\\\\'|[^'\\n])*'|" + r"`(\\\\`|[^`\\n])*`"$/;"	v	class:NasmLexer
string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"\\n])*"|' + r"'(\\\\'|[^'\\n])*'|" + r"`(\\\\`|[^`\\n])*`"$/;"	v	class:TasmLexer
string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    string = r'"(\\\\"|[^"])*"'$/;"	v	class:GasLexer
string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    string = r'"[^"]*?"'$/;"	v	class:HsailLexer
string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    string = r'"[^"]*?"'$/;"	v	class:LlvmLexer
string_to_tokentype	plugged/vim-wakatime/packages/wakatime/packages/pygments/token.py	/^def string_to_tokentype(s):$/;"	f
string_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    string_types = (str, unicode)$/;"	v
string_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    string_types = (str,)$/;"	v
string_types	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    string_types = (basestring,)$/;"	v
string_types	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    string_types = (str,)$/;"	v
string_types	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    string_types = str,$/;"	v
string_types	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    string_types = str,$/;"	v
stringdouble	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    stringdouble = r'(?:"(?:' + entityref + r'|' + charref + r'|""|[^&"])*")'$/;"	v	class:XQueryLexer
stringsingle	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    stringsingle = r"(?:'(?:" + entityref + r"|" + charref + r"|''|[^&'])*')"$/;"	v	class:XQueryLexer
stringy	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    def stringy(whatkind):$/;"	m	class:SMLLexer
strip_pod	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^        def strip_pod(lines):$/;"	f	member:Perl6Lexer.analyse_text	file:
struct	plugged/coc.nvim/data/schema.json	/^        "struct": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
structure	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    structure = set(('setup', 'loop'))$/;"	v	class:ArduinoLexer
styleFloat	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var styleFloat = jQuery.browser.msie ?$/;"	v
style_for_token	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def style_for_token(cls, token):$/;"	m	class:StyleMeta
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    styles = {}$/;"	v	class:Style
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/abap.py	/^    styles = {$/;"	v	class:AbapStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol.py	/^    styles = {$/;"	v	class:AlgolStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/algol_nu.py	/^    styles = {$/;"	v	class:Algol_NuStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/arduino.py	/^    styles = {$/;"	v	class:ArduinoStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/autumn.py	/^    styles = {$/;"	v	class:AutumnStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/borland.py	/^    styles = {$/;"	v	class:BorlandStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/bw.py	/^    styles = {$/;"	v	class:BlackWhiteStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/colorful.py	/^    styles = {$/;"	v	class:ColorfulStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/default.py	/^    styles = {$/;"	v	class:DefaultStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/emacs.py	/^    styles = {$/;"	v	class:EmacsStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/friendly.py	/^    styles = {$/;"	v	class:FriendlyStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/fruity.py	/^    styles = {$/;"	v	class:FruityStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/igor.py	/^    styles = {$/;"	v	class:IgorStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/lovelace.py	/^    styles = {$/;"	v	class:LovelaceStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/manni.py	/^    styles = {$/;"	v	class:ManniStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/monokai.py	/^    styles = {$/;"	v	class:MonokaiStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/murphy.py	/^    styles = {$/;"	v	class:MurphyStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/native.py	/^    styles = {$/;"	v	class:NativeStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_dark.py	/^    styles = {$/;"	v	class:ParaisoDarkStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/paraiso_light.py	/^    styles = {$/;"	v	class:ParaisoLightStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/pastie.py	/^    styles = {$/;"	v	class:PastieStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/perldoc.py	/^    styles = {$/;"	v	class:PerldocStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rainbow_dash.py	/^    styles = {$/;"	v	class:RainbowDashStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/rrt.py	/^    styles = {$/;"	v	class:RrtStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/sas.py	/^    styles = {$/;"	v	class:SasStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/stata.py	/^    styles = {$/;"	v	class:StataStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/tango.py	/^    styles = {$/;"	v	class:TangoStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/trac.py	/^    styles = {$/;"	v	class:TracStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vim.py	/^    styles = {$/;"	v	class:VimStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/vs.py	/^    styles = {$/;"	v	class:VisualStudioStyle
styles	plugged/vim-wakatime/packages/wakatime/packages/pygments/styles/xcode.py	/^    styles = {$/;"	v	class:XcodeStyle
styles_token	plugged/vim-wakatime/packages/wakatime/packages/pygments/style.py	/^    def styles_token(cls, ttype):$/;"	m	class:StyleMeta
sub	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    sub = words(($/;"	v	class:CrmshLexer
success	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function success(){$/;"	f	function:AnonymousFunctionc5b93c5ca100
sudoers	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sudoers": null,$/;"	z
suggest.acceptSuggestionOnCommitCharacter	plugged/coc.nvim/data/schema.json	/^    "suggest.acceptSuggestionOnCommitCharacter": {$/;"	o	object:properties
suggest.autoTrigger	plugged/coc.nvim/data/schema.json	/^    "suggest.autoTrigger": {$/;"	o	object:properties
suggest.completionItemKindLabels	plugged/coc.nvim/data/schema.json	/^    "suggest.completionItemKindLabels": {$/;"	o	object:properties
suggest.detailField	plugged/coc.nvim/data/schema.json	/^    "suggest.detailField": {$/;"	o	object:properties
suggest.detailMaxLength	plugged/coc.nvim/data/schema.json	/^    "suggest.detailMaxLength": {$/;"	o	object:properties
suggest.disableKind	plugged/coc.nvim/data/schema.json	/^    "suggest.disableKind": {$/;"	o	object:properties
suggest.disableMenu	plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenu": {$/;"	o	object:properties
suggest.echodocSupport	coc-settings.json	/^  "suggest.echodocSupport": true,$/;"	b
suggest.echodocSupport	plugged/coc.nvim/data/schema.json	/^    "suggest.echodocSupport": {$/;"	o	object:properties
suggest.enablePreview	plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreview": {$/;"	o	object:properties
suggest.fixInsertedWord	plugged/coc.nvim/data/schema.json	/^    "suggest.fixInsertedWord": {$/;"	o	object:properties
suggest.highPrioritySourceLimit	plugged/coc.nvim/data/schema.json	/^    "suggest.highPrioritySourceLimit": {$/;"	o	object:properties
suggest.keepCompleteopt	plugged/coc.nvim/data/schema.json	/^    "suggest.keepCompleteopt": {$/;"	o	object:properties
suggest.languageSourcePriority	plugged/coc.nvim/data/schema.json	/^    "suggest.languageSourcePriority": {$/;"	o	object:properties
suggest.localityBonus	plugged/coc.nvim/data/schema.json	/^    "suggest.localityBonus": {$/;"	o	object:properties
suggest.lowPrioritySourceLimit	plugged/coc.nvim/data/schema.json	/^    "suggest.lowPrioritySourceLimit": {$/;"	o	object:properties
suggest.maxCompleteItemCount	coc-settings.json	/^  "suggest.maxCompleteItemCount": 20,$/;"	n
suggest.maxCompleteItemCount	plugged/coc.nvim/data/schema.json	/^    "suggest.maxCompleteItemCount": {$/;"	o	object:properties
suggest.maxPreviewWidth	plugged/coc.nvim/data/schema.json	/^    "suggest.maxPreviewWidth": {$/;"	o	object:properties
suggest.minTriggerInputLength	plugged/coc.nvim/data/schema.json	/^    "suggest.minTriggerInputLength": {$/;"	o	object:properties
suggest.noselect	plugged/coc.nvim/data/schema.json	/^    "suggest.noselect": {$/;"	o	object:properties
suggest.numberSelect	plugged/coc.nvim/data/schema.json	/^    "suggest.numberSelect": {$/;"	o	object:properties
suggest.preferCompleteThanJumpPlaceholder	plugged/coc.nvim/data/schema.json	/^    "suggest.preferCompleteThanJumpPlaceholder": {$/;"	o	object:properties
suggest.previewIsKeyword	plugged/coc.nvim/data/schema.json	/^    "suggest.previewIsKeyword": {$/;"	o	object:properties
suggest.snippetIndicator	plugged/coc.nvim/data/schema.json	/^    "suggest.snippetIndicator": {$/;"	o	object:properties
suggest.timeout	plugged/coc.nvim/data/schema.json	/^    "suggest.timeout": {$/;"	o	object:properties
suggest.timeout	plugged/coc.nvim/src/__tests__/coc-settings.json	/^  "suggest.timeout": 5000,$/;"	n
suggest.triggerAfterInsertEnter	plugged/coc.nvim/data/schema.json	/^    "suggest.triggerAfterInsertEnter": {$/;"	o	object:properties
suggest.triggerCompletionWait	plugged/coc.nvim/data/schema.json	/^    "suggest.triggerCompletionWait": {$/;"	o	object:properties
summary	plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
super_len	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def super_len(o):$/;"	f
supports_chunked_reads	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def supports_chunked_reads(self):$/;"	m	class:HTTPResponse
supports_set_ciphers	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        supports_set_ciphers = ((2, 7) <= sys.version_info < (3,) or$/;"	v	class:SSLContext
suppress_highlight	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    suppress_highlight = set(($/;"	v	class:ArduinoLexer
surround.vim	plugged/vim-surround/README.markdown	/^# surround.vim$/;"	c
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
svg	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "svg": null,$/;"	z
svn	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "svn": null,$/;"	z
swift	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "swift": "Swift",$/;"	s
swig_directives	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    swig_directives = set(($/;"	v	class:SwigLexer
sybase_ct	plugged/php.vim/attic/syntax.ini	/^sybase_ct = no$/;"	k	section:extensions
symbol	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    symbol = r'((?:%s)(?:%s)*)' % (nonmacro, constituent)$/;"	v	class:EmacsLispLexer
symbol	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    symbol = r'(\\|[^|]+\\||(?:%s)(?:%s)*)' % (nonmacro, constituent)$/;"	v	class:CommonLispLexer
symbol_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    symbol_name = r'[a-z!$%%*+,<=>?\/.\\'@&#_-]%s*' % valid_symbol_chars$/;"	v	class:ShenLexer
symbolicid_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    symbolicid_re = r"[!%&$#+\\-\/:<=>?@\\\\~`^|*]+"$/;"	v	class:SMLLexer
symbolicid_reserved	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    symbolicid_reserved = set(($/;"	v	class:SMLLexer
symbols	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    symbols = r'[$%&*+@!\/\\\\^~=.:\\-?|<>]+'$/;"	v	class:KokaLexer
syncolor	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "syncolor": null,$/;"	z
synload	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "synload": null,$/;"	z
syntax	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "syntax": null,$/;"	z
sysctl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "sysctl": null,$/;"	z
sysvmsg	plugged/php.vim/attic/syntax.ini	/^sysvmsg = no$/;"	k	section:extensions
sysvsem	plugged/php.vim/attic/syntax.ini	/^sysvsem = no$/;"	k	section:extensions
sysvshm	plugged/php.vim/attic/syntax.ini	/^sysvshm = no$/;"	k	section:extensions
t	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> t :call ale#preview#OpenSelectionInTab()<CR>$/;"	m
t	plugged/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.t = function(value, mode) {$/;"	f	function:__webpack_require__
t	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		function t(gotoEnd){$/;"	f	function:jQuery.fx.custom
t	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> t :call far#change_exclude_under_cursor(-1)<cr>$/;"	m
t	plugged/far.vim/autoload/far.vim	/^    vnoremap <buffer><silent> t :call far#change_exclude_under_cursor(-1)<cr>$/;"	m
t	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> t           :<C-U>call b:buffergator_catalog_viewer.visit_/;"	m
t	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> t           :call b:buffergator_catalog_viewer.visit_targe/;"	m
table_name	plugged/vim-wakatime/packages/wakatime/offlinequeue.py	/^    table_name = 'heartbeat_2'$/;"	v	class:Queue
table_name	plugged/vim-wakatime/packages/wakatime/session_cache.py	/^    table_name = 'session'$/;"	v	class:SessionCache
tads	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tads": null,$/;"	z
tag_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^tag_re = re.compile(r'<(.+?)(\\s.*?)?>.*?<\/.+?>',$/;"	v
tags	plugged/vim-wakatime/packages/wakatime/dependencies/html.py	/^    tags = []$/;"	v	class:HtmlParser
tags	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tags": null,$/;"	z
tak	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tak": null,$/;"	z
takcmp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "takcmp": null,$/;"	z
take_action	plugged/vim-wakatime/packages/wakatime/packages/argparse.py	/^        def take_action(action, argument_strings, option_string=None):$/;"	f	member:ArgumentParser._parse_known_args	file:
takout	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "takout": null,$/;"	z
tar	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tar": null,$/;"	z
target	plugged/coc.nvim/tsconfig.json	/^    "target": "es2017",$/;"	s	object:compilerOptions
target	plugged/coc.nvim/webpack.config.js	/^  target: 'node',$/;"	p	class:module.exports
target	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;$/;"	v
targets	plugged/coc.nvim/package.json	/^    "targets": [$/;"	a	object:pkg
taskdata	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "taskdata": null,$/;"	z
taskedit	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "taskedit": null,$/;"	z
tasm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tasm": null,$/;"	z
tcl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tcl": null,$/;"	z
tcomment#Comment	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...) abort$/;"	f
tcomment#CommentAs	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, comment_anyway, filetype, ...) abort$/;"	f
tcomment#DefineType	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#DefineType(...) abort$/;"	f
tcomment#GetLineC	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetLineC(...) abort$/;"	f
tcomment#GuessCommentType	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) abort "{{{3$/;"	f
tcomment#MaybeReuseOptions	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#MaybeReuseOptions(name) abort "{{{3$/;"	f
tcomment#ResetOption	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#ResetOption() abort "{{{3$/;"	f
tcomment#SetOption	plugged/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) abort "{{{3$/;"	f
tcomment#commentdef#BlockGetCommentString	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#BlockGetCommentString(cdef) abort$/;"	f
tcomment#commentdef#BlockGetMiddleString	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#BlockGetMiddleString(cdef) abort$/;"	f
tcomment#commentdef#Extend	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#Extend(beg, end, comment_mode, cdef, args) abort$/;"	f
tcomment#commentdef#Get	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#Get(beg, end, comment_mode, ...) abort$/;"	f
tcomment#commentdef#GetBlockCommentRx	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#GetBlockCommentRx(cdef) abort$/;"	f
tcomment#commentdef#GetCommentReplace	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#GetCommentReplace(cdef, cms0) abort$/;"	f
tcomment#commentdef#GetCustom	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#GetCustom(filetype, comment_mode, ...) abort$/;"	f
tcomment#commentdef#GetForType	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#GetForType(beg, end, comment_mode, filetype) abort "{{{3$/;"	f
tcomment#commentdef#RepeatCommentstring	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#RepeatCommentstring(cdef) abort "{{{3$/;"	f
tcomment#commentdef#SetWhitespaceMode	plugged/tcomment_vim/autoload/tcomment/commentdef.vim	/^function! tcomment#commentdef#SetWhitespaceMode(cdef) abort "{{{3$/;"	f
tcomment#commentmode#AddExtra	plugged/tcomment_vim/autoload/tcomment/commentmode.vim	/^function! tcomment#commentmode#AddExtra(comment_mode, extra, beg, end) abort "{{{3$/;"	f
tcomment#commentmode#Guess	plugged/tcomment_vim/autoload/tcomment/commentmode.vim	/^function! tcomment#commentmode#Guess(comment_mode, supported_comment_modes) abort "{{{3$/;"	f
tcomment#compatibility#Strdisplaywidth	plugged/tcomment_vim/autoload/tcomment/compatibility.vim	/^    function! tcomment#compatibility#Strdisplaywidth(...) abort "{{{3$/;"	f
tcomment#compatibility#Strdisplaywidth	plugged/tcomment_vim/autoload/tcomment/compatibility.vim	/^    function! tcomment#compatibility#Strdisplaywidth(string, ...) abort "{{{3$/;"	f
tcomment#compatibility#Strwidth	plugged/tcomment_vim/autoload/tcomment/compatibility.vim	/^    function! tcomment#compatibility#Strwidth(text) abort "{{{3$/;"	f
tcomment#complete#Args	plugged/tcomment_vim/autoload/tcomment/complete.vim	/^function! tcomment#complete#Args(ArgLead, CmdLine, CursorPos) abort "{{{3$/;"	f
tcomment#complete#Complete	plugged/tcomment_vim/autoload/tcomment/complete.vim	/^function! tcomment#complete#Complete(ArgLead, CmdLine, CursorPos) abort "{{{3$/;"	f
tcomment#cursor#GetStartEnd	plugged/tcomment_vim/autoload/tcomment/cursor.vim	/^function! tcomment#cursor#GetStartEnd(beg, end, comment_mode) abort "{{{3$/;"	f
tcomment#cursor#SetPos	plugged/tcomment_vim/autoload/tcomment/cursor.vim	/^function! tcomment#cursor#SetPos(expr, pos) abort "{{{3$/;"	f
tcomment#debug#CollectInfo	plugged/tcomment_vim/autoload/tcomment/debug.vim	/^function! tcomment#debug#CollectInfo() abort "{{{3$/;"	f
tcomment#deprecated#Check	plugged/tcomment_vim/autoload/tcomment/deprecated.vim	/^function! tcomment#deprecated#Check() abort "{{{3$/;"	f
tcomment#filetype#Get	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^function! tcomment#filetype#Get(...) abort "{{{3$/;"	f
tcomment#filetype#GetAlt	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^function! tcomment#filetype#GetAlt(filetype, cdef) abort "{{{3$/;"	f
tcomment#filetype#Guess	plugged/tcomment_vim/autoload/tcomment/filetype.vim	/^function! tcomment#filetype#Guess(beg, end, comment_mode, filetype, ...) abort$/;"	f
tcomment#format#EncodeCommentPart	plugged/tcomment_vim/autoload/tcomment/format.vim	/^function! tcomment#format#EncodeCommentPart(string) abort$/;"	f
tcomment#format#Printf1	plugged/tcomment_vim/autoload/tcomment/format.vim	/^function! tcomment#format#Printf1(fmt, expr) abort$/;"	f
tcomment#operator#Anyway	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^function! tcomment#operator#Anyway(type) abort "{{{3$/;"	f
tcomment#operator#Line	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^function! tcomment#operator#Line(type) abort "{{{3$/;"	f
tcomment#operator#LineAnyway	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^function! tcomment#operator#LineAnyway(type) abort "{{{3$/;"	f
tcomment#operator#Op	plugged/tcomment_vim/autoload/tcomment/operator.vim	/^function! tcomment#operator#Op(type, ...) abort "{{{3$/;"	f
tcomment#regex#Count	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#Count(string, rx) abort$/;"	f
tcomment#regex#EndColRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#EndColRx(comment_mode, lnum, pos) abort$/;"	f
tcomment#regex#EndLineRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#EndLineRx(pos) abort$/;"	f
tcomment#regex#EndPosRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#EndPosRx(comment_mode, lnum, col) abort$/;"	f
tcomment#regex#StartColRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#StartColRx(cdef, comment_mode, col, ...) abort$/;"	f
tcomment#regex#StartLineRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#StartLineRx(pos) abort$/;"	f
tcomment#regex#StartPosRx	plugged/tcomment_vim/autoload/tcomment/regex.vim	/^function! tcomment#regex#StartPosRx(cdef, comment_mode, line, col) abort$/;"	f
tcomment#syntax#GetSyntaxName	plugged/tcomment_vim/autoload/tcomment/syntax.vim	/^function! tcomment#syntax#GetSyntaxName(lnum, col, ...) abort "{{{3$/;"	f
tcomment#textobject#InlineComment	plugged/tcomment_vim/autoload/tcomment/textobject.vim	/^function! tcomment#textobject#InlineComment() abort "{{{3$/;"	f
tcomment#type#Collect	plugged/tcomment_vim/autoload/tcomment/type.vim	/^function! tcomment#type#Collect() abort$/;"	f
tcomment#type#Define	plugged/tcomment_vim/autoload/tcomment/type.vim	/^function! tcomment#type#Define(name, commentdef, ...) abort$/;"	f
tcomment#type#Exists	plugged/tcomment_vim/autoload/tcomment/type.vim	/^function! tcomment#type#Exists(name, ...) abort$/;"	f
tcomment#type#GetDefinition	plugged/tcomment_vim/autoload/tcomment/type.vim	/^function! tcomment#type#GetDefinition(name, ...) abort$/;"	f
tcomment#vimoptions#MakeCommentDefinition	plugged/tcomment_vim/autoload/tcomment/vimoptions.vim	/^function! tcomment#vimoptions#MakeCommentDefinition(comment_mode) abort$/;"	f
tcsh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tcsh": null,$/;"	z
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
tell	plugged/vim-wakatime/packages/wakatime/packages/urllib3/response.py	/^    def tell(self):$/;"	m	class:HTTPResponse
template	plugged/php.vim/attic/30-update.php	/^    $template = str_ireplace($/;"	v
template	plugged/php.vim/attic/30-update.php	/^$template = file_get_contents($argv[1]);$/;"	v
template	plugged/php.vim/attic/30-update.php	/^$template = preg_replace($/;"	v
template	plugged/php.vim/attic/30-update.php	/^$template = preg_replace_callback($/;"	v
terminal_encoding	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def terminal_encoding(term):$/;"	f
terminateTree	plugged/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
terminated	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    terminated = r'(?=[ "()\\'\\n,;`])'  # whitespace or terminating macro characters$/;"	v	class:CommonLispLexer
terminated	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    terminated = r'(?=[ "()\\]\\'\\n,;`])'  # whitespace or terminating macro characters$/;"	v	class:EmacsLispLexer
terminfo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "terminfo": null,$/;"	z
test	plugged/coc.nvim/package.json	/^    "test": "node --trace-warnings node_modules\/.bin\/jest --runInBand --detectOpenHandles --fo/;"	s	object:scripts
test	plugged/emmet-vim/Makefile	/^test:$/;"	t
test	plugged/vim-vue/Makefile	/^test: dependencies$/;"	t
test	plugged/vim-wakatime/packages/wakatime/packages/pygments/scanner.py	/^    def test(self, pattern):$/;"	m	class:Scanner
test-build	plugged/coc.nvim/package.json	/^    "test-build": "node --trace-warnings node_modules\/.bin\/jest --runInBand --coverage --force/;"	s	object:scripts
test-nvim	plugged/vim-vue/Makefile	/^test-nvim: dependencies$/;"	t
testEnvironment	plugged/coc.nvim/package.json	/^    "testEnvironment": "node",$/;"	s	object:jest
testRegex	plugged/coc.nvim/package.json	/^    "testRegex": "src\/__tests__\/.*\\\\.(test|spec)\\\\.ts$",$/;"	s	object:jest
test_snipmate_format	plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
tests	plugged/ale/run-tests.bat	/^if not "%1"=="" set tests=%1$/;"	v
tests	plugged/ale/run-tests.bat	/^set tests=test\/*.vader test\/*\/*.vader test\/*\/*\/*.vader test\/*\/*\/*\/*.vader$/;"	v
tex	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tex": null,$/;"	z
texinfo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "texinfo": null,$/;"	z
texmf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "texmf": null,$/;"	z
text	plugged/coc.nvim/data/schema.json	/^        "text": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "text": "Text",$/;"	s
text	plugged/vim-wakatime/packages/wakatime/packages/requests/models.py	/^    def text(self):$/;"	m	class:Response
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = '\\n\\n --- some text after --- '$/;"	v	class:VimTestCase
text_analyse	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    def text_analyse(text):$/;"	f	function:make_analysator	file:
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = ' --- some text before --- \\n\\n'$/;"	v	class:VimTestCase
text_tuple	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    text_tuple = (r'[^\\S\\n]+', Text)$/;"	v	class:AlloyLexer
text_type	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/chardet/compat.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    text_type = unicode$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    text_type = str$/;"	v
text_type	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    text_type = unicode$/;"	v
tf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tf": null,$/;"	z
this	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^this = _This()$/;"	v
threading	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    import dummy_threading as threading$/;"	I
tidy	plugged/php.vim/attic/syntax.ini	/^tidy = no$/;"	k	section:extensions
tidy	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tidy": null,$/;"	z
tilde	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tilde": null,$/;"	z
time	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    time = None$/;"	v	class:Heartbeat
timestamp	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    timestamp = r"""$/;"	v	class:IrcLogsLexer
timezone	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^def timezone(zone):$/;"	f
tli	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tli": null,$/;"	z
to_key_val_list	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def to_key_val_list(value):$/;"	f
to_native_string	plugged/vim-wakatime/packages/wakatime/packages/requests/_internal_utils.py	/^def to_native_string(string, encoding='ascii'):$/;"	f
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
tokenConstructor	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokenConstructor = Generic.Emph$/;"	v	class:KokaLexer
tokenType	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokenType = Name.Attribute$/;"	v	class:KokaLexer
tokenTypeDef	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokenTypeDef = Name.Class$/;"	v	class:KokaLexer
token_variants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:CSharpLexer
token_variants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    token_variants = True$/;"	v	class:NemerleLexer
token_variants	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    token_variants = ['+i6t-not-inline', '+i6t-inline', '+i6t-use-option']$/;"	v	class:Inform7Lexer
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def tokenize(self, row):$/;"	m	class:RowTokenizer
tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def tokenize(self, string, token):$/;"	m	class:VariableTokenizer
tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def tokenize(self, value):$/;"	m	class:Tokenizer
tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def tokenize(self, value, index):$/;"	m	class:_Table
tokenize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/robotframework.py	/^    def tokenize(self, value, token):$/;"	m	class:GherkinTokenizer
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def tokenize_snippet_text(snippet_instance, text, indent,$/;"	f
tokenizer	plugged/php.vim/attic/syntax.ini	/^tokenizer = yes$/;"	k	section:extensions
tokens	plugged/vim-wakatime/packages/wakatime/dependencies/__init__.py	/^    def tokens(self):$/;"	m	class:TokenParser
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^    tokens = {}$/;"	v	class:RegexLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScript3Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:ActionScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    tokens = {$/;"	v	class:MxmlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:BCLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:GAPLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MathematicaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/algebra.py	/^    tokens = {$/;"	v	class:MuPADLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ambient.py	/^    tokens = {$/;"	v	class:AmbientTalkLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ampl.py	/^    tokens = {$/;"	v	class:AmplLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/apl.py	/^    tokens = {$/;"	v	class:APLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    tokens = {$/;"	v	class:AdlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    tokens = {$/;"	v	class:AtomsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    tokens = {$/;"	v	class:CadlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/archetype.py	/^    tokens = {$/;"	v	class:OdinLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(GasLexer)$/;"	v	class:ObjdumpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = _objdump_lexer_tokens(NasmLexer)$/;"	v	class:NasmObjdumpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:Ca65Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:GasLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:HsailLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:LlvmLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:NasmLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    tokens = {$/;"	v	class:TasmLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutoItLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/automation.py	/^    tokens = {$/;"	v	class:AutohotkeyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzBasicLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:BlitzMaxLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:CbmBasicV2Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:MonkeyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/basic.py	/^    tokens = {$/;"	v	class:QBasicLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    tokens = {$/;"	v	class:BSTLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/bibtex.py	/^    tokens = {$/;"	v	class:BibTeXLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:ABAPLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolFreeformatLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:CobolLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:GoodDataCLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:MaqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    tokens = {$/;"	v	class:OpenEdgeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CFamilyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_cpp.py	/^    tokens = {$/;"	v	class:CppLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ClayLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ECLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:MqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:NesCLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:PikeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:SwigLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    tokens = {$/;"	v	class:ValaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/capnproto.py	/^    tokens = {$/;"	v	class:CapnProtoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/chapel.py	/^    tokens = {$/;"	v	class:ChapelLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/clean.py	/^    tokens = {$/;"	v	class:CleanLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:ApacheConfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:Cfengine3Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:DockerLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:IniLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:KconfigLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:LighttpdConfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:NginxConfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:PacmanConfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:PkgConfigLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:PropertiesLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:RegeditLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:SquidConfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:TermcapLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:TerminfoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/configs.py	/^    tokens = {$/;"	v	class:TerraformLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:PyPyLogLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/console.py	/^    tokens = {$/;"	v	class:VCTreeStatusLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/crystal.py	/^    tokens = {$/;"	v	class:CrystalLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    tokens = {$/;"	v	class:CsoundDocumentLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    tokens = {$/;"	v	class:CsoundLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    tokens = {$/;"	v	class:CsoundOrchestraLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    tokens = {$/;"	v	class:CsoundScoreLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:CssLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:LessCssLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:SassLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/css.py	/^    tokens = {$/;"	v	class:ScssLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:CrocLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/d.py	/^    tokens = {$/;"	v	class:DLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dalvik.py	/^    tokens = {$/;"	v	class:SmaliLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonBareObjectLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLdLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:JsonLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/data.py	/^    tokens = {$/;"	v	class:YamlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DarcsPatchLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:DiffLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/diff.py	/^    tokens = {$/;"	v	class:WDiffLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:BooLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:FSharpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:GenericAspxLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {$/;"	v	class:VbNetLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:CSharpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    tokens = {}$/;"	v	class:NemerleLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:AlloyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:BroLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:CrmshLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:FlatlineLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:MscgenLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PanLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:ProtoBufLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:PuppetLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:RslLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:SnowballLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:ThriftLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    tokens = {$/;"	v	class:VGLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    tokens = {$/;"	v	class:DylanLidLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ecl.py	/^    tokens = {$/;"	v	class:ECLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/eiffel.py	/^    tokens = {$/;"	v	class:EiffelLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    tokens = {$/;"	v	class:ElmLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ElixirLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    tokens = {$/;"	v	class:ErlangLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:AheuiLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BefungeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:BrainfuckLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:CAmkESLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:CapDLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/esoteric.py	/^    tokens = {$/;"	v	class:RedcodeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ezhil.py	/^    tokens = {$/;"	v	class:EzhilLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/factor.py	/^    tokens = {$/;"	v	class:FactorLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fantom.py	/^    tokens = {$/;"	v	class:FantomLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/felix.py	/^    tokens = {$/;"	v	class:FelixLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    tokens = {$/;"	v	class:ForthLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    tokens = {$/;"	v	class:FortranFixedLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/fortran.py	/^    tokens = {$/;"	v	class:FortranLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/foxpro.py	/^    tokens = {$/;"	v	class:FoxProLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/go.py	/^    tokens = {$/;"	v	class:GoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    tokens = {$/;"	v	class:AbnfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    tokens = {$/;"	v	class:BnfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/grammar_notation.py	/^    tokens = {$/;"	v	class:JsgfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graph.py	/^    tokens = {$/;"	v	class:CypherLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:AsymptoteLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GLShaderLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:GnuplotLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PostScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    tokens = {$/;"	v	class:PovrayLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:AgdaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:CryptolLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:HaskellLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:IdrisLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    tokens = {$/;"	v	class:KokaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HaxeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    tokens = {$/;"	v	class:HxmlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:SystemVerilogLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VerilogLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hdl.py	/^    tokens = {$/;"	v	class:VhdlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/hexdump.py	/^    tokens = {$/;"	v	class:HexdumpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:DtdLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HamlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:HtmlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:PugLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:ScamlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/html.py	/^    tokens = {$/;"	v	class:XmlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/idl.py	/^    tokens = {$/;"	v	class:IDLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    tokens = {$/;"	v	class:IgorLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/inferno.py	/^    tokens = {$/;"	v	class:LimboLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:DebianControlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:NSISLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:RPMSpecLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/installers.py	/^    tokens = {$/;"	v	class:SourcesListLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Inform6Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    tokens = {$/;"	v	class:Tads3Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/int_fiction.py	/^    tokens = {}$/;"	v	class:Inform7Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/iolang.py	/^    tokens = {$/;"	v	class:IoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    tokens = {$/;"	v	class:JLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:CoffeeScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:DartLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:EarlGreyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:JavascriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:JuttleLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:KalLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LassoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:LiveScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:MaskLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:ObjectiveJLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^    tokens = {$/;"	v	class:TypeScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/julia.py	/^    tokens = {$/;"	v	class:JuliaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:CeylonLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ClojureLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GoloLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GosuLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:GroovyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:IokeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JasminLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:JavaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:KotlinLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:PigLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:ScalaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:TeaLangLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    tokens = {$/;"	v	class:XtendLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:CPSALexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:CommonLispLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:EmacsLispLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:HyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:NewLispLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:RacketLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:SchemeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:ShenLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    tokens = {$/;"	v	class:XtlangLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:BaseMakefileLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/make.py	/^    tokens = {$/;"	v	class:CMakeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:BBCodeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:GroffLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MarkdownLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MoinWikiLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocHashLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:MozPreprocPercentLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:RstLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    tokens = {$/;"	v	class:TexLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:MatlabLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:OctaveLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/matlab.py	/^    tokens = {$/;"	v	class:ScilabLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OcamlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:OpaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    tokens = {$/;"	v	class:SMLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:BugsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:JagsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:ModelicaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modeling.py	/^    tokens = {$/;"	v	class:StanLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    tokens = {$/;"	v	class:Modula2Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/monte.py	/^    tokens = {$/;"	v	class:MonteLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ncl.py	/^    tokens = {$/;"	v	class:NCLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    tokens = {$/;"	v	class:NimrodLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nit.py	/^    tokens = {$/;"	v	class:NitLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nix.py	/^    tokens = {$/;"	v	class:NixLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/oberon.py	/^    tokens = {$/;"	v	class:ComponentPascalLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^        tokens = {$/;"	v	class:objective.GeneratedObjectiveCVariant
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:LogosLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/objective.py	/^    tokens = {$/;"	v	class:SwiftLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ooc.py	/^    tokens = {$/;"	v	class:OocLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parasail.py	/^    tokens = {$/;"	v	class:ParaSailLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:AntlrLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:EbnfLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelEmbeddedLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:RagelLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/parsers.py	/^    tokens = {$/;"	v	class:TreetopBaseLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pascal.py	/^    tokens = {$/;"	v	class:AdaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:PawnLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/pawn.py	/^    tokens = {$/;"	v	class:SourcePawnLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:Perl6Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/perl.py	/^    tokens = {$/;"	v	class:PerlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:PhpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    tokens = {$/;"	v	class:ZephirLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    tokens = {$/;"	v	class:PraatLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:LogtalkLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/prolog.py	/^    tokens = {$/;"	v	class:PrologLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = PythonLexer.tokens.copy()$/;"	v	class:Python3Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:CythonLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:DgLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:Python3TracebackLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    tokens = {$/;"	v	class:PythonTracebackLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/qvt.py	/^    tokens = {$/;"	v	class:QVToLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:RdLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/r.py	/^    tokens = {$/;"	v	class:SLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    tokens = {$/;"	v	class:SparqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rdf.py	/^    tokens = {$/;"	v	class:TurtleLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RebolLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    tokens = {$/;"	v	class:RedLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/resource.py	/^    tokens = {$/;"	v	class:ResourceLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rnc.py	/^    tokens = {$/;"	v	class:RNCCompactLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    tokens = {$/;"	v	class:RoboconfGraphLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/roboconf.py	/^    tokens = {$/;"	v	class:RoboconfInstancesLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:FancyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ruby.py	/^    tokens = {$/;"	v	class:RubyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rust.py	/^    tokens = {$/;"	v	class:RustLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sas.py	/^    tokens = {$/;"	v	class:SASLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:AppleScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:ChaiscriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:EasytrieveLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:HybrisLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:JclLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LSLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:LuaLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MOOCodeLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:MoonScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/scripting.py	/^    tokens = {$/;"	v	class:RexxLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BashLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:BatchLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:FishShellLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:PowerShellLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    tokens = {$/;"	v	class:TcshLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:NewspeakLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smalltalk.py	/^    tokens = {$/;"	v	class:SmalltalkLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/smv.py	/^    tokens = {$/;"	v	class:NuSMVLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/snobol.py	/^    tokens = {$/;"	v	class:SnobolLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PlPgsqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = dict((k, l[:]) for (k, l) in iteritems(PostgresLexer.tokens))$/;"	v	class:PsqlRegexLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:MySqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:PostgresLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:RqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:SqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/sql.py	/^    tokens = {$/;"	v	class:TransactSqlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/stata.py	/^    tokens = {$/;"	v	class:StataLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/supercollider.py	/^    tokens = {$/;"	v	class:SuperColliderLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/tcl.py	/^    tokens = {$/;"	v	class:TclLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:Angular2Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:CheetahLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:ColdfusionMarkupLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:DjangoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:EvoqueLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiMarkupLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:GenshiTextLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:HandlebarsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:JspRootLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:LiquidLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MakoLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MasonLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:MyghtyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:SmartyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TeaTemplateRootLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:TwigLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/templates.py	/^    tokens = {$/;"	v	class:VelocityLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    tokens = {$/;"	v	class:GherkinLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/testing.py	/^    tokens = {$/;"	v	class:TAPLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:AwkLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textedit.py	/^    tokens = {$/;"	v	class:VimLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:GettextLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:HttpLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:IrcLogsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/textfmts.py	/^    tokens = {$/;"	v	class:TodotxtLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:CoqLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:IsabelleLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/theorem.py	/^    tokens = {$/;"	v	class:LeanLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/trafficscript.py	/^    tokens = {$/;"	v	class:RtsLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    tokens = {$/;"	v	class:TypoScriptCssDataLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    tokens = {$/;"	v	class:TypoScriptHtmlDataLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/typoscript.py	/^    tokens = {$/;"	v	class:TypoScriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/urbi.py	/^    tokens = {$/;"	v	class:UrbiscriptLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    tokens = {$/;"	v	class:VCLLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/varnish.py	/^    tokens = {$/;"	v	class:VCLSnippetLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    tokens = {$/;"	v	class:BoogieLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/verification.py	/^    tokens = {$/;"	v	class:SilverLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:CirruLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:DuelLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:QmlLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:SlimLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    tokens = {$/;"	v	class:XQueryLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/whiley.py	/^    tokens = {$/;"	v	class:WhileyLexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    tokens = {$/;"	v	class:X10Lexer
tokens	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/xorg.py	/^    tokens = {$/;"	v	class:XorgLexer
top	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	p	class:results
tox	plugged/ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^[tox]$/;"	s
tpp	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tpp": null,$/;"	z
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {$/;"	o	object:definitions.languageServerBase.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerCommand.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerModule.properties
trace.server	plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerSocket.properties
trace.server	plugged/coc.nvim/src/__tests__/modules/settings.json	/^      "trace.server": "verbose"$/;"	s	object:servers.c
traceback	plugged/vim-wakatime/packages/wakatime/logger.py	/^    def traceback(self, lvl=None):$/;"	m	class:JsonFormatter
transform	plugged/coc.nvim/package.json	/^    "transform": {$/;"	o	object:jest
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transport	plugged/coc.nvim/data/schema.json	/^        "transport": {$/;"	o	object:definitions.languageServerModule.properties
transportPort	plugged/coc.nvim/data/schema.json	/^        "transportPort": {$/;"	o	object:definitions.languageServerModule.properties
trasys	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "trasys": null,$/;"	z
tries	plugged/ale/run-tests.bat	/^set tries=0$/;"	v
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
true_color_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/terminal256.py	/^    def true_color_string(self):$/;"	m	class:EscapeSequence
trustees	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "trustees": null,$/;"	z
truth	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    def truth(self):$/;"	m	class:U32
ts-jest	plugged/coc.nvim/package.json	/^    "ts-jest": "^24.0.1",$/;"	s	object:devDependencies
tsalt	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tsalt": null,$/;"	z
tslib	plugged/coc.nvim/package.json	/^    "tslib": "^1.9.3",$/;"	s	object:dependencies
tslib_1	plugged/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const tslib_1 = require("tslib");$/;"	C
tslint	plugged/coc.nvim/package.json	/^    "tslint": "^5.15.0",$/;"	s	object:devDependencies
tslint.enable	plugged/coc.nvim/src/__tests__/coc-settings.json	/^  "tslint.enable": false$/;"	b
tsscl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tsscl": null,$/;"	z
tssgm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tssgm": null,$/;"	z
tssop	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "tssop": null,$/;"	z
tuple_as_array	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int tuple_as_array;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
turing	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "turing": "Turing",$/;"	s
twig	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "twig": "Twig",$/;"	s
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.filetypes.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.rootPatterns.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerCommand.properties.args.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.args.items
type	plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.execArgv.items
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.filetypes
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.rootPatterns
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerCommand.properties.args
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.args
type	plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.execArgv
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.enable
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.detached
type	plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.shell
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerModule.properties.transportPort
type	plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerSocket.properties.port
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.env
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
type	plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.settings
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.cwd
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.trace.server
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerCommand.properties.command
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.module
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.runtime
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.transport
type	plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerSocket.properties.host
type	plugged/coc.nvim/data/schema.json	/^        "class": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.class
type	plugged/coc.nvim/data/schema.json	/^        "color": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.color
type	plugged/coc.nvim/data/schema.json	/^        "constant": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constant
type	plugged/coc.nvim/data/schema.json	/^        "constructor": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constructor
type	plugged/coc.nvim/data/schema.json	/^        "default": {"type": "string"}$/;"	s	object:properties.suggest.completionItemKindLabels.properties.default
type	plugged/coc.nvim/data/schema.json	/^        "enum": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enum
type	plugged/coc.nvim/data/schema.json	/^        "enumMember": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enumMember
type	plugged/coc.nvim/data/schema.json	/^        "event": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.event
type	plugged/coc.nvim/data/schema.json	/^        "field": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.field
type	plugged/coc.nvim/data/schema.json	/^        "file": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.file
type	plugged/coc.nvim/data/schema.json	/^        "folder": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.folder
type	plugged/coc.nvim/data/schema.json	/^        "function": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.function
type	plugged/coc.nvim/data/schema.json	/^        "interface": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.interface
type	plugged/coc.nvim/data/schema.json	/^        "keyword": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.keyword
type	plugged/coc.nvim/data/schema.json	/^        "method": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.method
type	plugged/coc.nvim/data/schema.json	/^        "module": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.module
type	plugged/coc.nvim/data/schema.json	/^        "operator": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.operator
type	plugged/coc.nvim/data/schema.json	/^        "property": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.property
type	plugged/coc.nvim/data/schema.json	/^        "reference": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.reference
type	plugged/coc.nvim/data/schema.json	/^        "snippet": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.snippet
type	plugged/coc.nvim/data/schema.json	/^        "struct": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.struct
type	plugged/coc.nvim/data/schema.json	/^        "text": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.text
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.rootPatterns.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.around.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.buffer.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.disableSyntaxes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.ignorePatterns.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.triggerCharacters.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.trimSameExts.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.outline.ctagsFilestypes.items
type	plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.ignoredFiletypes.items
type	plugged/coc.nvim/data/schema.json	/^        "typeParameter": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.typeParameter
type	plugged/coc.nvim/data/schema.json	/^        "unit": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.unit
type	plugged/coc.nvim/data/schema.json	/^        "value": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.value
type	plugged/coc.nvim/data/schema.json	/^        "variable": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.variable
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.rootPatterns
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.around.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.buffer.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.disableSyntaxes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.ignorePatterns
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.triggerCharacters
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.trimSameExts
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.ignoredFiletypes
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.bracketEnterImprove
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.colorSupport
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.formatOnType
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.previewAutoClose
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.snippets.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.ignoreHidden
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.codeLens.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.checkCurrentLine
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.displayByAle
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.joinMessageLines
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.locationlist
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshAfterSave
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualText
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.http.proxyStrictSSL
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.autoResize
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.enable
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.hideOnTextChange
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.preferShownAbove
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableKind
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenu
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.echodocSupport
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreview
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.fixInsertedWord
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.keepCompleteopt
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.localityBonus
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.noselect
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.numberSelect
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
type	plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.triggerAfterInsertEnter
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.around.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.buffer.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.file.priority
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.highPrioritySourceLimit
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.lowPrioritySourceLimit
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.timeout
type	plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.triggerCompletionWait
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlightOffset
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.maxWindowHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.signOffset
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.virtualTextLines
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.limitLines
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxPreviewHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.signOffset
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.signature.maxWindowHeight
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.detailMaxLength
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.languageSourcePriority
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxCompleteItemCount
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxPreviewWidth
type	plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.minTriggerInputLength
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerBase
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerModule
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerSocket
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.languageserver
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.insertMappings
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.normalMappings
type	plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.completionItemKindLabels
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.hoverTarget
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.jumpCommand
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.messageLevel
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.snippetStatusText
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.watchmanPath
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.around.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.buffer.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.file.shortcut
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.separator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.enableMessage
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.errorSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.hintSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.infoSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.level
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.messageTarget
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextPrefix
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.warningSign
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxy
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.indicator
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.nextKeymap
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previewHighlightGroup
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previousKeymap
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.selectedSignText
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.signature.target
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.autoTrigger
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.detailField
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.previewIsKeyword
type	plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.snippetIndicator
type	plugged/coc.nvim/package.json	/^    "type": "git",$/;"	s	object:repository
type	plugged/tcomment_vim/addon-info.json	/^    "repository" : {"type": "git", "url": "git:\/\/github.com\/tomtom\/tcomment_vim.git"},$/;"	s	object:repository
type	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
type	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    type = None$/;"	v	class:Heartbeat
type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    type = r'byte|[dq]?word'$/;"	v	class:NasmLexer
type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    type = r'byte|[dq]?word'$/;"	v	class:TasmLexer
typeParameter	plugged/coc.nvim/data/schema.json	/^        "typeParameter": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
typeStartKeywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    typeStartKeywords = [$/;"	v	class:KokaLexer
type_sort	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/__init__.py	/^    def type_sort(t):$/;"	f	function:guess_lexer_for_filename	file:
type_sort	plugged/vim-wakatime/packages/wakatime/stats.py	/^    def type_sort(t):$/;"	f	function:custom_pygments_guess_lexer_for_filename	file:
typeerror	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function typeerror (caller, narg, arg, tname)$/;"	f
typeid	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haxe.py	/^    typeid = r'_*[A-Z]\\w*'$/;"	v	class:HaxeLexer
typeidentifier	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/actionscript.py	/^    typeidentifier = identifier + '(?:\\.<\\w+>)?'$/;"	v	class:ActionScript3Lexer
typekeywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^    typekeywords = [$/;"	v	class:KokaLexer
types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_mql_builtins.py	/^types = ($/;"	v
types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/business.py	/^    types = (r'(?i)(^|(?<=[^\\w\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|'$/;"	v	class:OpenEdgeLexer
types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/igor.py	/^    types = ($/;"	v	class:IgorLexer
types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    types = [$/;"	v	class:NimrodLexer
types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    types = ($/;"	v	class:X10Lexer
typescript	plugged/coc.nvim/package.json	/^    "typescript": "3.3.4000",$/;"	s	object:devDependencies
typescript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "typescript": "TypeScript",$/;"	s
typoscript	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "typoscript": "TypoScript",$/;"	s
tz	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^    tz = build_tzinfo('Australia\/Melbourne',$/;"	v
tz	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzfile.py	/^    tz = build_tzinfo('US\/Eastern',$/;"	v
tz_names	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/windows_tz.py	/^tz_names = win_tz$/;"	v
tz_win	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/windows_tz.py	/^tz_win = {'Africa\/Abidjan': 'Greenwich Standard Time',$/;"	v
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def tzname(self, dt):$/;"	m	class:UTC
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def tzname(self, dt):$/;"	m	class:_FixedOffset
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:FixedOffset
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:LocalTimezone
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def tzname(self, dt):$/;"	m	class:USTimeZone
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
tzname	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def tzname(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
u	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> u           :call b:buffergator_catalog_viewer.rebuild_cat/;"	m
u	plugged/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
u	plugged/vim-wakatime/packages/wakatime/compat.py	/^    def u(text):$/;"	f
u	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    def u(s):$/;"	f
u	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def u(s):$/;"	f
u	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def u(s):$/;"	f
u_prefix	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    u_prefix = ''$/;"	v
u_prefix	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    u_prefix = 'u'$/;"	v
uc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "uc": null,$/;"	z
udevconf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "udevconf": null,$/;"	z
udevperm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "udevperm": null,$/;"	z
udevrules	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "udevrules": null,$/;"	z
uil	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "uil": null,$/;"	z
ulabel	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def ulabel(label):$/;"	f
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
un_ops	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    un_ops = words(('defined', 'not_defined'), suffix=r'(?![\\w#$-])')$/;"	v	class:CrmshLexer
undefined	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	undefined;$/;"	v
underflow	plugged/nvim-miniyank/lua/MessagePack.lua	/^        underflow = function ()$/;"	f
underflow	plugged/nvim-miniyank/lua/MessagePack.lua	/^        underflow = function (self, e)$/;"	f
underscorize	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/nimrod.py	/^    def underscorize(words):$/;"	m	class:NimrodLexer
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unescape	plugged/ultisnips/utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
uni	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^from pygments import unistring as uni$/;"	x
uni	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/haskell.py	/^from pygments import unistring as uni$/;"	x
uni	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/javascript.py	/^import pygments.unistring as uni$/;"	I
uni	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^from pygments import unistring as uni$/;"	x
uni	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^from pygments import unistring as uni$/;"	x
uni_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    uni_name = '[_' + uni.combine('Ll', 'Lt', 'Lm', 'Nl') + ']' + \\$/;"	v	class:VbNetLexer
uni_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/python.py	/^    uni_name = "[%s][%s]*" % (uni.xid_start, uni.xid_continue)$/;"	v	class:Python3Lexer
unichr	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^    unichr = chr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    unichr = unichr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    def unichr(s):$/;"	f
unichr	plugged/vim-wakatime/packages/wakatime/packages/simplejson/compat.py	/^    unichr = unichr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    unichr = chr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    unichr = unichr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    unichr = chr$/;"	v
unichr	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    unichr = unichr$/;"	v
unicode	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^    unicode = str$/;"	v
unicode	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    unicode = str$/;"	v
unicode_delimiters	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/markup.py	/^    unicode_delimiters = u'\\u2010\\u2011\\u2012\\u2013\\u2014\\u00a0'$/;"	v	class:RstLexer
unicode_is_ascii	plugged/vim-wakatime/packages/wakatime/packages/requests/_internal_utils.py	/^def unicode_is_ascii(u_string):$/;"	f
unicodeoutput	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatter.py	/^    unicodeoutput = True$/;"	v	class:Formatter
unicodeoutput	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/img.py	/^    unicodeoutput = False$/;"	v	class:ImageFormatter
unicodeoutput	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^    unicodeoutput = False$/;"	v	class:RawTokenFormatter
uninstall	plugged/javascript-libraries-syntax.vim/Makefile	/^uninstall: uninstall-files rmrecord$/;"	t
uninstall-files	plugged/javascript-libraries-syntax.vim/Makefile	/^uninstall-files:$/;"	t
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix='', prefix=''):$/;"	m	class:TempFileManager
unirange	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^def unirange(a, b):$/;"	f
unit	plugged/coc.nvim/data/schema.json	/^        "unit": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define()$/;"	f
unlink_file	plugged/javascript-libraries-syntax.vim/Makefile	/^unlink_file = \\$/;"	m
unpack_array	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_array (c, n)$/;"	f
unpack_cursor	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_cursor (c)$/;"	f
unpack_double	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_double (c)$/;"	f
unpack_ext	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_ext (c, n, tag)$/;"	f
unpack_float	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_float (c)$/;"	f
unpack_int16	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_int16 (c)$/;"	f
unpack_int32	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_int32 (c)$/;"	f
unpack_int64	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_int64 (c)$/;"	f
unpack_int8	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_int8 (c)$/;"	f
unpack_map	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_map (c, n)$/;"	f
unpack_str	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_str (c, n)$/;"	f
unpack_uint16	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_uint16 (c)$/;"	f
unpack_uint32	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_uint32 (c)$/;"	f
unpack_uint64	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_uint64 (c)$/;"	f
unpack_uint8	plugged/nvim-miniyank/lua/MessagePack.lua	/^local function unpack_uint8 (c)$/;"	f
unpickler	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^def unpickler(zone, utcoffset=None, dstoffset=None, tzname=None):$/;"	f
unprefixedname	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    unprefixedname = ncname$/;"	v	class:XQueryLexer
unquote_header_value	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def unquote_header_value(value, is_filename=False):$/;"	f
unquote_unreserved	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def unquote_unreserved(uri):$/;"	f
unregister	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def unregister(self, fileobj):$/;"	m	class:EpollSelector
unregister	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def unregister(self, fileobj):$/;"	m	class:KqueueSelector
unregister	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def unregister(self, fileobj):$/;"	m	class:PollSelector
unregister	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^        def unregister(self, fileobj):$/;"	m	class:SelectSelector
unregister	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/selectors.py	/^    def unregister(self, fileobj):$/;"	m	class:BaseSelector
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unserialized	plugged/php.vim/attic/20-generate.php	/^    $unserialized = unserialize($line, ['allowed_classes' => false]);$/;"	v
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unverifiable	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def unverifiable(self):$/;"	m	class:MockRequest
unwrap	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def unwrap(self, message, signature):$/;"	m	class:SessionSecurity
update	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	update: function(){$/;"	m	class:jQuery.fx
update	plugged/javascript-libraries-syntax.vim/Makefile	/^update:$/;"	t
update	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    def update(self, attrs):$/;"	m	class:Heartbeat
update	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/rc4.py	/^    def update(self, value):$/;"	m	class:ARC4
update	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    update = DictMixin.update$/;"	v	class:OrderedDict
update	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def update(self, other):$/;"	m	class:RequestsCookieJar
update	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    update = DictMixin.update$/;"	v	class:OrderedDict
update	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def update(*args, **kwds):$/;"	m	class:OrderedDict
update_consts	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    def update_consts(filename, constname, content):$/;"	f
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_myself	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_postgres_builtins.py	/^    def update_myself():$/;"	f
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
updatedb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "updatedb": null,$/;"	z
upper	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    upper = (u'[A-Z\\\\$_\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108'$/;"	v	class:ScalaLexer
url	plugged/coc.nvim/package.json	/^    "url": "git+https:\/\/github.com\/neoclide\/coc.nvim.git"$/;"	s	object:repository
url	plugged/coc.nvim/package.json	/^    "url": "https:\/\/github.com\/neoclide\/coc.nvim\/issues"$/;"	s	object:bugs
url	plugged/tcomment_vim/addon-info.json	/^    "repository" : {"type": "git", "url": "git:\/\/github.com\/tomtom\/tcomment_vim.git"},$/;"	s	object:repository
url	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
url	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^    def url(self):$/;"	m	class:Url
url_attrs	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/url.py	/^url_attrs = ['scheme', 'auth', 'host', 'port', 'path', 'query', 'fragment']$/;"	v
urldefragauth	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^def urldefragauth(url):$/;"	f
urlfetch	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    urlfetch = None$/;"	v
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^    def urlopen(self, method, url, body=None, headers=None, retries=None,$/;"	m	class:HTTPConnectionPool
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/appengine.py	/^    def urlopen(self, method, url, body=None, headers=None,$/;"	m	class:AppEngineManager
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/ntlmpool.py	/^    def urlopen(self, method, url, body=None, headers=None, retries=3,$/;"	m	class:NTLMConnectionPool
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def urlopen(self, method, url, redirect=True, **kw):$/;"	m	class:PoolManager
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/poolmanager.py	/^    def urlopen(self, method, url, redirect=True, **kw):$/;"	m	class:ProxyManager
urlopen	plugged/vim-wakatime/packages/wakatime/packages/urllib3/request.py	/^    def urlopen(self, method, url, body=None, headers=None,$/;"	m	class:RequestMethods
use_decimal	plugged/vim-wakatime/packages/wakatime/packages/simplejson/_speedups.c	/^    int use_decimal;$/;"	m	struct:_PyEncoderObject	typeref:typename:int	file:
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
use_root_language	plugged/vim-wakatime/packages/wakatime/stats.py	/^def use_root_language(language, lexer):$/;"	f
userAgent	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var userAgent = navigator.userAgent.toLowerCase();$/;"	v
user_agent	plugged/vim-wakatime/packages/wakatime/heartbeat.py	/^    user_agent = None$/;"	v	class:Heartbeat
user_defined_opcodes	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/csound.py	/^    user_defined_opcodes = set()$/;"	v	class:CsoundOrchestraLexer
using	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^def using(_other, **kwargs):$/;"	f
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:UTC
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    def utcoffset(self, dt):$/;"	m	class:_FixedOffset
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:FixedOffset
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:LocalTimezone
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/reference.py	/^    def utcoffset(self, dt):$/;"	m	class:USTimeZone
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:DstTzInfo
utcoffset	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    def utcoffset(self, dt, is_dst=None):$/;"	m	class:StaticTzInfo
uts46_remap	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def uts46_remap(domain, std3_rules=True, transitional=False):$/;"	f
uts46data	plugged/vim-wakatime/packages/wakatime/packages/idna/uts46data.py	/^uts46data = tuple($/;"	v
uuid	plugged/coc.nvim/package.json	/^    "uuid": "^3.3.2",$/;"	s	object:dependencies
uuid	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
v	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> v <NOP>$/;"	m
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/U32.py	/^    v = 0$/;"	v	class:U32
val	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, ret, fn = jQuery.isFunction( elem[ type ] || null ),$/;"	v
val	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var val, ret, namespace, all, handlers;$/;"	v
val	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_bmp[cat]))$/;"	v
val	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^            val = u''.join(_handle_runs(categories_nonbmp[cat]))$/;"	v
val_qual	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    val_qual = (r'(?:string|version|number)')$/;"	v	class:CrmshLexer
valgrind	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "valgrind": null,$/;"	z
validName	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/elm.py	/^    validName = r'[a-z_][a-zA-Z_\\']*'$/;"	v	class:ElmLexer
validName	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/j.py	/^    validName = r'\\b[a-zA-Z]\\w*'$/;"	v	class:JLexer
valid_contextj	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def valid_contextj(label, pos):$/;"	f
valid_contexto	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def valid_contexto(label, pos, exception=False):$/;"	f
valid_label_length	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def valid_label_length(label):$/;"	f
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dsls.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:FlatlineLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dylan.py	/^    valid_name = '\\\\\\\\?[\\\\w!&*<>|^$%@\\\\-+~?\/=]+'$/;"	v	class:DylanLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    valid_name = r"%s+%s" % (valid_name_chars, delimiter_end)$/;"	v	class:ForthLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    valid_name = r"%s+%s" % (valid_name_chars, delimiter_end)$/;"	v	class:PostScriptLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/jvm.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:ClojureLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_name = '%s+' % valid_symbol_chars$/;"	v	class:ShenLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_name = r'(?!#)[\\w!$%*+<=>?\/.#-]+'$/;"	v	class:HyLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_name = r'([\\w!$%&*+.,\/<=>?@^~|-])+|(\\[.*?\\])+'$/;"	v	class:NewLispLexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_name = r'[\\w!$%&*+,\/:<=>?@^~|-]+'$/;"	v	class:CPSALexer
valid_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_name = r'[\\w!$%&*+,\/:<=>?@^~|-]+'$/;"	v	class:SchemeLexer
valid_name_chars	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/forth.py	/^    valid_name_chars = r'[^%s]' % delimiter$/;"	v	class:ForthLexer
valid_name_chars	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/graphics.py	/^    valid_name_chars = r'[^%s]' % delimiter$/;"	v	class:PostScriptLexer
valid_scheme_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_scheme_name = r'[\\w!$%&*+,\/:<=>?@^~|-]+'$/;"	v	class:XtlangLexer
valid_string_length	plugged/vim-wakatime/packages/wakatime/packages/idna/core.py	/^def valid_string_length(label, trailing_dot):$/;"	f
valid_symbol_chars	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_symbol_chars = r'[\\w!$%*+,<=>?\/.\\'@&#:-]'$/;"	v	class:ShenLexer
valid_xtlang_name	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_xtlang_name = r'[\\w.!-]+'$/;"	v	class:XtlangLexer
valid_xtlang_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    valid_xtlang_type = r'[]{}[\\w<>,*\/|!-]+'$/;"	v	class:XtlangLexer
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
value	plugged/coc.nvim/data/schema.json	/^        "value": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
value_getter	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^            value_getter = lambda option: d[option]$/;"	f	member:RawConfigParser.items	file:
value_getter	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^        value_getter = lambda option: self._interpolation.before_get(self,$/;"	f	member:RawConfigParser.items	file:
values	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						values = [],$/;"	v
values	plugged/vim-wakatime/packages/wakatime/packages/ordereddict.py	/^    values = DictMixin.values$/;"	v	class:OrderedDict
values	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/x10.py	/^    values = ($/;"	v	class:X10Lexer
values	plugged/vim-wakatime/packages/wakatime/packages/requests/cookies.py	/^    def values(self):$/;"	m	class:RequestsCookieJar
values	plugged/vim-wakatime/packages/wakatime/packages/simplejson/ordered_dict.py	/^    values = DictMixin.values$/;"	v	class:OrderedDict
values	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def values(self):$/;"	m	class:OrderedDict
valuestodict	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^def valuestodict(key):$/;"	f
variable	plugged/coc.nvim/data/schema.json	/^        "variable": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
variable	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    variable = r'[A-Z]%s*' % valid_symbol_chars$/;"	v	class:ShenLexer
variable_qualifiers	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    variable_qualifiers = set(('__device__', '__constant__', '__shared__',$/;"	v	class:CudaLexer
variable_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    variable_re = r'(?:[A-Z_]\\w*)'$/;"	v	class:ErlangLexer
variables	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    variables = set(($/;"	v	class:ArduinoLexer
variables	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    variables = set(('gridDim', 'blockIdx', 'blockDim', 'threadIdx', 'warpSize'))$/;"	v	class:CudaLexer
variables_kw	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_scilab_builtins.py	/^variables_kw = ($/;"	v
variables_numeric	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    variables_numeric = ($/;"	v	class:PraatLexer
variables_string	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/praat.py	/^    variables_string = ($/;"	v	class:PraatLexer
vb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vb": "VB.net",$/;"	s
vb.net	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "vb.net": "VB.net",$/;"	s
vector_types	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/c_like.py	/^    vector_types = set(('char1', 'uchar1', 'char2', 'uchar2', 'char3', 'uchar3',$/;"	v	class:CudaLexer
vera	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vera": null,$/;"	z
verbs	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/shell.py	/^    verbs = ($/;"	v	class:PowerShellLexer
verify_mode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def verify_mode(self):$/;"	m	class:PyOpenSSLContext
verify_mode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def verify_mode(self, value):$/;"	m	class:PyOpenSSLContext
verify_mode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def verify_mode(self):$/;"	m	class:SecureTransportContext
verify_mode	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def verify_mode(self, value):$/;"	m	class:SecureTransportContext
verilog	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "verilog": null,$/;"	z
verilogams	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "verilogams": null,$/;"	z
version	plugged/coc.nvim/bin/server.js	/^const version = process.version.replace('v', '')$/;"	C
version	plugged/coc.nvim/package.json	/^  "version": "0.0.65",$/;"	s
version	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^  "version": "0.0.1",$/;"	s
version	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	version: (userAgent.match( \/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/ ) || [])[1],$/;"	p	class:jQuery.browser
version	plugged/javascript-libraries-syntax.vim/Makefile	/^version:$/;"	t
version	plugged/tcomment_vim/addon-info.json	/^    "version" : "dev",$/;"	s
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
version	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/_sourcemod_builtins.py	/^        version = 'Mozilla\/5.0 (Pygments Sourcemod Builtins Update)'$/;"	v	class:Opener
version	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^version = platform.mac_ver()[0]$/;"	v
version_info	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/_securetransport/bindings.py	/^version_info = tuple(map(int, version.split('.')))$/;"	v
versions	plugged/php.vim/attic/20-generate.php	/^    $versions = array_merge($versions, $collected['versions']);$/;"	v
versions	plugged/php.vim/attic/20-generate.php	/^$versions = [];$/;"	v
versions	plugged/php.vim/attic/20-generate.php	/^$versions = array_unique($versions);$/;"	v
vgrindefs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vgrindefs": null,$/;"	z
vhdl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vhdl": null,$/;"	z
viewitems	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewitems = operator.methodcaller("items")$/;"	v
viewitems	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewitems = operator.methodcaller("viewitems")$/;"	v
viewitems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def viewitems(self):$/;"	m	class:OrderedDict
viewitems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewitems = operator.methodcaller("items")$/;"	v
viewitems	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewitems = operator.methodcaller("viewitems")$/;"	v
viewkeys	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewkeys = operator.methodcaller("keys")$/;"	v
viewkeys	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewkeys = operator.methodcaller("viewkeys")$/;"	v
viewkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def viewkeys(self):$/;"	m	class:OrderedDict
viewkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewkeys = operator.methodcaller("keys")$/;"	v
viewkeys	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewkeys = operator.methodcaller("viewkeys")$/;"	v
viewvalues	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewvalues = operator.methodcaller("values")$/;"	v
viewvalues	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    viewvalues = operator.methodcaller("viewvalues")$/;"	v
viewvalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/ordered_dict.py	/^    def viewvalues(self):$/;"	m	class:OrderedDict
viewvalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewvalues = operator.methodcaller("values")$/;"	v
viewvalues	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    viewvalues = operator.methodcaller("viewvalues")$/;"	v
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vim": "VimL",$/;"	s
vim plugins for HTML and CSS hi-speed coding.	plugged/emmet-vim/docs/index.html	/^	<h2>vim plugins for HTML and CSS hi-speed coding.<\/h2>$/;"	i
vim-blade	plugged/vim-blade/README.md	/^# vim-blade #$/;"	c
vim-javascript	plugged/vim-javascript/README.md	/^# vim-javascript$/;"	c
vim-smooth-scroll	plugged/vim-smooth-scroll/README.md	/^# vim-smooth-scroll$/;"	c
vim-startify	plugged/vim-devicons/DEVELOPER.md	/^##### vim-startify$/;"	T
vim-vue [![CircleCI](https://img.shields.io/circleci/project/github/posva/vim-vue.svg)](https://circleci.com/gh/posva/vim-vue)	plugged/vim-vue/readme.md	/^# vim-vue [![CircleCI](https:\/\/img.shields.io\/circleci\/project\/github\/posva\/vim-vue.svg)]/;"	c
vim-wakatime	plugged/vim-wakatime/README.md	/^# vim-wakatime$/;"	c
vim2lua	plugged/nvim-miniyank/lua/miniyank.lua	/^local function vim2lua(l)$/;"	f
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_snippets#Filename	plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vimball	plugged/javascript-libraries-syntax.vim/Makefile	/^vimball:$/;"	t
vimball-edit	plugged/javascript-libraries-syntax.vim/Makefile	/^vimball-edit:$/;"	t
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define()$/;"	f
viminfo	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "viminfo": null,$/;"	z
viml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "viml": "VimL",$/;"	s
virata	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "virata": null,$/;"	z
virtual_position	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def virtual_position(line, col):$/;"	f
visibility	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = nam/;"	p	class:AnonymousFunctionc5b93c5c2700.props
vmasm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vmasm": null,$/;"	z
voscm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "voscm": null,$/;"	z
vrml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vrml": null,$/;"	z
vscode	plugged/coc.nvim/src/__tests__/extensions/snippet-sample/package.json	/^    "vscode": "^1.11.0"$/;"	s	object:engines
vscode-languageserver	plugged/coc.nvim/package.json	/^    "vscode-languageserver": "^5.3.0-next.1"$/;"	s	object:devDependencies
vscode-languageserver-protocol	plugged/coc.nvim/package.json	/^    "vscode-languageserver-protocol": "^3.15.0-next.1",$/;"	s	object:dependencies
vscode-languageserver-types	plugged/coc.nvim/package.json	/^    "vscode-languageserver-types": "^3.14.0",$/;"	s	object:dependencies
vscode-uri	plugged/coc.nvim/package.json	/^    "vscode-uri": "^1.0.6",$/;"	s	object:dependencies
vscode_languageserver_1	plugged/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const vscode_languageserver_1 = require("vscode-languageserver");$/;"	C
vsejcl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "vsejcl": null,$/;"	z
wS	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wS          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wV	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wV          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wait_for_read	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/wait.py	/^def wait_for_read(socks, timeout=None):$/;"	f
wait_for_write	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/wait.py	/^def wait_for_write(socks, timeout=None):$/;"	f
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCommonCharacters
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCrash
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestNoSubstring
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ' :latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = '123 simple 123 expand 123 456'$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abc simple expand'$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple 123 expand 123 456'$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple expand'$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = '[ [ bar ] ] done M1U1'$/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered\\na'$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'if var == nil: pass\\n='$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_BS
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Jump
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Type
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_JustNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_StartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello \\t \\nGoodbye"""$/;"	v	class:LeaveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello\\nGoodbye"""$/;"	v	class:RemoveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\n\\tshould be empty"""$/;"	v	class:TrimSpacesAtEndOfLines
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\t\\n\\tshould be empty"""$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'oouu success b'$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü hello üü hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü hüüll üü aaaaa'$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü more text üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü world üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü world üü more textßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üüüüüßßßßmore text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'ööuu success b'$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = 'superkallifragilistik\\nsuperkallifragilistik some more ' \\$/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'completion1 foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'foo completion1'$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'b'$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = '{ < a > }'$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = r"""$/;"	v	class:ContextSnippets_SnippetPriority
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ''$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = '''\\$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'a b c\\na\\nb\\nc\\n\\nshallnot'$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'aaaaa()3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'end'$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'first line\\n\\n\\ntest\\n\\n\\nthird line'$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello upsi Hello\\naaa upsi bbb\\nWorld'$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello'$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello\\nend'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello\\nendworld'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if :\\n\\t'$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if a: test'$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if:\\n\\t'$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if:\\n\\ti'$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'world'$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!'$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo We'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo Welt!'$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt\\n\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'SimpleText' + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt! gehts'$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehts gehts'$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'na du Hallo Welt!and blub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '  world hello;blub'$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\nblah\\nhello world '$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\t\\t\\tpadding: 2px'$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\tfoo'$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = 'hello'$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = 'yank HELLO world yank'$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = """Hello {{{$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = '# hi  {{{\\n\\n# End: hi  }}}'$/;"	v	class:FoldOverwrite_Simple_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = '# hi  {{{\\n\\n# End: hi  }}}'$/;"	v	class:Fold_DeleteMiddleLine_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = 'package c03;\\nsub junk {}\\n1;'$/;"	v	class:PerlSyntaxFold
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    for\\n        blahHui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    hui\\n    blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    huiblah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '   Blaahblah \\t\\t  '$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '   Something\\n        Hallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '#include <cstdlib>'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '#include <foo>'$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = 'This is a longer\\ntext that should\\nwrap as\\nformatoptions are\\nenabled\\n' + /;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = \\$/;"	v	class:FOTextAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = \\$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = \\$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """        hi World End"""$/;"	v	class:PythonCode_IndentProblem
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """    hi$/;"	v	class:PythonCode_IndentEtSwOffset
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentEtSw
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentNoetSwTs
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShift
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShiftMethods
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendSimpleIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_ResetIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_SimpleMkline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first second (placeholder: ))$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first)$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi no End"""$/;"	v	class:PythonCode_OptNoExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi nothing test End"""$/;"	v	class:PythonCode_Locals
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi yes End"""$/;"	v	class:PythonCode_OptExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    hi 4 End'$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCode_MultilineIndented
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '$hi'$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo now Hallo Welt endand more'$/;"	v	class:TabStop_Shell_ShebangPython
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo now fromecho endand more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo overwrite endand more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'OKAYhokayoOKAY'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'blah'$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'h5b'$/;"	v	class:Python_WeirdScoping_Error
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hVhello\\nnice\\nworld\\nb'$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hbabc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2 End'$/;"	v	class:PythonCode_SimpleAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2\\nHallo3 End'$/;"	v	class:PythonCode_MultiAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi New End'$/;"	v	class:PythonCode_UseNewOverOld
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi hallo you!and more'$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi hallo\\nWeiterand more'$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi höüäh you!and more'$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 100 * '\\n' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hiEnd'$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hvblablubb'$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ups egal hi hi'$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = ' BLAAH'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'BLAAH'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo BLAAH'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo TEST ONE'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo qualleHi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = '} BLAAH'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = """for(size_t a_variable = 0; a_variable < 100; a_variable *= 2)$/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = '    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'Vorne hallo test Hinten\\nhallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'Vorne hallo\\nhallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'a a a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blah hi hulla end hu hi hub hulla'$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blub blub'$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blub blub.h'$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha defa\\ndefa'$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha default value default value\\nanother: default value mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin do snap stdin.h do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin snip stdin.h snip'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin stdin.h stdin.c\\ntest stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin stdinend'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha world world\\nanother: world mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha world\\nworld'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hal\\nhal'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'halhups\\nhalhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Hinten\\nhallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo du hallo du hallo du hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo du\\nwie gehts hallo du\\nwie gehts hallo du\\nwie gehts' \\$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch ahiuch_end'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch auchih_end'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch hinoauch_end'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch noauchab_end'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo welt\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo weltelt '$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nVorne hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nagain\\nhallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nhallo Hinten'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nhallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'this is it this is it this is it'$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ups hallo hallo blah'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = '<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend'$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab blub tab ' + JF + 'hallothis'$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo this'$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab\\nblub this\\n' + JF + 'testhallo'$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello' + JF + 'hallo tab blub this'$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'text'$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'thhallo\\nweltis thhallo\\nweltis'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'this is something\\nvery nice\\nnot ' \\$/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + 'hallo\\nhello tab\\nblub this'$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case1'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test snippet!'$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is another test.'$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is yet another test.'$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'abc az test'$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'foo-bar test bar\\t\\nfoo-bar test'$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 're-test'$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'This is a test.'$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'x a bob b y\\nx a jon b y'$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'x first a bob b y'$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = 'longtextlongtext\\nlongtextlongtext\\nHello'$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A A AB B C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A A C CD D DE E B again B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n        hi\\n    M END -> hallo\\n' \\$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n        hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    hallo M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\nM START\\n\\nM END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend'$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ JST  JSThi ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ JST JSThi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ Just some Texthi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] hallo ]ups world ]end'$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] sec ] hallo ]end'$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ a hallo ]ups world ]end'$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ a sec ] hallo ]world'$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  sec ]  world ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  world ]  sec ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  world ]ups  end ]'$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ one three three two ] four ]end'$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ one three two ] four ]end'$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello\\n[ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello\\nhello again [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'form_for user, namespace: some_namespace, html: {(id: |class: |title:  )d: '$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:OldSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">not<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">some<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """\/*$/;"	v	class:snipMate_Issue658
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a stand alone snippet\\nThis is two stand alone snippet\\nThree'$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a test snippet'$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a test snippet\\n# With a comment'$/;"	v	class:snipMate_SimpleSnippet
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blah'$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub is blah'$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub is blub, blah is blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub\\n\\nblah\\n'$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'for (j; j < blub; blub++) {\\n\\thi\\n}'$/;"	v	class:snipMate_TestMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'h$${2:blub}$$hi'$/;"	v	class:snipMate_NoNestedTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hblablubb'$/;"	v	class:snipMate_Visual_Simple
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hello' + EX + '\\nworked'$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hello' + EX$/;"	v	class:snipMate_Disabled
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'lac03lu'$/;"	v	class:snipMate_Interpolation
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'laöäülu'$/;"	v	class:snipMate_InterpolationWithSystem
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'two'$/;"	v	class:snipMate_MultiMatches
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'ultisnips'$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_CanModifyParentBody
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_EnsureIndent
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_MoveVisual
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1 {$/;"	v	class:SnippetActions_UseCorrectJumpActions
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1, 2"""$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """debug(test(some(complex(cond(a)))))$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if not blah: pass"""$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if some_check(1, 2, 3) or 4: 5"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """import smthing$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some context$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some_wrapper(wrapme(2, 1)3): 4"""$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """totally_different(2, 1)3"""$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '1: 1\\n2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '[(1)2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '\\nabc'$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = 'abc\\n'$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = 'def123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = """\\t\\thi$/;"	v	class:No_Tab_Expand_RealWorld
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = ' self.'$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '$Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '-Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '[[Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a(Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'abc test Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'self.'$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'test No match'$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'test fedcab'$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'ßßExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'Hallo'$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'Should only expand in p.\\ntest' + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite\\nNo overwrite'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'again'$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div allaway>\\n  Third Last\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div blah>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="no">\\n  End\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="some_id">\\n  \\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="yes">\\n  Begin Hi\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<divSomethingElse>\\n  Nupl  Nox\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """halongertextblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haoverwriteblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haupsblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hoverwritelEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hupslEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require('WORLD')End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'Hallo haselnhipsut upsend'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'Hallo: Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'This \\\\ is a backslash!'$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '[ HelloWorld ] Hello'$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '\\n${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'a${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'each_byte { |byte| Blah }'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'echo Hallo'$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Blah Lets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Blah mitteLets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Du Nase na'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Hi' + 2 * JF + 'du Test'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Test Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Test mitte BeginningHi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo na Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi  Nothing  Nothing world'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Blah Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Nothing Nothing world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Nothing world'$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this Hallo Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this second Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this second second'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip '$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip default'$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip i'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'nothing ship hups'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'snip $0 $hi end'$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'snip ` literal'$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'test hallo one more' + JF + '\\nnice world work\\n' \\$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'test run'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'tt\\nt{\\n\\tt\\n}'$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'usage: `basename $0` [ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'world = require(WORLD)End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = '* test\\n* test\\n* test'$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'HALLO hallo'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'Hallo hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'SomE tExt SOME TEXT \\nsome text '$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'TEST blah'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a b  c d e f ghhh h oha a b  c d e f ghhh h...'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a some more text began with an a'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a some yes'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a, nice,   building a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a, nice, building a-nice-building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'aa yes:no)'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'aa yes\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'ab no\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'b some no'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'dead parrot this parrot is a bit dead'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'foo boo aoo foo bull aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo .\\nhallo- >\\nhallo-> '$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo HALLO'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo Hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo foo boy hallo batzl boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo is somethingb'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo is somethingmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH ahiuchauch_end'$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH auchauchih_end'$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH hinoauchnoauch_end'$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH noauchnoauchab_end'$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip  '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip  m2  hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip m1  hi '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip matched hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'sometext defined sometext'$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'sometext overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, hallo test\\nhallo'$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, hallo test\\thallo'$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, halul test, ha(ul)'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR'$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur'$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi;$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'abc simple expand'$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'simple expand'$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'test41123\\'êabc0'$/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = ($/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = '\\tbhlablbub'$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone'$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'bhlablubb'$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'bla hblub\\n  hellobi'$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hHELLO\\n NICE\\n WORLDb'$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hWORLDbhi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'h\/\/ bodybhi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbabc'$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbefHELLO\\n    NICE\\n    WORLDaftbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbefhello\\n    nice\\n    worldaftbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbeforeahello\\n\\tnice\\n\\tworldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablub\\nb'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb\\nhb'$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubbblabluba'$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubbhello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hhello\\n nice\\n worldb'$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hhellob'$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hnblablub\\nmmmbdone'$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hupsbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hworldbhi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}'$/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'xxxhyyybyxxx'$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'xxxhyyyybxxx'$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ''$/;"	v	class:VimTestCase
watch	plugged/coc.nvim/package.json	/^    "watch": "tsc -p tsconfig.json --watch true --sourceMap",$/;"	s	object:scripts
watchman	plugged/coc.nvim/package.json	/^    "watchman": false,$/;"	b	object:jest
wddx	plugged/php.vim/attic/syntax.ini	/^wddx = yes$/;"	k	section:extensions
wdiff	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wdiff": null,$/;"	z
web	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "web": null,$/;"	z
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#pluginHome	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#pluginHome()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filetype$/;"	a
webmacro	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "webmacro": null,$/;"	z
webpack	plugged/coc.nvim/webpack.config.js	/^const webpack = require('\/Users\/chemzqm\/.config\/yarn\/global\/node_modules\/webpack')$/;"	C
wget	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wget": null,$/;"	z
whats	plugged/emmet-vim/docs/index.html	/^			<article id="whats">$/;"	I
where	plugged/vim-wakatime/packages/wakatime/packages/certifi/core.py	/^def where():$/;"	f
which	plugged/coc.nvim/package.json	/^    "which": "^1.3.1"$/;"	s	object:dependencies
widthQual	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    widthQual = r'(width\\((\\d+|all)\\))'$/;"	v	class:HsailLexer
win1250HungarianCharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langhungarianmodel.py	/^win1250HungarianCharToOrderMap = ($/;"	v
win1251BulgarianCharToOrderMap	plugged/vim-wakatime/packages/wakatime/packages/chardet/langbulgarianmodel.py	/^win1251BulgarianCharToOrderMap = ($/;"	v
win1251_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langcyrillicmodel.py	/^win1251_char_to_order_map = ($/;"	v
win1253_char_to_order_map	plugged/vim-wakatime/packages/wakatime/packages/chardet/langgreekmodel.py	/^win1253_char_to_order_map = ($/;"	v
win_tz	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/windows_tz.py	/^win_tz = {'AUS Central Standard Time': 'Australia\/Darwin',$/;"	v
winbatch	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "winbatch": null,$/;"	z
window	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			window[ jsonp ] = function(tmp){$/;"	f	function:AnonymousFunctionc5b93c5ca100
windowData	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	v
winreg	plugged/vim-wakatime/packages/wakatime/packages/requests/utils.py	/^            import _winreg as winreg$/;"	I	function:proxy_bypass_registry	file:
winreg	plugged/vim-wakatime/packages/wakatime/packages/tzlocal/win32.py	/^    import _winreg as winreg$/;"	I
with_metaclass	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^def with_metaclass(meta, *bases):$/;"	f
with_metaclass	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^def with_metaclass(meta, *bases):$/;"	f
withinElement	plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var withinElement = function(event, elem) {$/;"	f
wml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wml": null,$/;"	z
wombat	plugged/lightline.vim/README.md	/^### wombat$/;"	S
word_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RebolLexer
word_callback	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/rebol.py	/^    def word_callback(lexer, match):$/;"	m	class:RedLexer
word_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/dotnet.py	/^    word_operators = ['and', 'or', 'not']$/;"	v	class:FSharpLexer
word_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/erlang.py	/^    word_operators = ($/;"	v	class:ErlangLexer
word_operators	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/ml.py	/^    word_operators = ('and', 'asr', 'land', 'lor', 'lsl', 'lxor', 'mod', 'or')$/;"	v	class:OcamlLexer
wordop	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    wordop = r'seg|wrt|strict'$/;"	v	class:NasmLexer
wordop	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/asm.py	/^    wordop = r'seg|wrt|strict'$/;"	v	class:TasmLexer
words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexer.py	/^class words(Future):$/;"	c
workspace.ignoredFiletypes	plugged/coc.nvim/data/schema.json	/^    "workspace.ignoredFiletypes": {$/;"	o	object:properties
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrap	plugged/vim-wakatime/packages/wakatime/packages/ntlm_auth/session_security.py	/^    def wrap(self, message):$/;"	m	class:SessionSecurity
wrap	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/html.py	/^    def wrap(self, source, outfile):$/;"	m	class:HtmlFormatter
wrap_module	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^def wrap_module(module):$/;"	f
wrap_socket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/pyopenssl.py	/^    def wrap_socket(self, sock, server_side=False,$/;"	m	class:PyOpenSSLContext
wrap_socket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/contrib/securetransport.py	/^    def wrap_socket(self, sock, server_side=False,$/;"	m	class:SecureTransportContext
wrap_socket	plugged/vim-wakatime/packages/wakatime/packages/urllib3/util/ssl_.py	/^        def wrap_socket(self, socket, server_hostname=None, server_side=False):$/;"	m	class:SSLContext
wrapmodule	plugged/vim-wakatime/packages/wakatime/packages/socks.py	/^wrapmodule = wrap_module$/;"	v
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/configparser/helpers.py	/^        def wrapper(self):$/;"	f	function:recursive_repr.decorating_function	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    def wrapper(cls):$/;"	f	function:add_metaclass	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        def wrapper(f):$/;"	f	function:wraps	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def wrapper(cls):$/;"	f	function:add_metaclass	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        def wrapper(f):$/;"	f	function:wraps	file:
wrapper	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def wrapper(cls):$/;"	f	function:add_metaclass	file:
wraps	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^    def wraps(wrapped, assigned=functools.WRAPPER_ASSIGNMENTS,$/;"	f
wraps	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^    def wraps(wrapped, assigned=functools.WRAPPER_ASSIGNMENTS,$/;"	f
write	plugged/nvim-miniyank/lua/miniyank.lua	/^local function write(fn,data)$/;"	f
write	plugged/vim-wakatime/packages/wakatime/packages/configparser/__init__.py	/^    def write(self, fp, space_around_delimiters=True):$/;"	m	class:RawConfigParser
write	plugged/vim-wakatime/packages/wakatime/packages/pygments/formatters/other.py	/^            def write(text):$/;"	f	member:RawTokenFormatter.format	file:
write	plugged/vim-wakatime/packages/wakatime/packages/six.py	/^        def write(data):$/;"	f	function:print_	file:
write	plugged/vim-wakatime/packages/wakatime/packages/urllib3/packages/six.py	/^        def write(data):$/;"	f	function:print_	file:
writeSync	plugged/coc.nvim/bin/tsserverForkStart.js	/^    fs.writeSync = function (\/\/ tslint:disable-line$/;"	f	function:fs
write_snippets	plugged/ultisnips/utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
writer	plugged/vim-wakatime/packages/wakatime/packages/urllib3/filepost.py	/^writer = codecs.lookup('utf-8')[3]$/;"	v
ws	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> ws          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wsh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wsh": null,$/;"	z
wsml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wsml": null,$/;"	z
wv	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> wv          :call b:buffergator_catalog_viewer.visit_targe/;"	m
wvdial	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "wvdial": null,$/;"	z
x	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> x :call far#change_exclude_under_cursor(1)<cr>$/;"	m
x	plugged/far.vim/autoload/far.vim	/^    vnoremap <buffer><silent> x :call far#change_exclude_under_cursor(1)<cr>$/;"	m
x	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> x           :<C-U>call b:buffergator_catalog_viewer.delete/;"	m
x	plugged/vim-buffergator/autoload/buffergator.vim	/^            noremap <buffer> <silent> x           :call b:buffergator_catalog_viewer.delete_targ/;"	m
x	plugged/vim-wakatime/packages/wakatime/packages/pygments/console.py	/^x = 30$/;"	v
xaml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "xaml": "XAML",$/;"	s
xbl	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xbl": null,$/;"	z
xdefaults	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xdefaults": null,$/;"	z
xds_additional_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    xds_additional_builtins = ($/;"	v	class:Modula2Lexer
xds_additional_pseudo_builtins	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    xds_additional_pseudo_builtins = ($/;"	v	class:Modula2Lexer
xds_additional_reserved_words	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/modula2.py	/^    xds_additional_reserved_words = ($/;"	v	class:Modula2Lexer
xf86conf	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xf86conf": null,$/;"	z
xhtml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xhtml": "HTML",$/;"	s
xid_continue	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^xid_continue = u'0-9A-Z_a-z\\xaa\\xb5\\xb7\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d/;"	v
xid_start	plugged/vim-wakatime/packages/wakatime/packages/pygments/unistring.py	/^xid_start = u'A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\/;"	v
xinetd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xinetd": null,$/;"	z
xkb	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xkb": null,$/;"	z
xmath	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xmath": null,$/;"	z
xml	plugged/php.vim/attic/syntax.ini	/^xml = yes$/;"	k	section:extensions
xml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "xml": "XML",$/;"	s
xml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xml": "XML",$/;"	s
xml_decl_re	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^xml_decl_re = re.compile(r'\\s*<\\?xml[^>]*\\?>', re.I)$/;"	v
xmlreader	plugged/php.vim/attic/syntax.ini	/^xmlreader = yes$/;"	k	section:extensions
xmlrpc	plugged/php.vim/attic/syntax.ini	/^xmlrpc = no$/;"	k	section:extensions
xmlwriter	plugged/php.vim/attic/syntax.ini	/^xmlwriter = yes$/;"	k	section:extensions
xmodmap	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xmodmap": null,$/;"	z
xpm	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xpm": null,$/;"	z
xpm2	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xpm2": null,$/;"	z
xquery	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xquery": null,$/;"	z
xquery_parse_state	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/webmisc.py	/^    xquery_parse_state = []$/;"	v	class:XQueryLexer
xrange	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    xrange = range$/;"	v
xrange	plugged/vim-wakatime/packages/wakatime/packages/pygments/util.py	/^    xrange = xrange$/;"	v
xrange	plugged/vim-wakatime/packages/wakatime/packages/urllib3/connectionpool.py	/^xrange = six.moves.xrange$/;"	v
xs	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xs": null,$/;"	z
xsd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xsd": null,$/;"	z
xsl	plugged/php.vim/attic/syntax.ini	/^xsl = no$/;"	k	section:extensions
xslt	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xslt": null,$/;"	z
xtlang_bind_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    xtlang_bind_keywords = ($/;"	v	class:XtlangLexer
xtlang_functions	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    xtlang_functions = ($/;"	v	class:XtlangLexer
xtlang_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/lisp.py	/^    xtlang_keywords = ($/;"	v	class:XtlangLexer
xxd	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "xxd": null,$/;"	z
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yacc	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "yacc": null,$/;"	z
yaml	plugged/vim-wakatime/packages/wakatime/languages/default.json	/^  "yaml": "YAML"$/;"	s
yaml	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "yaml": "YAML",$/;"	s
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
z8a	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "z8a": null,$/;"	z
zA	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> zA :call far#change_collapse_all(-1)<cr>$/;"	m
za	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> za :call far#change_collapse_under_cursor(-1)<cr>$/;"	m
zc	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> zc :call far#change_collapse_under_cursor(1)<cr>$/;"	m
zephir_keywords	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    zephir_keywords = ['fetch', 'echo', 'isset', 'empty']$/;"	v	class:ZephirLexer
zephir_type	plugged/vim-wakatime/packages/wakatime/packages/pygments/lexers/php.py	/^    zephir_type = ['bit', 'bits', 'string']$/;"	v	class:ZephirLexer
zip	plugged/php.vim/attic/syntax.ini	/^zip = yes$/;"	k	section:extensions
zlib	plugged/php.vim/attic/syntax.ini	/^zlib = yes$/;"	k	section:extensions
zm	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> zm :call far#change_collapse_all(1)<cr>$/;"	m
zo	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> zo :call far#change_collapse_under_cursor(0)<cr>$/;"	m
zone	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    zone = "UTC"$/;"	v	class:UTC
zone	plugged/vim-wakatime/packages/wakatime/packages/pytz/__init__.py	/^    zone = None # to match the standard pytz API$/;"	v	class:_FixedOffset
zone	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    zone = None$/;"	v	class:BaseTzInfo
zone	plugged/vim-wakatime/packages/wakatime/packages/pytz/tzinfo.py	/^    zone = None$/;"	v	class:DstTzInfo
zr	plugged/far.vim/autoload/far.vim	/^    nnoremap <buffer><silent> zr :call far#change_collapse_all(0)<cr>$/;"	m
zsh	plugged/vim-wakatime/packages/wakatime/languages/vim.json	/^  "zsh": null$/;"	z
~	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> ~    :<C-U>exe <SID>BlameJump('~'.v:count1)<CR>$/;"	m
~	plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ~     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
